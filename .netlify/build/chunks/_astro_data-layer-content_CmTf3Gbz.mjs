const _astro_dataLayerContent = [["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.4.0","content-config-digest","49b06fbe810238f8","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://www.rainsberger.ca\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"where\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"css-variables\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,null],\"rehypePlugins\":[null,[null,{\"themes\":[{\"name\":\"Night Owl No Italics\",\"type\":\"dark\",\"colors\":{\"focusBorder\":\"#122d42\",\"foreground\":\"#d6deeb\",\"disabledForeground\":\"#cccccc80\",\"descriptionForeground\":\"#d6deebb3\",\"errorForeground\":\"#ef5350\",\"icon.foreground\":\"#c5c5c5\",\"contrastActiveBorder\":null,\"contrastBorder\":\"#122d42\",\"textBlockQuote.background\":\"#7f7f7f1a\",\"textBlockQuote.border\":\"#007acc80\",\"textCodeBlock.background\":\"#4f4f4f\",\"textLink.activeForeground\":\"#3794ff\",\"textLink.foreground\":\"#3794ff\",\"textPreformat.foreground\":\"#d7ba7d\",\"textSeparator.foreground\":\"#ffffff2e\",\"editor.background\":\"#23262f\",\"editor.foreground\":\"#d6deeb\",\"editorLineNumber.foreground\":\"#4b6479\",\"editorLineNumber.activeForeground\":\"#c5e4fd\",\"editorActiveLineNumber.foreground\":\"#c6c6c6\",\"editor.selectionBackground\":\"#1d3b53\",\"editor.inactiveSelectionBackground\":\"#7e57c25a\",\"editor.selectionHighlightBackground\":\"#5f7e9779\",\"editorError.foreground\":\"#ef5350\",\"editorWarning.foreground\":\"#b39554\",\"editorInfo.foreground\":\"#3794ff\",\"editorHint.foreground\":\"#eeeeeeb2\",\"problemsErrorIcon.foreground\":\"#ef5350\",\"problemsWarningIcon.foreground\":\"#b39554\",\"problemsInfoIcon.foreground\":\"#3794ff\",\"editor.findMatchBackground\":\"#5f7e9779\",\"editor.findMatchHighlightBackground\":\"#1085bb5d\",\"editor.findRangeHighlightBackground\":\"#3a3d4166\",\"editorLink.activeForeground\":\"#4e94ce\",\"editorLightBulb.foreground\":\"#ffcc00\",\"editorLightBulbAutoFix.foreground\":\"#75beff\",\"diffEditor.insertedTextBackground\":\"#99b76d23\",\"diffEditor.insertedTextBorder\":\"#c5e47833\",\"diffEditor.removedTextBackground\":\"#ef535033\",\"diffEditor.removedTextBorder\":\"#ef53504d\",\"diffEditor.insertedLineBackground\":\"#9bb95533\",\"diffEditor.removedLineBackground\":\"#ff000033\",\"editorStickyScroll.background\":\"#011627\",\"editorStickyScrollHover.background\":\"#2a2d2e\",\"editorInlayHint.background\":\"#5f7e97cc\",\"editorInlayHint.foreground\":\"#ffffff\",\"editorInlayHint.typeBackground\":\"#5f7e97cc\",\"editorInlayHint.typeForeground\":\"#ffffff\",\"editorInlayHint.parameterBackground\":\"#5f7e97cc\",\"editorInlayHint.parameterForeground\":\"#ffffff\",\"editorPane.background\":\"#011627\",\"editorGroup.emptyBackground\":\"#011627\",\"editorGroup.focusedEmptyBorder\":null,\"editorGroupHeader.tabsBackground\":\"var(--sl-color-black)\",\"editorGroupHeader.tabsBorder\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"editorGroupHeader.noTabsBackground\":\"#011627\",\"editorGroupHeader.border\":null,\"editorGroup.border\":\"#011627\",\"editorGroup.dropBackground\":\"#7e57c273\",\"editorGroup.dropIntoPromptForeground\":\"#d6deeb\",\"editorGroup.dropIntoPromptBackground\":\"#021320\",\"editorGroup.dropIntoPromptBorder\":null,\"sideBySideEditor.horizontalBorder\":\"#011627\",\"sideBySideEditor.verticalBorder\":\"#011627\",\"scrollbar.shadow\":\"#010b14\",\"scrollbarSlider.background\":\"#ffffff17\",\"scrollbarSlider.hoverBackground\":\"#ffffff40\",\"scrollbarSlider.activeBackground\":\"#084d8180\",\"panel.background\":\"#011627\",\"panel.border\":\"#5f7e97\",\"panelTitle.activeBorder\":\"#5f7e97\",\"panelTitle.activeForeground\":\"#ffffffcc\",\"panelTitle.inactiveForeground\":\"#d6deeb80\",\"panelSectionHeader.background\":\"#80808051\",\"terminal.background\":\"#011627\",\"widget.shadow\":\"#011627\",\"editorWidget.background\":\"#021320\",\"editorWidget.foreground\":\"#d6deeb\",\"editorWidget.border\":\"#5f7e97\",\"quickInput.background\":\"#021320\",\"quickInput.foreground\":\"#d6deeb\",\"quickInputTitle.background\":\"#ffffff1a\",\"pickerGroup.foreground\":\"#d1aaff\",\"pickerGroup.border\":\"#011627\",\"editor.hoverHighlightBackground\":\"#7e57c25a\",\"editorHoverWidget.background\":\"#011627\",\"editorHoverWidget.foreground\":\"#d6deeb\",\"editorHoverWidget.border\":\"#5f7e97\",\"editorHoverWidget.statusBarBackground\":\"#011a2f\",\"titleBar.activeBackground\":\"var(--sl-color-black)\",\"titleBar.activeForeground\":\"var(--sl-color-text)\",\"titleBar.inactiveBackground\":\"#010e1a\",\"titleBar.inactiveForeground\":\"#eeefff99\",\"titleBar.border\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"toolbar.hoverBackground\":\"#5a5d5e50\",\"toolbar.activeBackground\":\"#63666750\",\"tab.activeBackground\":\"#0b2942\",\"tab.unfocusedActiveBackground\":\"#0b2942\",\"tab.inactiveBackground\":\"#01111d\",\"tab.unfocusedInactiveBackground\":\"#01111d\",\"tab.activeForeground\":\"var(--sl-color-text)\",\"tab.inactiveForeground\":\"#5f7e97\",\"tab.unfocusedActiveForeground\":\"#5f7e97\",\"tab.unfocusedInactiveForeground\":\"#5f7e97\",\"tab.hoverBackground\":null,\"tab.unfocusedHoverBackground\":null,\"tab.hoverForeground\":null,\"tab.unfocusedHoverForeground\":null,\"tab.border\":\"#272b3b\",\"tab.lastPinnedBorder\":\"#585858\",\"tab.activeBorder\":\"transparent\",\"tab.unfocusedActiveBorder\":\"#262a39\",\"tab.activeBorderTop\":\"var(--sl-color-accent-high)\",\"tab.unfocusedActiveBorderTop\":null,\"tab.hoverBorder\":null,\"tab.unfocusedHoverBorder\":null,\"tab.activeModifiedBorder\":\"#3399cc\",\"tab.inactiveModifiedBorder\":\"#3399cc80\",\"tab.unfocusedActiveModifiedBorder\":\"#3399cc80\",\"tab.unfocusedInactiveModifiedBorder\":\"#3399cc40\",\"badge.background\":\"#5f7e97\",\"badge.foreground\":\"#ffffff\",\"button.background\":\"#7e57c2cc\",\"button.foreground\":\"#ffffffcc\",\"button.border\":\"#122d42\",\"button.separator\":\"#ffffff52\",\"button.hoverBackground\":\"#7e57c2\",\"button.secondaryBackground\":\"#3a3d41\",\"button.secondaryForeground\":\"#ffffff\",\"button.secondaryHoverBackground\":\"#46494e\",\"dropdown.background\":\"#011627\",\"dropdown.foreground\":\"#ffffffcc\",\"dropdown.border\":\"#5f7e97\",\"list.activeSelectionBackground\":\"#234d708c\",\"list.activeSelectionForeground\":\"#ffffff\",\"tree.indentGuidesStroke\":\"#585858\",\"input.background\":\"#0b253a\",\"input.foreground\":\"#ffffffcc\",\"input.placeholderForeground\":\"#5f7e97\",\"inputOption.activeBorder\":\"#ffffffcc\",\"inputOption.hoverBackground\":\"#5a5d5e80\",\"inputOption.activeBackground\":\"#122d4266\",\"inputOption.activeForeground\":\"#ffffff\",\"inputValidation.infoBackground\":\"#00589ef2\",\"inputValidation.infoBorder\":\"#64b5f6\",\"inputValidation.warningBackground\":\"#675700f2\",\"inputValidation.warningBorder\":\"#ffca28\",\"inputValidation.errorBackground\":\"#ab0300f2\",\"inputValidation.errorBorder\":\"#ef5350\",\"keybindingLabel.background\":\"#8080802b\",\"keybindingLabel.foreground\":\"#cccccc\",\"keybindingLabel.border\":\"#33333399\",\"keybindingLabel.bottomBorder\":\"#44444499\",\"menu.foreground\":\"#ffffffcc\",\"menu.background\":\"#011627\",\"menu.selectionForeground\":\"#ffffff\",\"menu.selectionBackground\":\"#234d708c\",\"menu.separatorBackground\":\"#606060\",\"editor.snippetTabstopHighlightBackground\":\"#7c7c74c\",\"editor.snippetFinalTabstopHighlightBorder\":\"#525252\",\"terminal.ansiBlack\":\"#011627\",\"terminal.ansiRed\":\"#ef5350\",\"terminal.ansiGreen\":\"#22da6e\",\"terminal.ansiYellow\":\"#c5e478\",\"terminal.ansiBlue\":\"#82aaff\",\"terminal.ansiMagenta\":\"#c792ea\",\"terminal.ansiCyan\":\"#21c7a8\",\"terminal.ansiWhite\":\"#ffffff\",\"terminal.ansiBrightBlack\":\"#575656\",\"terminal.ansiBrightRed\":\"#ef5350\",\"terminal.ansiBrightGreen\":\"#22da6e\",\"terminal.ansiBrightYellow\":\"#ffeb95\",\"terminal.ansiBrightBlue\":\"#82aaff\",\"terminal.ansiBrightMagenta\":\"#c792ea\",\"terminal.ansiBrightCyan\":\"#7fdbca\",\"terminal.ansiBrightWhite\":\"#ffffff\",\"selection.background\":\"#4373c2\",\"input.border\":\"#5f7e97\",\"punctuation.definition.generic.begin.html\":\"#ef5350f2\",\"progress.background\":\"#7e57c2\",\"breadcrumb.foreground\":\"#a599e9\",\"breadcrumb.focusForeground\":\"#ffffff\",\"breadcrumb.activeSelectionForeground\":\"#ffffff\",\"breadcrumbPicker.background\":\"#001122\",\"list.invalidItemForeground\":\"#975f94\",\"list.dropBackground\":\"#011627\",\"list.focusBackground\":\"#010d18\",\"list.focusForeground\":\"#ffffff\",\"list.highlightForeground\":\"#ffffff\",\"list.hoverBackground\":\"#011627\",\"list.hoverForeground\":\"#ffffff\",\"list.inactiveSelectionBackground\":\"#0e293f\",\"list.inactiveSelectionForeground\":\"#5f7e97\",\"activityBar.background\":\"#011627\",\"activityBar.dropBackground\":\"#5f7e97\",\"activityBar.foreground\":\"#5f7e97\",\"activityBar.border\":\"#011627\",\"activityBarBadge.background\":\"#44596b\",\"activityBarBadge.foreground\":\"#ffffff\",\"sideBar.background\":\"#011627\",\"sideBar.foreground\":\"#89a4bb\",\"sideBar.border\":\"#011627\",\"sideBarTitle.foreground\":\"#5f7e97\",\"sideBarSectionHeader.background\":\"#011627\",\"sideBarSectionHeader.foreground\":\"#5f7e97\",\"editorCursor.foreground\":\"#80a4c2\",\"editor.wordHighlightBackground\":\"#f6bbe533\",\"editor.wordHighlightStrongBackground\":\"#e2a2f433\",\"editor.lineHighlightBackground\":\"#0003\",\"editor.rangeHighlightBackground\":\"#7e57c25a\",\"editorIndentGuide.background\":\"#5e81ce52\",\"editorIndentGuide.activeBackground\":\"#7e97ac\",\"editorRuler.foreground\":\"#5e81ce52\",\"editorCodeLens.foreground\":\"#5e82ceb4\",\"editorBracketMatch.background\":\"#5f7e974d\",\"editorOverviewRuler.currentContentForeground\":\"#7e57c2\",\"editorOverviewRuler.incomingContentForeground\":\"#7e57c2\",\"editorOverviewRuler.commonContentForeground\":\"#7e57c2\",\"editorGutter.background\":\"#011627\",\"editorGutter.modifiedBackground\":\"#e2b93d\",\"editorGutter.addedBackground\":\"#9ccc65\",\"editorGutter.deletedBackground\":\"#ef5350\",\"editorSuggestWidget.background\":\"#2c3043\",\"editorSuggestWidget.border\":\"#2b2f40\",\"editorSuggestWidget.foreground\":\"#d6deeb\",\"editorSuggestWidget.highlightForeground\":\"#ffffff\",\"editorSuggestWidget.selectedBackground\":\"#5f7e97\",\"debugExceptionWidget.background\":\"#011627\",\"debugExceptionWidget.border\":\"#5f7e97\",\"editorMarkerNavigation.background\":\"#0b2942\",\"editorMarkerNavigationError.background\":\"#ef5350\",\"editorMarkerNavigationWarning.background\":\"#ffca28\",\"peekView.border\":\"#5f7e97\",\"peekViewEditor.background\":\"#011627\",\"peekViewEditor.matchHighlightBackground\":\"#7e57c25a\",\"peekViewResult.background\":\"#011627\",\"peekViewResult.fileForeground\":\"#5f7e97\",\"peekViewResult.lineForeground\":\"#5f7e97\",\"peekViewResult.matchHighlightBackground\":\"#ffffffcc\",\"peekViewResult.selectionBackground\":\"#2e3250\",\"peekViewResult.selectionForeground\":\"#5f7e97\",\"peekViewTitle.background\":\"#011627\",\"peekViewTitleDescription.foreground\":\"#697098\",\"peekViewTitleLabel.foreground\":\"#5f7e97\",\"merge.currentHeaderBackground\":\"#5f7e97\",\"merge.incomingHeaderBackground\":\"#7e57c25a\",\"statusBar.background\":\"#011627\",\"statusBar.foreground\":\"#5f7e97\",\"statusBar.border\":\"#262a39\",\"statusBar.debuggingBackground\":\"#202431\",\"statusBar.debuggingBorder\":\"#1f2330\",\"statusBar.noFolderBackground\":\"#011627\",\"statusBar.noFolderBorder\":\"#25293a\",\"statusBarItem.activeBackground\":\"#202431\",\"statusBarItem.hoverBackground\":\"#202431\",\"statusBarItem.prominentBackground\":\"#202431\",\"statusBarItem.prominentHoverBackground\":\"#202431\",\"notifications.background\":\"#01111d\",\"notifications.border\":\"#262a39\",\"notificationCenter.border\":\"#262a39\",\"notificationToast.border\":\"#262a39\",\"notifications.foreground\":\"#ffffffcc\",\"notificationLink.foreground\":\"#80cbc4\",\"extensionButton.prominentForeground\":\"#ffffffcc\",\"extensionButton.prominentBackground\":\"#7e57c2cc\",\"extensionButton.prominentHoverBackground\":\"#7e57c2\",\"terminal.selectionBackground\":\"#1b90dd4d\",\"terminalCursor.background\":\"#234d70\",\"debugToolBar.background\":\"#011627\",\"welcomePage.buttonBackground\":\"#011627\",\"welcomePage.buttonHoverBackground\":\"#011627\",\"walkThrough.embeddedEditorBackground\":\"#011627\",\"gitDecoration.modifiedResourceForeground\":\"#a2bffc\",\"gitDecoration.deletedResourceForeground\":\"#ef535090\",\"gitDecoration.untrackedResourceForeground\":\"#c5e478ff\",\"gitDecoration.ignoredResourceForeground\":\"#395a75\",\"gitDecoration.conflictingResourceForeground\":\"#ffeb95cc\",\"source.elm\":\"#5f7e97\",\"string.quoted.single.js\":\"#ffffff\",\"meta.objectliteral.js\":\"#82aaff\"},\"fg\":\"#d6deeb\",\"bg\":\"#23262f\",\"semanticHighlighting\":false,\"settings\":[{\"name\":\"Changed\",\"scope\":[\"markup.changed\",\"meta.diff.header.git\",\"meta.diff.header.from-file\",\"meta.diff.header.to-file\"],\"settings\":{\"foreground\":\"#a2bffc\"}},{\"name\":\"Deleted\",\"scope\":[\"markup.deleted.diff\"],\"settings\":{\"foreground\":\"#f27775fe\"}},{\"name\":\"Inserted\",\"scope\":[\"markup.inserted.diff\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Global settings\",\"settings\":{\"background\":\"#011627\",\"foreground\":\"#d6deeb\"}},{\"name\":\"Comment\",\"scope\":[\"comment\"],\"settings\":{\"foreground\":\"#919f9f\",\"fontStyle\":\"\"}},{\"name\":\"String\",\"scope\":[\"string\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"String Quoted\",\"scope\":[\"string.quoted\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"Support Constant Math\",\"scope\":[\"support.constant.math\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Number\",\"scope\":[\"constant.numeric\",\"constant.character.numeric\"],\"settings\":{\"foreground\":\"#f78c6c\",\"fontStyle\":\"\"}},{\"name\":\"Built-in constant\",\"scope\":[\"constant.language\",\"punctuation.definition.constant\",\"variable.other.constant\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"User-defined constant\",\"scope\":[\"constant.character\",\"constant.other\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Constant Character Escape\",\"scope\":[\"constant.character.escape\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"RegExp String\",\"scope\":[\"string.regexp\",\"string.regexp keyword.other\"],\"settings\":{\"foreground\":\"#5ca7e4\"}},{\"name\":\"Comma in functions\",\"scope\":[\"meta.function punctuation.separator.comma\"],\"settings\":{\"foreground\":\"#889fb2\"}},{\"name\":\"Variable\",\"scope\":[\"variable\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Keyword\",\"scope\":[\"punctuation.accessor\",\"keyword\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Storage\",\"scope\":[\"storage\",\"meta.var.expr\",\"meta.class meta.method.declaration meta.var.expr storage.type.js\",\"storage.type.property.js\",\"storage.type.property.ts\",\"storage.type.property.tsx\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type.function.arrow.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Class name\",\"scope\":[\"entity.name.class\",\"meta.class entity.name.type.class\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Inherited class\",\"scope\":[\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Function name\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Meta Tag\",\"scope\":[\"punctuation.definition.tag\",\"meta.tag\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"HTML Tag names\",\"scope\":[\"entity.name.tag\",\"meta.tag.other.html\",\"meta.tag.other.js\",\"meta.tag.other.tsx\",\"entity.name.tag.tsx\",\"entity.name.tag.js\",\"entity.name.tag\",\"meta.tag.js\",\"meta.tag.tsx\",\"meta.tag.html\"],\"settings\":{\"foreground\":\"#caece6\",\"fontStyle\":\"\"}},{\"name\":\"Tag attribute\",\"scope\":[\"entity.other.attribute-name\"],\"settings\":{\"fontStyle\":\"\",\"foreground\":\"#c5e478\"}},{\"name\":\"Entity Name Tag Custom\",\"scope\":[\"entity.name.tag.custom\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Library (function & constant)\",\"scope\":[\"support.function\",\"support.constant\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Support Constant Property Value meta\",\"scope\":[\"support.constant.meta.property-value\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Library class/type\",\"scope\":[\"support.type\",\"support.class\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Support Variable DOM\",\"scope\":[\"support.variable.dom\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Invalid\",\"scope\":[\"invalid\"],\"settings\":{\"background\":\"#ff2c83\",\"foreground\":\"#ffffff\"}},{\"name\":\"Invalid deprecated\",\"scope\":[\"invalid.deprecated\"],\"settings\":{\"foreground\":\"#ffffff\",\"background\":\"#d3423e\"}},{\"name\":\"Keyword Operator\",\"scope\":[\"keyword.operator\"],\"settings\":{\"foreground\":\"#7fdbca\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Relational\",\"scope\":[\"keyword.operator.relational\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Assignment\",\"scope\":[\"keyword.operator.assignment\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Arithmetic\",\"scope\":[\"keyword.operator.arithmetic\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Bitwise\",\"scope\":[\"keyword.operator.bitwise\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Increment\",\"scope\":[\"keyword.operator.increment\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Ternary\",\"scope\":[\"keyword.operator.ternary\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Double-Slashed Comment\",\"scope\":[\"comment.line.double-slash\"],\"settings\":{\"foreground\":\"#919f9f\"}},{\"name\":\"Object\",\"scope\":[\"object\"],\"settings\":{\"foreground\":\"#cdebf7\"}},{\"name\":\"Null\",\"scope\":[\"constant.language.null\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Meta Brace\",\"scope\":[\"meta.brace\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Meta Delimiter Period\",\"scope\":[\"meta.delimiter.period\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Punctuation Definition String\",\"scope\":[\"punctuation.definition.string\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Punctuation Definition String Markdown\",\"scope\":[\"punctuation.definition.string.begin.markdown\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Boolean\",\"scope\":[\"constant.language.boolean\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Object Comma\",\"scope\":[\"object.comma\"],\"settings\":{\"foreground\":\"#ffffff\"}},{\"name\":\"Variable Parameter Function\",\"scope\":[\"variable.parameter.function\"],\"settings\":{\"foreground\":\"#7fdbca\",\"fontStyle\":\"\"}},{\"name\":\"Support Type Property Name & entity name tags\",\"scope\":[\"support.type.vendor.property-name\",\"support.constant.vendor.property-value\",\"support.type.property-name\",\"meta.property-list entity.name.tag\"],\"settings\":{\"foreground\":\"#80cbc4\",\"fontStyle\":\"\"}},{\"name\":\"Entity Name tag reference in stylesheets\",\"scope\":[\"meta.property-list entity.name.tag.reference\"],\"settings\":{\"foreground\":\"#57eaf1\"}},{\"name\":\"Constant Other Color RGB Value Punctuation Definition Constant\",\"scope\":[\"constant.other.color.rgb-value punctuation.definition.constant\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Constant Other Color\",\"scope\":[\"constant.other.color\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Keyword Other Unit\",\"scope\":[\"keyword.other.unit\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Meta Selector\",\"scope\":[\"meta.selector\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Entity Other Attribute Name Id\",\"scope\":[\"entity.other.attribute-name.id\"],\"settings\":{\"foreground\":\"#fad430\"}},{\"name\":\"Meta Property Name\",\"scope\":[\"meta.property-name\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Doctypes\",\"scope\":[\"entity.name.tag.doctype\",\"meta.tag.sgml.doctype\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Punctuation Definition Parameters\",\"scope\":[\"punctuation.definition.parameters\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Keyword Control Operator\",\"scope\":[\"keyword.control.operator\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Keyword Operator Logical\",\"scope\":[\"keyword.operator.logical\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Variable Instances\",\"scope\":[\"variable.instance\",\"variable.other.instance\",\"variable.readwrite.instance\",\"variable.other.readwrite.instance\",\"variable.other.property\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Variable Property Other object property\",\"scope\":[\"variable.other.object.property\"],\"settings\":{\"foreground\":\"#faf39f\",\"fontStyle\":\"\"}},{\"name\":\"Variable Property Other object\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Entity Name Function\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#82aaff\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Comparison, returns, imports, and Keyword Operator Ruby\",\"scope\":[\"keyword.control.conditional.js\",\"keyword.operator.comparison\",\"keyword.control.flow.js\",\"keyword.control.flow.ts\",\"keyword.control.flow.tsx\",\"keyword.control.ruby\",\"keyword.control.def.ruby\",\"keyword.control.loop.js\",\"keyword.control.loop.ts\",\"keyword.control.import.js\",\"keyword.control.import.ts\",\"keyword.control.import.tsx\",\"keyword.control.from.js\",\"keyword.control.from.ts\",\"keyword.control.from.tsx\",\"keyword.control.conditional.js\",\"keyword.control.conditional.ts\",\"keyword.control.switch.js\",\"keyword.control.switch.ts\",\"keyword.operator.instanceof.js\",\"keyword.operator.expression.instanceof.ts\",\"keyword.operator.expression.instanceof.tsx\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Support Constant, `new` keyword, Special Method Keyword, `debugger`, other keywords\",\"scope\":[\"support.constant\",\"keyword.other.special-method\",\"keyword.other.new\",\"keyword.other.debugger\",\"keyword.control\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Support Function\",\"scope\":[\"support.function\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Invalid Broken\",\"scope\":[\"invalid.broken\"],\"settings\":{\"foreground\":\"#989da0\",\"background\":\"#F78C6C\"}},{\"name\":\"Invalid Unimplemented\",\"scope\":[\"invalid.unimplemented\"],\"settings\":{\"background\":\"#8BD649\",\"foreground\":\"#ffffff\"}},{\"name\":\"Invalid Illegal\",\"scope\":[\"invalid.illegal\"],\"settings\":{\"foreground\":\"#ffffff\",\"background\":\"#ec5f67\"}},{\"name\":\"Language Variable\",\"scope\":[\"variable.language\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Support Variable Property\",\"scope\":[\"support.variable.property\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Variable Function\",\"scope\":[\"variable.function\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Variable Interpolation\",\"scope\":[\"variable.interpolation\"],\"settings\":{\"foreground\":\"#ef787f\"}},{\"name\":\"Meta Function Call\",\"scope\":[\"meta.function-call\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Punctuation Section Embedded\",\"scope\":[\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#e2817f\"}},{\"name\":\"Punctuation Tweaks\",\"scope\":[\"punctuation.terminator.expression\",\"punctuation.definition.arguments\",\"punctuation.definition.array\",\"punctuation.section.array\",\"meta.array\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"More Punctuation Tweaks\",\"scope\":[\"punctuation.definition.list.begin\",\"punctuation.definition.list.end\",\"punctuation.separator.arguments\",\"punctuation.definition.list\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Template Strings\",\"scope\":[\"string.template meta.template.expression\"],\"settings\":{\"foreground\":\"#e2817f\"}},{\"name\":\"Backtics(``) in Template Strings\",\"scope\":[\"string.template punctuation.definition.string\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Italics\",\"scope\":[\"italic\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"italic\"}},{\"name\":\"Bold\",\"scope\":[\"bold\"],\"settings\":{\"foreground\":\"#c5e478\",\"fontStyle\":\"bold\"}},{\"name\":\"Quote\",\"scope\":[\"quote\"],\"settings\":{\"foreground\":\"#969bb7\",\"fontStyle\":\"\"}},{\"name\":\"Raw Code\",\"scope\":[\"raw\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"CoffeScript Variable Assignment\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#31e1eb\"}},{\"name\":\"CoffeScript Parameter Function\",\"scope\":[\"variable.parameter.function.coffee\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"CoffeeScript Assignments\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"C# Readwrite Variables\",\"scope\":[\"variable.other.readwrite.cs\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C# Classes & Storage types\",\"scope\":[\"entity.name.type.class.cs\",\"storage.type.cs\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"C# Namespaces\",\"scope\":[\"entity.name.type.namespace.cs\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"C# Unquoted String Zone\",\"scope\":[\"string.unquoted.preprocessor.message.cs\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C# Region\",\"scope\":[\"punctuation.separator.hash.cs\",\"keyword.preprocessor.region.cs\",\"keyword.preprocessor.endregion.cs\"],\"settings\":{\"foreground\":\"#ffcb8b\",\"fontStyle\":\"bold\"}},{\"name\":\"C# Other Variables\",\"scope\":[\"variable.other.object.cs\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"C# Enum\",\"scope\":[\"entity.name.type.enum.cs\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Dart String\",\"scope\":[\"string.interpolated.single.dart\",\"string.interpolated.double.dart\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Dart Class\",\"scope\":[\"support.class.dart\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Tag names in Stylesheets\",\"scope\":[\"entity.name.tag.css\",\"entity.name.tag.less\",\"entity.name.tag.custom.css\",\"support.constant.property-value.css\"],\"settings\":{\"foreground\":\"#ff6d6d\",\"fontStyle\":\"\"}},{\"name\":\"Wildcard(*) selector in Stylesheets\",\"scope\":[\"entity.name.tag.wildcard.css\",\"entity.name.tag.wildcard.less\",\"entity.name.tag.wildcard.scss\",\"entity.name.tag.wildcard.sass\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"CSS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Attribute Name for CSS\",\"scope\":[\"meta.attribute-selector.css entity.other.attribute-name.attribute\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Elixir Classes\",\"scope\":[\"source.elixir support.type.elixir\",\"source.elixir meta.module.elixir entity.name.class.elixir\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Elixir Functions\",\"scope\":[\"source.elixir entity.name.function\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir Constants\",\"scope\":[\"source.elixir constant.other.symbol.elixir\",\"source.elixir constant.other.keywords.elixir\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Elixir String Punctuations\",\"scope\":[\"source.elixir punctuation.definition.string\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir\",\"scope\":[\"source.elixir variable.other.readwrite.module.elixir\",\"source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir Binary Punctuations\",\"scope\":[\"source.elixir .punctuation.binary.elixir\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Closure Constant Keyword\",\"scope\":[\"constant.keyword.clojure\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Go Function Calls\",\"scope\":[\"source.go meta.function-call.go\"],\"settings\":{\"foreground\":\"#dddddd\"}},{\"name\":\"Go Keywords\",\"scope\":[\"source.go keyword.package.go\",\"source.go keyword.import.go\",\"source.go keyword.function.go\",\"source.go keyword.type.go\",\"source.go keyword.struct.go\",\"source.go keyword.interface.go\",\"source.go keyword.const.go\",\"source.go keyword.var.go\",\"source.go keyword.map.go\",\"source.go keyword.channel.go\",\"source.go keyword.control.go\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Go Constants e.g. nil, string format (%s, %d, etc.)\",\"scope\":[\"source.go constant.language.go\",\"source.go constant.other.placeholder.go\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"C++ Functions\",\"scope\":[\"entity.name.function.preprocessor.cpp\",\"entity.scope.name.cpp\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"C++ Meta Namespace\",\"scope\":[\"meta.namespace-block.cpp\"],\"settings\":{\"foreground\":\"#e0dec6\"}},{\"name\":\"C++ Language Primitive Storage\",\"scope\":[\"storage.type.language.primitive.cpp\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"C++ Preprocessor Macro\",\"scope\":[\"meta.preprocessor.macro.cpp\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C++ Variable Parameter\",\"scope\":[\"variable.parameter\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Powershell Variables\",\"scope\":[\"variable.other.readwrite.powershell\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Powershell Function\",\"scope\":[\"support.function.powershell\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"ID Attribute Name in HTML\",\"scope\":[\"entity.other.attribute-name.id.html\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"HTML Punctuation Definition Tag\",\"scope\":[\"punctuation.definition.tag.html\"],\"settings\":{\"foreground\":\"#6ae9f0\"}},{\"name\":\"HTML Doctype\",\"scope\":[\"meta.tag.sgml.doctype.html\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Classes\",\"scope\":[\"meta.class entity.name.type.class.js\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"JavaScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.js\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"JavaScript Terminator\",\"scope\":[\"terminator.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Meta Punctuation Definition\",\"scope\":[\"meta.js punctuation.definition.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Entity Names in Code Documentations\",\"scope\":[\"entity.name.type.instance.jsdoc\",\"entity.name.type.instance.phpdoc\"],\"settings\":{\"foreground\":\"#889fb2\"}},{\"name\":\"Other Variables in Code Documentations\",\"scope\":[\"variable.other.jsdoc\",\"variable.other.phpdoc\"],\"settings\":{\"foreground\":\"#78ccf0\"}},{\"name\":\"JavaScript module imports and exports\",\"scope\":[\"variable.other.meta.import.js\",\"meta.import.js variable.other\",\"variable.other.meta.export.js\",\"meta.export.js variable.other\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Variable Parameter Function\",\"scope\":[\"variable.parameter.function.js\"],\"settings\":{\"foreground\":\"#8b96ea\"}},{\"name\":\"JavaScript[React] Variable Other Object\",\"scope\":[\"variable.other.object.js\",\"variable.other.object.jsx\",\"variable.object.property.js\",\"variable.object.property.jsx\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Variables\",\"scope\":[\"variable.js\",\"variable.other.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Entity Name Type\",\"scope\":[\"entity.name.type.js\",\"entity.name.type.module.js\"],\"settings\":{\"foreground\":\"#ffcb8b\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Support Classes\",\"scope\":[\"support.class.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JSON Property Names\",\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"JSON Support Constants\",\"scope\":[\"support.constant.json\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"JSON Property values (string)\",\"scope\":[\"meta.structure.dictionary.value.json string.quoted.double\"],\"settings\":{\"foreground\":\"#c789d6\"}},{\"name\":\"Strings in JSON values\",\"scope\":[\"string.quoted.double.json punctuation.definition.string.json\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Specific JSON Property values like null\",\"scope\":[\"meta.structure.dictionary.json meta.structure.dictionary.value constant.language\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"JavaScript Other Variable\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Ruby Variables\",\"scope\":[\"variable.other.ruby\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Ruby Class\",\"scope\":[\"entity.name.type.class.ruby\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"Ruby Hashkeys\",\"scope\":[\"constant.language.symbol.hashkey.ruby\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"LESS Tag names\",\"scope\":[\"entity.name.tag.less\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"LESS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Attribute Name for LESS\",\"scope\":[\"meta.attribute-selector.less entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Markdown Headings\",\"scope\":[\"markup.heading.markdown\",\"markup.heading.setext.1.markdown\",\"markup.heading.setext.2.markdown\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown Italics\",\"scope\":[\"markup.italic.markdown\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"italic\"}},{\"name\":\"Markdown Bold\",\"scope\":[\"markup.bold.markdown\"],\"settings\":{\"foreground\":\"#c5e478\",\"fontStyle\":\"bold\"}},{\"name\":\"Markdown Quote + others\",\"scope\":[\"markup.quote.markdown\"],\"settings\":{\"foreground\":\"#969bb7\",\"fontStyle\":\"\"}},{\"name\":\"Markdown Raw Code + others\",\"scope\":[\"markup.inline.raw.markdown\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Markdown Links\",\"scope\":[\"markup.underline.link.markdown\",\"markup.underline.link.image.markdown\"],\"settings\":{\"foreground\":\"#ff869a\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Link Title and Description\",\"scope\":[\"string.other.link.title.markdown\",\"string.other.link.description.markdown\"],\"settings\":{\"foreground\":\"#d6deeb\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Punctuation\",\"scope\":[\"punctuation.definition.string.markdown\",\"punctuation.definition.string.begin.markdown\",\"punctuation.definition.string.end.markdown\",\"meta.link.inline.markdown punctuation.definition.string\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown MetaData Punctuation\",\"scope\":[\"punctuation.definition.metadata.markdown\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Markdown List Punctuation\",\"scope\":[\"beginning.punctuation.definition.list.markdown\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown Inline Raw String\",\"scope\":[\"markup.inline.raw.string.markdown\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"PHP Variables\",\"scope\":[\"variable.other.php\"],\"settings\":{\"foreground\":\"#bec5d4\"}},{\"name\":\"Support Classes in PHP\",\"scope\":[\"support.class.php\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Punctuations in PHP function calls\",\"scope\":[\"meta.function-call.php punctuation\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"PHP Global Variables\",\"scope\":[\"variable.other.global.php\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Declaration Punctuation in PHP Global Variables\",\"scope\":[\"variable.other.global.php punctuation.definition.variable\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Language Constants in Python\",\"scope\":[\"constant.language.python\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Python Function Parameter and Arguments\",\"scope\":[\"variable.parameter.function.python\",\"meta.function-call.arguments.python\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Python Function Call\",\"scope\":[\"meta.function-call.python\",\"meta.function-call.generic.python\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"Punctuations in Python\",\"scope\":[\"punctuation.python\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Decorator Functions in Python\",\"scope\":[\"entity.name.function.decorator.python\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Python Language Variable\",\"scope\":[\"source.python variable.language.special\"],\"settings\":{\"foreground\":\"#8eace3\"}},{\"name\":\"Python import control keyword\",\"scope\":[\"keyword.control\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"SCSS Variable\",\"scope\":[\"variable.scss\",\"variable.sass\",\"variable.parameter.url.scss\",\"variable.parameter.url.sass\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#bec5d4\"}},{\"name\":\"Attribute Name for SASS\",\"scope\":[\"meta.attribute-selector.scss entity.other.attribute-name.attribute\",\"meta.attribute-selector.sass entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Tag names in SASS\",\"scope\":[\"entity.name.tag.scss\",\"entity.name.tag.sass\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"SASS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.scss\",\"keyword.other.unit.sass\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"TypeScript[React] Variables and Object Properties\",\"scope\":[\"variable.other.readwrite.alias.ts\",\"variable.other.readwrite.alias.tsx\",\"variable.other.readwrite.ts\",\"variable.other.readwrite.tsx\",\"variable.other.object.ts\",\"variable.other.object.tsx\",\"variable.object.property.ts\",\"variable.object.property.tsx\",\"variable.other.ts\",\"variable.other.tsx\",\"variable.tsx\",\"variable.ts\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript[React] Entity Name Types\",\"scope\":[\"entity.name.type.ts\",\"entity.name.type.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript[React] Node Classes\",\"scope\":[\"support.class.node.ts\",\"support.class.node.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"TypeScript[React] Entity Name Types as Parameters\",\"scope\":[\"meta.type.parameters.ts entity.name.type\",\"meta.type.parameters.tsx entity.name.type\"],\"settings\":{\"foreground\":\"#889fb2\"}},{\"name\":\"TypeScript[React] Import/Export Punctuations\",\"scope\":[\"meta.import.ts punctuation.definition.block\",\"meta.import.tsx punctuation.definition.block\",\"meta.export.ts punctuation.definition.block\",\"meta.export.tsx punctuation.definition.block\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.decorator punctuation.decorator.ts\",\"meta.decorator punctuation.decorator.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.tag.js meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"YAML Entity Name Tags\",\"scope\":[\"entity.name.tag.yaml\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"JavaScript Variable Other ReadWrite\",\"scope\":[\"variable.other.readwrite.js\",\"variable.parameter\"],\"settings\":{\"foreground\":\"#d7dbe0\"}},{\"name\":\"Support Class Component\",\"scope\":[\"support.class.component.js\",\"support.class.component.tsx\"],\"settings\":{\"foreground\":\"#f78c6c\",\"fontStyle\":\"\"}},{\"name\":\"Text nested in React tags\",\"scope\":[\"meta.jsx.children\",\"meta.jsx.children.js\",\"meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript Classes\",\"scope\":[\"meta.class entity.name.type.class.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript Entity Name Type\",\"scope\":[\"entity.name.type.tsx\",\"entity.name.type.module.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript Class Variable Keyword\",\"scope\":[\"meta.class.ts meta.var.expr.ts storage.type.ts\",\"meta.class.tsx meta.var.expr.tsx storage.type.tsx\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"TypeScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.ts\",\"meta.method.declaration storage.type.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"normalize font style of certain components\",\"scope\":[\"meta.property-list.css meta.property-value.css variable.other.less\",\"meta.property-list.scss variable.scss\",\"meta.property-list.sass variable.sass\",\"meta.brace\",\"keyword.operator.operator\",\"keyword.operator.or.regexp\",\"keyword.operator.expression.in\",\"keyword.operator.relational\",\"keyword.operator.assignment\",\"keyword.operator.comparison\",\"keyword.operator.type\",\"keyword.operator\",\"keyword\",\"punctuation.definintion.string\",\"punctuation\",\"variable.other.readwrite.js\",\"storage.type\",\"source.css\",\"string.quoted\"],\"settings\":{\"fontStyle\":\"\"}}],\"styleOverrides\":{\"frames\":{\"editorBackground\":\"var(--sl-color-gray-6)\",\"terminalBackground\":\"var(--sl-color-gray-6)\",\"editorActiveTabBackground\":\"var(--sl-color-gray-6)\",\"terminalTitlebarDotsForeground\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"terminalTitlebarDotsOpacity\":\"0.75\",\"inlineButtonForeground\":\"var(--sl-color-text)\",\"frameBoxShadowCssValue\":\"none\"},\"textMarkers\":{\"markBackground\":\"#ffffff17\",\"markBorderColor\":\"#ffffff40\"}}},{\"name\":\"Night Owl Light\",\"type\":\"light\",\"colors\":{\"focusBorder\":\"#93a1a1\",\"foreground\":\"#403f53\",\"disabledForeground\":\"#61616180\",\"descriptionForeground\":\"#403f53\",\"errorForeground\":\"#403f53\",\"icon.foreground\":\"#424242\",\"contrastActiveBorder\":null,\"contrastBorder\":null,\"textBlockQuote.background\":\"#7f7f7f1a\",\"textBlockQuote.border\":\"#007acc80\",\"textCodeBlock.background\":\"#dcdcdc66\",\"textLink.activeForeground\":\"#006ab1\",\"textLink.foreground\":\"#006ab1\",\"textPreformat.foreground\":\"#a31515\",\"textSeparator.foreground\":\"#0000002e\",\"editor.background\":\"#f6f7f9\",\"editor.foreground\":\"#403f53\",\"editorLineNumber.foreground\":\"#90a7b2\",\"editorLineNumber.activeForeground\":\"#403f53\",\"editorActiveLineNumber.foreground\":\"#0b216f\",\"editor.selectionBackground\":\"#e0e0e0\",\"editor.inactiveSelectionBackground\":\"#e0e0e080\",\"editor.selectionHighlightBackground\":\"#339cec33\",\"editorError.foreground\":\"#e64d49\",\"editorWarning.foreground\":\"#daaa01\",\"editorInfo.foreground\":\"#1a85ff\",\"editorHint.foreground\":\"#6c6c6c\",\"problemsErrorIcon.foreground\":\"#e64d49\",\"problemsWarningIcon.foreground\":\"#daaa01\",\"problemsInfoIcon.foreground\":\"#1a85ff\",\"editor.findMatchBackground\":\"#93a1a16c\",\"editor.findMatchHighlightBackground\":\"#93a1a16c\",\"editor.findRangeHighlightBackground\":\"#7497a633\",\"editorLink.activeForeground\":\"#0000ff\",\"editorLightBulb.foreground\":\"#ddb100\",\"editorLightBulbAutoFix.foreground\":\"#007acc\",\"diffEditor.insertedTextBackground\":\"#9ccc2c40\",\"diffEditor.insertedTextBorder\":null,\"diffEditor.removedTextBackground\":\"#ff000033\",\"diffEditor.removedTextBorder\":null,\"diffEditor.insertedLineBackground\":\"#9bb95533\",\"diffEditor.removedLineBackground\":\"#ff000033\",\"editorStickyScroll.background\":\"#fbfbfb\",\"editorStickyScrollHover.background\":\"#f0f0f0\",\"editorInlayHint.background\":\"#2aa29899\",\"editorInlayHint.foreground\":\"#f0f0f0\",\"editorInlayHint.typeBackground\":\"#2aa29899\",\"editorInlayHint.typeForeground\":\"#f0f0f0\",\"editorInlayHint.parameterBackground\":\"#2aa29899\",\"editorInlayHint.parameterForeground\":\"#f0f0f0\",\"editorPane.background\":\"#fbfbfb\",\"editorGroup.emptyBackground\":null,\"editorGroup.focusedEmptyBorder\":null,\"editorGroupHeader.tabsBackground\":\"var(--sl-color-gray-6)\",\"editorGroupHeader.tabsBorder\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"editorGroupHeader.noTabsBackground\":\"#f0f0f0\",\"editorGroupHeader.border\":null,\"editorGroup.border\":\"#f0f0f0\",\"editorGroup.dropBackground\":\"#2677cb2d\",\"editorGroup.dropIntoPromptForeground\":\"#403f53\",\"editorGroup.dropIntoPromptBackground\":\"#f0f0f0\",\"editorGroup.dropIntoPromptBorder\":null,\"sideBySideEditor.horizontalBorder\":\"#f0f0f0\",\"sideBySideEditor.verticalBorder\":\"#f0f0f0\",\"scrollbar.shadow\":\"#cccccc\",\"scrollbarSlider.background\":\"#0000001a\",\"scrollbarSlider.hoverBackground\":\"#00000055\",\"scrollbarSlider.activeBackground\":\"#00000099\",\"panel.background\":\"#f0f0f0\",\"panel.border\":\"#d9d9d9\",\"panelTitle.activeBorder\":\"#424242\",\"panelTitle.activeForeground\":\"#424242\",\"panelTitle.inactiveForeground\":\"#424242bf\",\"panelSectionHeader.background\":\"#80808051\",\"terminal.background\":\"#f6f6f6\",\"widget.shadow\":\"#d9d9d9\",\"editorWidget.background\":\"#f0f0f0\",\"editorWidget.foreground\":\"#403f53\",\"editorWidget.border\":\"#d9d9d9\",\"quickInput.background\":\"#f0f0f0\",\"quickInput.foreground\":\"#403f53\",\"quickInputTitle.background\":\"#0000000f\",\"pickerGroup.foreground\":\"#403f53\",\"pickerGroup.border\":\"#d9d9d9\",\"editor.hoverHighlightBackground\":\"#339cec33\",\"editorHoverWidget.background\":\"#f0f0f0\",\"editorHoverWidget.foreground\":\"#403f53\",\"editorHoverWidget.border\":\"#d9d9d9\",\"editorHoverWidget.statusBarBackground\":\"#e4e4e4\",\"titleBar.activeBackground\":\"var(--sl-color-gray-6)\",\"titleBar.activeForeground\":\"var(--sl-color-text)\",\"titleBar.inactiveBackground\":\"#f0f0f099\",\"titleBar.inactiveForeground\":\"#33333399\",\"titleBar.border\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"toolbar.hoverBackground\":\"#b8b8b850\",\"toolbar.activeBackground\":\"#a6a6a650\",\"tab.activeBackground\":\"#f6f6f6\",\"tab.unfocusedActiveBackground\":\"#f6f6f6\",\"tab.inactiveBackground\":\"#f0f0f0\",\"tab.unfocusedInactiveBackground\":\"#f0f0f0\",\"tab.activeForeground\":\"var(--sl-color-text)\",\"tab.inactiveForeground\":\"#403f53\",\"tab.unfocusedActiveForeground\":\"#403f53b3\",\"tab.unfocusedInactiveForeground\":\"#403f5380\",\"tab.hoverBackground\":null,\"tab.unfocusedHoverBackground\":null,\"tab.hoverForeground\":null,\"tab.unfocusedHoverForeground\":null,\"tab.border\":\"#f0f0f0\",\"tab.lastPinnedBorder\":\"#a9a9a9\",\"tab.activeBorder\":\"transparent\",\"tab.unfocusedActiveBorder\":null,\"tab.activeBorderTop\":\"var(--sl-color-accent)\",\"tab.unfocusedActiveBorderTop\":null,\"tab.hoverBorder\":null,\"tab.unfocusedHoverBorder\":null,\"tab.activeModifiedBorder\":\"#2aa298\",\"tab.inactiveModifiedBorder\":\"#93a1a1\",\"tab.unfocusedActiveModifiedBorder\":\"#93a1a1\",\"tab.unfocusedInactiveModifiedBorder\":\"#93a1a1\",\"badge.background\":\"#2aa298\",\"badge.foreground\":\"#f0f0f0\",\"button.background\":\"#2aa298\",\"button.foreground\":\"#f0f0f0\",\"button.border\":null,\"button.separator\":\"#f0f0f066\",\"button.hoverBackground\":\"#22827a\",\"button.secondaryBackground\":\"#5f6a79\",\"button.secondaryForeground\":\"#ffffff\",\"button.secondaryHoverBackground\":\"#4c5561\",\"dropdown.background\":\"#f0f0f0\",\"dropdown.foreground\":\"#403f53\",\"dropdown.border\":\"#d9d9d9\",\"list.activeSelectionBackground\":\"#d3e8f8\",\"list.activeSelectionForeground\":\"#403f53\",\"tree.indentGuidesStroke\":\"#a9a9a9\",\"input.background\":\"#f0f0f0\",\"input.foreground\":\"#403f53\",\"input.placeholderForeground\":\"#93a1a1\",\"inputOption.activeBorder\":\"#2aa298\",\"inputOption.hoverBackground\":\"#b8b8b850\",\"inputOption.activeBackground\":\"#93a1a133\",\"inputOption.activeForeground\":\"#000000\",\"inputValidation.infoBackground\":\"#f0f0f0\",\"inputValidation.infoBorder\":\"#d0d0d0\",\"inputValidation.warningBackground\":\"#daaa01\",\"inputValidation.warningBorder\":\"#e0af02\",\"inputValidation.errorBackground\":\"#f76e6e\",\"inputValidation.errorBorder\":\"#de3d3b\",\"keybindingLabel.background\":\"#dddddd66\",\"keybindingLabel.foreground\":\"#555555\",\"keybindingLabel.border\":\"#cccccc66\",\"keybindingLabel.bottomBorder\":\"#bbbbbb66\",\"menu.foreground\":\"#403f53\",\"menu.background\":\"#f0f0f0\",\"menu.selectionForeground\":\"#403f53\",\"menu.selectionBackground\":\"#d3e8f8\",\"menu.separatorBackground\":\"#d4d4d4\",\"editor.snippetTabstopHighlightBackground\":\"#0a326433\",\"editor.snippetFinalTabstopHighlightBorder\":\"#0a326480\",\"terminal.ansiBlack\":\"#403f53\",\"terminal.ansiRed\":\"#de3d3b\",\"terminal.ansiGreen\":\"#08916a\",\"terminal.ansiYellow\":\"#e0af02\",\"terminal.ansiBlue\":\"#288ed7\",\"terminal.ansiMagenta\":\"#d6438a\",\"terminal.ansiCyan\":\"#2aa298\",\"terminal.ansiWhite\":\"#f0f0f0\",\"terminal.ansiBrightBlack\":\"#403f53\",\"terminal.ansiBrightRed\":\"#de3d3b\",\"terminal.ansiBrightGreen\":\"#08916a\",\"terminal.ansiBrightYellow\":\"#daaa01\",\"terminal.ansiBrightBlue\":\"#288ed7\",\"terminal.ansiBrightMagenta\":\"#d6438a\",\"terminal.ansiBrightCyan\":\"#2aa298\",\"terminal.ansiBrightWhite\":\"#f0f0f0\",\"selection.background\":\"#7a8181ad\",\"notifications.background\":\"#f0f0f0\",\"notifications.foreground\":\"#403f53\",\"notificationLink.foreground\":\"#994cc3\",\"notifications.border\":\"#cccccc\",\"notificationCenter.border\":\"#cccccc\",\"notificationToast.border\":\"#cccccc\",\"notificationCenterHeader.foreground\":\"#403f53\",\"notificationCenterHeader.background\":\"#f0f0f0\",\"input.border\":\"#d9d9d9\",\"progressBar.background\":\"#2aa298\",\"list.inactiveSelectionBackground\":\"#e0e7ea\",\"list.inactiveSelectionForeground\":\"#403f53\",\"list.focusBackground\":\"#d3e8f8\",\"list.hoverBackground\":\"#d3e8f8\",\"list.focusForeground\":\"#403f53\",\"list.hoverForeground\":\"#403f53\",\"list.highlightForeground\":\"#403f53\",\"list.errorForeground\":\"#e64d49\",\"list.warningForeground\":\"#daaa01\",\"activityBar.background\":\"#f0f0f0\",\"activityBar.foreground\":\"#403f53\",\"activityBar.dropBackground\":\"#d0d0d0\",\"activityBarBadge.background\":\"#403f53\",\"activityBarBadge.foreground\":\"#f0f0f0\",\"activityBar.border\":\"#f0f0f0\",\"sideBar.background\":\"#f0f0f0\",\"sideBar.foreground\":\"#403f53\",\"sideBarTitle.foreground\":\"#403f53\",\"sideBar.border\":\"#f0f0f0\",\"editorGroup.background\":\"#f6f6f6\",\"editorCursor.foreground\":\"#90a7b2\",\"editor.wordHighlightBackground\":\"#339cec33\",\"editor.wordHighlightStrongBackground\":\"#007dd659\",\"editor.lineHighlightBackground\":\"#f0f0f0\",\"editor.rangeHighlightBackground\":\"#7497a633\",\"editorWhitespace.foreground\":\"#d9d9d9\",\"editorIndentGuide.background\":\"#d9d9d9\",\"editorCodeLens.foreground\":\"#403f53\",\"editorBracketMatch.background\":\"#d3e8f8\",\"editorBracketMatch.border\":\"#2aa298\",\"editorError.border\":\"#fbfbfb\",\"editorWarning.border\":\"#daaa01\",\"editorGutter.addedBackground\":\"#49d0c5\",\"editorGutter.modifiedBackground\":\"#6fbef6\",\"editorGutter.deletedBackground\":\"#f76e6e\",\"editorRuler.foreground\":\"#d9d9d9\",\"editorOverviewRuler.errorForeground\":\"#e64d49\",\"editorOverviewRuler.warningForeground\":\"#daaa01\",\"editorSuggestWidget.background\":\"#f0f0f0\",\"editorSuggestWidget.foreground\":\"#403f53\",\"editorSuggestWidget.highlightForeground\":\"#403f53\",\"editorSuggestWidget.selectedBackground\":\"#d3e8f8\",\"editorSuggestWidget.border\":\"#d9d9d9\",\"debugExceptionWidget.background\":\"#f0f0f0\",\"debugExceptionWidget.border\":\"#d9d9d9\",\"editorMarkerNavigation.background\":\"#d0d0d0\",\"editorMarkerNavigationError.background\":\"#f76e6e\",\"editorMarkerNavigationWarning.background\":\"#daaa01\",\"debugToolBar.background\":\"#f0f0f0\",\"extensionButton.prominentBackground\":\"#2aa298\",\"extensionButton.prominentForeground\":\"#f0f0f0\",\"statusBar.background\":\"#f0f0f0\",\"statusBar.border\":\"#f0f0f0\",\"statusBar.debuggingBackground\":\"#f0f0f0\",\"statusBar.debuggingForeground\":\"#403f53\",\"statusBar.foreground\":\"#403f53\",\"statusBar.noFolderBackground\":\"#f0f0f0\",\"statusBar.noFolderForeground\":\"#403f53\",\"peekView.border\":\"#d9d9d9\",\"peekViewEditor.background\":\"#f6f6f6\",\"peekViewEditorGutter.background\":\"#f6f6f6\",\"peekViewEditor.matchHighlightBackground\":\"#49d0c5\",\"peekViewResult.background\":\"#f0f0f0\",\"peekViewResult.fileForeground\":\"#403f53\",\"peekViewResult.lineForeground\":\"#403f53\",\"peekViewResult.matchHighlightBackground\":\"#49d0c5\",\"peekViewResult.selectionBackground\":\"#e0e7ea\",\"peekViewResult.selectionForeground\":\"#403f53\",\"peekViewTitle.background\":\"#f0f0f0\",\"peekViewTitleLabel.foreground\":\"#403f53\",\"peekViewTitleDescription.foreground\":\"#403f53\",\"terminal.foreground\":\"#403f53\"},\"fg\":\"#403f53\",\"bg\":\"#f6f7f9\",\"semanticHighlighting\":false,\"settings\":[{\"name\":\"Changed\",\"scope\":[\"markup.changed\",\"meta.diff.header.git\",\"meta.diff.header.from-file\",\"meta.diff.header.to-file\"],\"settings\":{\"foreground\":\"#556484\"}},{\"name\":\"Deleted\",\"scope\":[\"markup.deleted.diff\"],\"settings\":{\"foreground\":\"#ae3c3afd\"}},{\"name\":\"Inserted\",\"scope\":[\"markup.inserted.diff\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Global settings\",\"settings\":{\"background\":\"#011627\",\"foreground\":\"#403f53\"}},{\"name\":\"Comment\",\"scope\":[\"comment\"],\"settings\":{\"foreground\":\"#5f636f\"}},{\"name\":\"String\",\"scope\":[\"string\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"String Quoted\",\"scope\":[\"string.quoted\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#984e4d\"}},{\"name\":\"Support Constant Math\",\"scope\":[\"support.constant.math\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Number\",\"scope\":[\"constant.numeric\",\"constant.character.numeric\"],\"settings\":{\"foreground\":\"#aa0982\",\"fontStyle\":\"\"}},{\"name\":\"Built-in constant\",\"scope\":[\"constant.language\",\"punctuation.definition.constant\",\"variable.other.constant\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"User-defined constant\",\"scope\":[\"constant.character\",\"constant.other\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Constant Character Escape\",\"scope\":[\"constant.character.escape\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"RegExp String\",\"scope\":[\"string.regexp\",\"string.regexp keyword.other\"],\"settings\":{\"foreground\":\"#3a688f\"}},{\"name\":\"Comma in functions\",\"scope\":[\"meta.function punctuation.separator.comma\"],\"settings\":{\"foreground\":\"#4d667b\"}},{\"name\":\"Variable\",\"scope\":[\"variable\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Keyword\",\"scope\":[\"punctuation.accessor\",\"keyword\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Storage\",\"scope\":[\"storage\",\"meta.var.expr\",\"meta.class meta.method.declaration meta.var.expr storage.type.js\",\"storage.type.property.js\",\"storage.type.property.ts\",\"storage.type.property.tsx\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type.function.arrow.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Class name\",\"scope\":[\"entity.name.class\",\"meta.class entity.name.type.class\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Inherited class\",\"scope\":[\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Function name\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Meta Tag\",\"scope\":[\"punctuation.definition.tag\",\"meta.tag\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"HTML Tag names\",\"scope\":[\"entity.name.tag\",\"meta.tag.other.html\",\"meta.tag.other.js\",\"meta.tag.other.tsx\",\"entity.name.tag.tsx\",\"entity.name.tag.js\",\"entity.name.tag\",\"meta.tag.js\",\"meta.tag.tsx\",\"meta.tag.html\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Tag attribute\",\"scope\":[\"entity.other.attribute-name\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Entity Name Tag Custom\",\"scope\":[\"entity.name.tag.custom\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Library (function & constant)\",\"scope\":[\"support.function\",\"support.constant\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Support Constant Property Value meta\",\"scope\":[\"support.constant.meta.property-value\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Library class/type\",\"scope\":[\"support.type\",\"support.class\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Support Variable DOM\",\"scope\":[\"support.variable.dom\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Invalid\",\"scope\":[\"invalid\"],\"settings\":{\"foreground\":\"#bb2060\"}},{\"name\":\"Invalid deprecated\",\"scope\":[\"invalid.deprecated\"],\"settings\":{\"foreground\":\"#b23834\"}},{\"name\":\"Keyword Operator\",\"scope\":[\"keyword.operator\"],\"settings\":{\"foreground\":\"#096e72\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Relational\",\"scope\":[\"keyword.operator.relational\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Assignment\",\"scope\":[\"keyword.operator.assignment\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Arithmetic\",\"scope\":[\"keyword.operator.arithmetic\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Bitwise\",\"scope\":[\"keyword.operator.bitwise\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Increment\",\"scope\":[\"keyword.operator.increment\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Ternary\",\"scope\":[\"keyword.operator.ternary\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Double-Slashed Comment\",\"scope\":[\"comment.line.double-slash\"],\"settings\":{\"foreground\":\"#5d6376\"}},{\"name\":\"Object\",\"scope\":[\"object\"],\"settings\":{\"foreground\":\"#58656a\"}},{\"name\":\"Null\",\"scope\":[\"constant.language.null\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Meta Brace\",\"scope\":[\"meta.brace\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Meta Delimiter Period\",\"scope\":[\"meta.delimiter.period\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Punctuation Definition String\",\"scope\":[\"punctuation.definition.string\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Punctuation Definition String Markdown\",\"scope\":[\"punctuation.definition.string.begin.markdown\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Boolean\",\"scope\":[\"constant.language.boolean\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Object Comma\",\"scope\":[\"object.comma\"],\"settings\":{\"foreground\":\"#646464\"}},{\"name\":\"Variable Parameter Function\",\"scope\":[\"variable.parameter.function\"],\"settings\":{\"foreground\":\"#096e72\",\"fontStyle\":\"\"}},{\"name\":\"Support Type Property Name & entity name tags\",\"scope\":[\"support.type.vendor.property-name\",\"support.constant.vendor.property-value\",\"support.type.property-name\",\"meta.property-list entity.name.tag\"],\"settings\":{\"foreground\":\"#096e72\",\"fontStyle\":\"\"}},{\"name\":\"Entity Name tag reference in stylesheets\",\"scope\":[\"meta.property-list entity.name.tag.reference\"],\"settings\":{\"foreground\":\"#286d70\"}},{\"name\":\"Constant Other Color RGB Value Punctuation Definition Constant\",\"scope\":[\"constant.other.color.rgb-value punctuation.definition.constant\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Constant Other Color\",\"scope\":[\"constant.other.color\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Keyword Other Unit\",\"scope\":[\"keyword.other.unit\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Meta Selector\",\"scope\":[\"meta.selector\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Entity Other Attribute Name Id\",\"scope\":[\"entity.other.attribute-name.id\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Meta Property Name\",\"scope\":[\"meta.property-name\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Doctypes\",\"scope\":[\"entity.name.tag.doctype\",\"meta.tag.sgml.doctype\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Punctuation Definition Parameters\",\"scope\":[\"punctuation.definition.parameters\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Keyword Control Operator\",\"scope\":[\"keyword.control.operator\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Keyword Operator Logical\",\"scope\":[\"keyword.operator.logical\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"\"}},{\"name\":\"Variable Instances\",\"scope\":[\"variable.instance\",\"variable.other.instance\",\"variable.readwrite.instance\",\"variable.other.readwrite.instance\",\"variable.other.property\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Variable Property Other object property\",\"scope\":[\"variable.other.object.property\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Variable Property Other object\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Entity Name Function\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Keyword Operator Comparison, imports, returns and Keyword Operator Ruby\",\"scope\":[\"keyword.operator.comparison\",\"keyword.control.flow.js\",\"keyword.control.flow.ts\",\"keyword.control.flow.tsx\",\"keyword.control.ruby\",\"keyword.control.module.ruby\",\"keyword.control.class.ruby\",\"keyword.control.def.ruby\",\"keyword.control.loop.js\",\"keyword.control.loop.ts\",\"keyword.control.import.js\",\"keyword.control.import.ts\",\"keyword.control.import.tsx\",\"keyword.control.from.js\",\"keyword.control.from.ts\",\"keyword.control.from.tsx\",\"keyword.operator.instanceof.js\",\"keyword.operator.expression.instanceof.ts\",\"keyword.operator.expression.instanceof.tsx\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Control Conditional\",\"scope\":[\"keyword.control.conditional.js\",\"keyword.control.conditional.ts\",\"keyword.control.switch.js\",\"keyword.control.switch.ts\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"\"}},{\"name\":\"Support Constant, `new` keyword, Special Method Keyword, `debugger`, other keywords\",\"scope\":[\"support.constant\",\"keyword.other.special-method\",\"keyword.other.new\",\"keyword.other.debugger\",\"keyword.control\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Support Function\",\"scope\":[\"support.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Invalid Broken\",\"scope\":[\"invalid.broken\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Invalid Unimplemented\",\"scope\":[\"invalid.unimplemented\"],\"settings\":{\"foreground\":\"#486e26\"}},{\"name\":\"Invalid Illegal\",\"scope\":[\"invalid.illegal\"],\"settings\":{\"foreground\":\"#984e4d\"}},{\"name\":\"Language Variable\",\"scope\":[\"variable.language\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Support Variable Property\",\"scope\":[\"support.variable.property\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Variable Function\",\"scope\":[\"variable.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Variable Interpolation\",\"scope\":[\"variable.interpolation\"],\"settings\":{\"foreground\":\"#a64348\"}},{\"name\":\"Meta Function Call\",\"scope\":[\"meta.function-call\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Punctuation Section Embedded\",\"scope\":[\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#b23834\"}},{\"name\":\"Punctuation Tweaks\",\"scope\":[\"punctuation.terminator.expression\",\"punctuation.definition.arguments\",\"punctuation.definition.array\",\"punctuation.section.array\",\"meta.array\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"More Punctuation Tweaks\",\"scope\":[\"punctuation.definition.list.begin\",\"punctuation.definition.list.end\",\"punctuation.separator.arguments\",\"punctuation.definition.list\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Template Strings\",\"scope\":[\"string.template meta.template.expression\"],\"settings\":{\"foreground\":\"#b23834\"}},{\"name\":\"Backtics(``) in Template Strings\",\"scope\":[\"string.template punctuation.definition.string\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Italics\",\"scope\":[\"italic\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"italic\"}},{\"name\":\"Bold\",\"scope\":[\"bold\"],\"settings\":{\"foreground\":\"#3b61b0\",\"fontStyle\":\"bold\"}},{\"name\":\"Quote\",\"scope\":[\"quote\"],\"settings\":{\"foreground\":\"#5c6285\"}},{\"name\":\"Raw Code\",\"scope\":[\"raw\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"CoffeScript Variable Assignment\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#186e73\"}},{\"name\":\"CoffeScript Parameter Function\",\"scope\":[\"variable.parameter.function.coffee\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"CoffeeScript Assignments\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"C# Readwrite Variables\",\"scope\":[\"variable.other.readwrite.cs\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"C# Classes & Storage types\",\"scope\":[\"entity.name.type.class.cs\",\"storage.type.cs\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"C# Namespaces\",\"scope\":[\"entity.name.type.namespace.cs\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Tag names in Stylesheets\",\"scope\":[\"entity.name.tag.css\",\"entity.name.tag.less\",\"entity.name.tag.custom.css\",\"support.constant.property-value.css\"],\"settings\":{\"foreground\":\"#984e4d\",\"fontStyle\":\"\"}},{\"name\":\"Wildcard(*) selector in Stylesheets\",\"scope\":[\"entity.name.tag.wildcard.css\",\"entity.name.tag.wildcard.less\",\"entity.name.tag.wildcard.scss\",\"entity.name.tag.wildcard.sass\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"CSS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Attribute Name for CSS\",\"scope\":[\"meta.attribute-selector.css entity.other.attribute-name.attribute\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Elixir Classes\",\"scope\":[\"source.elixir support.type.elixir\",\"source.elixir meta.module.elixir entity.name.class.elixir\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir Functions\",\"scope\":[\"source.elixir entity.name.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir Constants\",\"scope\":[\"source.elixir constant.other.symbol.elixir\",\"source.elixir constant.other.keywords.elixir\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir String Punctuations\",\"scope\":[\"source.elixir punctuation.definition.string\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir\",\"scope\":[\"source.elixir variable.other.readwrite.module.elixir\",\"source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir Binary Punctuations\",\"scope\":[\"source.elixir .punctuation.binary.elixir\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Closure Constant Keyword\",\"scope\":[\"constant.keyword.clojure\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Go Function Calls\",\"scope\":[\"source.go meta.function-call.go\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Go Keywords\",\"scope\":[\"source.go keyword.package.go\",\"source.go keyword.import.go\",\"source.go keyword.function.go\",\"source.go keyword.type.go\",\"source.go keyword.struct.go\",\"source.go keyword.interface.go\",\"source.go keyword.const.go\",\"source.go keyword.var.go\",\"source.go keyword.map.go\",\"source.go keyword.channel.go\",\"source.go keyword.control.go\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Go Constants e.g. nil, string format (%s, %d, etc.)\",\"scope\":[\"source.go constant.language.go\",\"source.go constant.other.placeholder.go\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"C++ Functions\",\"scope\":[\"entity.name.function.preprocessor.cpp\",\"entity.scope.name.cpp\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"C++ Meta Namespace\",\"scope\":[\"meta.namespace-block.cpp\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"C++ Language Primitive Storage\",\"scope\":[\"storage.type.language.primitive.cpp\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"C++ Preprocessor Macro\",\"scope\":[\"meta.preprocessor.macro.cpp\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"C++ Variable Parameter\",\"scope\":[\"variable.parameter\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Powershell Variables\",\"scope\":[\"variable.other.readwrite.powershell\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Powershell Function\",\"scope\":[\"support.function.powershell\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"ID Attribute Name in HTML\",\"scope\":[\"entity.other.attribute-name.id.html\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"HTML Punctuation Definition Tag\",\"scope\":[\"punctuation.definition.tag.html\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"HTML Doctype\",\"scope\":[\"meta.tag.sgml.doctype.html\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"JavaScript Classes\",\"scope\":[\"meta.class entity.name.type.class.js\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"JavaScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.js\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"JavaScript Terminator\",\"scope\":[\"terminator.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Meta Punctuation Definition\",\"scope\":[\"meta.js punctuation.definition.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Entity Names in Code Documentations\",\"scope\":[\"entity.name.type.instance.jsdoc\",\"entity.name.type.instance.phpdoc\"],\"settings\":{\"foreground\":\"#4d667b\"}},{\"name\":\"Other Variables in Code Documentations\",\"scope\":[\"variable.other.jsdoc\",\"variable.other.phpdoc\"],\"settings\":{\"foreground\":\"#3e697c\"}},{\"name\":\"JavaScript module imports and exports\",\"scope\":[\"variable.other.meta.import.js\",\"meta.import.js variable.other\",\"variable.other.meta.export.js\",\"meta.export.js variable.other\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Variable Parameter Function\",\"scope\":[\"variable.parameter.function.js\"],\"settings\":{\"foreground\":\"#555ea2\"}},{\"name\":\"JavaScript[React] Variable Other Object\",\"scope\":[\"variable.other.object.js\",\"variable.other.object.jsx\",\"variable.object.property.js\",\"variable.object.property.jsx\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Variables\",\"scope\":[\"variable.js\",\"variable.other.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Entity Name Type\",\"scope\":[\"entity.name.type.js\",\"entity.name.type.module.js\"],\"settings\":{\"foreground\":\"#111111\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Support Classes\",\"scope\":[\"support.class.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JSON Property Names\",\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"JSON Support Constants\",\"scope\":[\"support.constant.json\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"JSON Property values (string)\",\"scope\":[\"meta.structure.dictionary.value.json string.quoted.double\"],\"settings\":{\"foreground\":\"#7c5686\"}},{\"name\":\"Strings in JSON values\",\"scope\":[\"string.quoted.double.json punctuation.definition.string.json\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Specific JSON Property values like null\",\"scope\":[\"meta.structure.dictionary.json meta.structure.dictionary.value constant.language\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"JavaScript Other Variable\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Ruby Variables\",\"scope\":[\"variable.other.ruby\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Ruby Class\",\"scope\":[\"entity.name.type.class.ruby\"],\"settings\":{\"foreground\":\"#984e4d\"}},{\"name\":\"Ruby Hashkeys\",\"scope\":[\"constant.language.symbol.hashkey.ruby\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Ruby Symbols\",\"scope\":[\"constant.language.symbol.ruby\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"LESS Tag names\",\"scope\":[\"entity.name.tag.less\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"LESS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Attribute Name for LESS\",\"scope\":[\"meta.attribute-selector.less entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Markdown Headings\",\"scope\":[\"markup.heading.markdown\",\"markup.heading.setext.1.markdown\",\"markup.heading.setext.2.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Markdown Italics\",\"scope\":[\"markup.italic.markdown\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"italic\"}},{\"name\":\"Markdown Bold\",\"scope\":[\"markup.bold.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\",\"fontStyle\":\"bold\"}},{\"name\":\"Markdown Quote + others\",\"scope\":[\"markup.quote.markdown\"],\"settings\":{\"foreground\":\"#5c6285\"}},{\"name\":\"Markdown Raw Code + others\",\"scope\":[\"markup.inline.raw.markdown\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Markdown Links\",\"scope\":[\"markup.underline.link.markdown\",\"markup.underline.link.image.markdown\"],\"settings\":{\"foreground\":\"#954f5a\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Link Title and Description\",\"scope\":[\"string.other.link.title.markdown\",\"string.other.link.description.markdown\"],\"settings\":{\"foreground\":\"#403f53\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Punctuation\",\"scope\":[\"punctuation.definition.string.markdown\",\"punctuation.definition.string.begin.markdown\",\"punctuation.definition.string.end.markdown\",\"meta.link.inline.markdown punctuation.definition.string\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Markdown MetaData Punctuation\",\"scope\":[\"punctuation.definition.metadata.markdown\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Markdown List Punctuation\",\"scope\":[\"beginning.punctuation.definition.list.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Markdown Inline Raw String\",\"scope\":[\"markup.inline.raw.string.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"PHP Variables\",\"scope\":[\"variable.other.php\",\"variable.other.property.php\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Support Classes in PHP\",\"scope\":[\"support.class.php\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Punctuations in PHP function calls\",\"scope\":[\"meta.function-call.php punctuation\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"PHP Global Variables\",\"scope\":[\"variable.other.global.php\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Declaration Punctuation in PHP Global Variables\",\"scope\":[\"variable.other.global.php punctuation.definition.variable\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Language Constants in Python\",\"scope\":[\"constant.language.python\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Python Function Parameter and Arguments\",\"scope\":[\"variable.parameter.function.python\",\"meta.function-call.arguments.python\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Python Function Call\",\"scope\":[\"meta.function-call.python\",\"meta.function-call.generic.python\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Punctuations in Python\",\"scope\":[\"punctuation.python\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Decorator Functions in Python\",\"scope\":[\"entity.name.function.decorator.python\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Python Language Variable\",\"scope\":[\"source.python variable.language.special\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Python import control keyword\",\"scope\":[\"keyword.control\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"SCSS Variable\",\"scope\":[\"variable.scss\",\"variable.sass\",\"variable.parameter.url.scss\",\"variable.parameter.url.sass\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Attribute Name for SASS\",\"scope\":[\"meta.attribute-selector.scss entity.other.attribute-name.attribute\",\"meta.attribute-selector.sass entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Tag names in SASS\",\"scope\":[\"entity.name.tag.scss\",\"entity.name.tag.sass\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"SASS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.scss\",\"keyword.other.unit.sass\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"TypeScript[React] Variables and Object Properties\",\"scope\":[\"variable.other.readwrite.alias.ts\",\"variable.other.readwrite.alias.tsx\",\"variable.other.readwrite.ts\",\"variable.other.readwrite.tsx\",\"variable.other.object.ts\",\"variable.other.object.tsx\",\"variable.object.property.ts\",\"variable.object.property.tsx\",\"variable.other.ts\",\"variable.other.tsx\",\"variable.tsx\",\"variable.ts\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript[React] Entity Name Types\",\"scope\":[\"entity.name.type.ts\",\"entity.name.type.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript[React] Node Classes\",\"scope\":[\"support.class.node.ts\",\"support.class.node.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"TypeScript[React] Entity Name Types as Parameters\",\"scope\":[\"meta.type.parameters.ts entity.name.type\",\"meta.type.parameters.tsx entity.name.type\"],\"settings\":{\"foreground\":\"#4d667b\"}},{\"name\":\"TypeScript[React] Import/Export Punctuations\",\"scope\":[\"meta.import.ts punctuation.definition.block\",\"meta.import.tsx punctuation.definition.block\",\"meta.export.ts punctuation.definition.block\",\"meta.export.tsx punctuation.definition.block\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.decorator punctuation.decorator.ts\",\"meta.decorator punctuation.decorator.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.tag.js meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"YAML Entity Name Tags\",\"scope\":[\"entity.name.tag.yaml\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"JavaScript Variable Other ReadWrite\",\"scope\":[\"variable.other.readwrite.js\",\"variable.parameter\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Support Class Component\",\"scope\":[\"support.class.component.js\",\"support.class.component.tsx\"],\"settings\":{\"foreground\":\"#aa0982\",\"fontStyle\":\"\"}},{\"name\":\"Text nested in React tags\",\"scope\":[\"meta.jsx.children\",\"meta.jsx.children.js\",\"meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript Classes\",\"scope\":[\"meta.class entity.name.type.class.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript Entity Name Type\",\"scope\":[\"entity.name.type.tsx\",\"entity.name.type.module.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript Class Variable Keyword\",\"scope\":[\"meta.class.ts meta.var.expr.ts storage.type.ts\",\"meta.class.tsx meta.var.expr.tsx storage.type.tsx\"],\"settings\":{\"foreground\":\"#76578b\"}},{\"name\":\"TypeScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.ts\",\"meta.method.declaration storage.type.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"normalize font style of certain components\",\"scope\":[\"meta.property-list.css meta.property-value.css variable.other.less\",\"meta.property-list.scss variable.scss\",\"meta.property-list.sass variable.sass\",\"meta.brace\",\"keyword.operator.operator\",\"keyword.operator.or.regexp\",\"keyword.operator.expression.in\",\"keyword.operator.relational\",\"keyword.operator.assignment\",\"keyword.operator.comparison\",\"keyword.operator.type\",\"keyword.operator\",\"keyword\",\"punctuation.definintion.string\",\"punctuation\",\"variable.other.readwrite.js\",\"storage.type\",\"source.css\",\"string.quoted\"],\"settings\":{\"fontStyle\":\"\"}}],\"styleOverrides\":{\"frames\":{\"editorBackground\":\"var(--sl-color-gray-7)\",\"terminalBackground\":\"var(--sl-color-gray-7)\",\"editorActiveTabBackground\":\"var(--sl-color-gray-7)\",\"terminalTitlebarDotsForeground\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"terminalTitlebarDotsOpacity\":\"0.75\",\"inlineButtonForeground\":\"var(--sl-color-text)\",\"frameBoxShadowCssValue\":\"none\"},\"textMarkers\":{\"markBackground\":\"#0000001a\",\"markBorderColor\":\"#00000055\"}}}],\"defaultLocale\":\"en\",\"styleOverrides\":{\"borderRadius\":\"0px\",\"borderWidth\":\"1px\",\"codePaddingBlock\":\"0.75rem\",\"codePaddingInline\":\"1rem\",\"codeFontFamily\":\"var(--__sl-font-mono)\",\"codeFontSize\":\"var(--sl-text-code)\",\"codeLineHeight\":\"var(--sl-line-height)\",\"uiFontFamily\":\"var(--__sl-font)\",\"textMarkers\":{\"lineDiffIndicatorMarginLeft\":\"0.25rem\",\"defaultChroma\":\"45\",\"backgroundOpacity\":\"60%\"}},\"plugins\":[{\"name\":\"Starlight Plugin\",\"hooks\":{}},{\"name\":\"astro-expressive-code\",\"hooks\":{}}]}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false},\"prefetch\":{\"prefetchAll\":true},\"i18n\":{\"defaultLocale\":\"en\",\"locales\":[\"en\"],\"routing\":{\"prefixDefaultLocale\":false,\"redirectToDefaultLocale\":false,\"fallbackType\":\"redirect\"}}}","docs",["Map",11,12,36,37,48,49,59,60,104,105,115,116,146,147,157,158,188,189,204,205,218,219,232,233,246,247,260,261,274,275,288,289,302,303,316,317,330,331,344,345,358,359,372,373,386,387,400,401,414,415,428,429,442,443,456,457,470,471,484,485,498,499,512,513,526,527,540,541,554,555,568,569,582,583,596,597,610,611,624,625,638,639,652,653,666,667,680,681,694,695,708,709,722,723,736,737,750,751,764,765,778,779,792,793,806,807,820,821,834,835,848,849,862,863,876,877,890,891,916,917,948,949,997,998,1045,1046,1072,1073,1114,1115,1142,1143,1178,1179,1206,1207,1266,1267,1308,1309,1341,1342,1351,1352,1362,1363,1373,1374,1384,1385,1406,1407,1442,1443,1480,1481,1524,1525,1580,1581],"404",{id:11,data:13,body:24,filePath:25,digest:26,rendered:27},{title:11,editUrl:14,head:15,template:16,hero:17,sidebar:21,pagefind:23,draft:14},false,[],"splash",{title:18,tagline:19,actions:20},"404 - Page not found.","This page may have moved or no longer exists.",[],{hidden:14,attrs:22},{},true,"Please try searching, or [head back home](/) and explore the site!","src/content/docs/404.md","a60e5084da2868ae",{html:28,metadata:29},"<p>Please try searching, or <a href=\"/\">head back home</a> and explore the site!</p>",{headings:30,localImagePaths:31,remoteImagePaths:32,frontmatter:33,imagePaths:35},[],[],[],{title:11,template:16,editUrl:14,hero:34},{title:18,tagline:19},[],"about",{id:36,data:38,body:45,filePath:46,digest:47,deferredRender:23},{title:39,description:40,editUrl:23,head:41,template:42,sidebar:43,pagefind:23,draft:14},"Sarah Rainsberger (@sarah11918)","Astro Core Maintainer 🚀 Docs Lead 📑 Technical Writer ✍️ Bird Photographer 🐦",[],"doc",{hidden:14,attrs:44},{},"import { LinkCard, Card, CardGrid } from '@astrojs/starlight/components';\nimport { YouTube } from 'astro-embed';\n\nSarah photographs birds, watches baseball, and writes docs!\n\n## Conference Bio\n\nSarah Rainsberger leads a large open source software documentation project with several maintainers and over 1000 community contributors. She brings a background in high school mathematics education, academic counseling, and curriculum development to her current technical writing and open source community building. In her spare time, she photographs birds. \n\n![Sarah onstage giving a conference talk with a slide reading 1000 contributors surrounded by hundreds of GitHub avatars](../../assets/keynote-1000.png)\n\n## Talks & Appearances\n{/* \n[![YouTube playlist of all videos](https://img.shields.io/badge/playlist_of_all_videos-YouTube-FF0000?style=for-the-badge&logo=youtube&logoColor=white)](https://youtube.com/playlist?list=PLowBAHWxr_2DgiS5maPN2wg96dmKho_yC&si=_ckXtTot6ApGcoMk) */}\n\nSpeaking about maintaining and contributing to open source projects with a particular emphasis on documentation, community building, and non-code contributions.\n\n<LinkCard title=\"YouTube playlist of talks\" href=\"https://youtube.com/playlist?list=PLowBAHWxr_2DgiS5maPN2wg96dmKho_yC&si=_ckXtTot6ApGcoMk\" />\n\n\n### Conference Talks\n\n📺 [Docs as Community Building](https://www.youtube.com/watch?v=MK4s-P3kqyA) - ViteConf 2024\n\n📺 [Stop writing docs; Start helping](https://www.youtube.com/watch?v=TvWxf13eDwY&list=PLowBAHWxr_2DgiS5maPN2wg96dmKho_yC&index=2) - Frontend Nation 2024\n\n📺 [One year of Starlight: Astro's community-built documentation theme](https://www.youtube.com/watch?v=j8K-ESJF814&list=PLowBAHWxr_2DgiS5maPN2wg96dmKho_yC&index=4) - Astro Together 2024\n\n📺 [Making effective contributions to open source documentation](https://www.youtube.com/watch?v=abw7-BfApMk) - Distribute Aid, Open Source Explorers 2024\n\n📺 [Stop writing docs; Start helping](https://www.youtube.com/watch?v=jcpkVJr-rUw&list=PLqGQbXn_GDmkOsHI7-Wrbv1GgAA4tJZhg&index=26) - ViteConf 2023\n\n📺 [Happy Contributors, High Standards: Pick two! Balancing quality and community in open source documenatation](https://www.youtube.com/watch?v=emgFALmCyrY&list=PLZAeFn6dfHpktOcWn5mQNOx5gYo6O7TR6&index=6) - Write the Docs Australia 2022\n\n📺 [Learning in the Browser](https://www.youtube.com/watch?v=5X-WEQflCL0&list=PLNG_1j3cPCaZZ7etkzWA7JfdmKWT0pMsa&index=9) - ReactConf 2021\n\n📺 [Jamstack in the Browser (Lightning Talk)](https://www.youtube.com/watch?v=tmKlWSIJbuo) - TheJam.dev 2022\n\n### Interviews / Appearances\n\n🎙️ Kelvin Omereshone's Twitter Space Jan 2023: Making Documentation Developers Love ([listen on YouTube](https://www.youtube.com/watch?v=YW4IfoJM30g)) / ([listen on Spotify](https://open.spotify.com/episode/5QYkgKtsneWhUAebPahIRJ?si=bfTpykAZRLWVBE3wvQiuzQ))\n\n🎙️ GitHub ReadME Podcast: [Episode 31: Bridging code and community](https://github.com/readme/podcast/code-and-community)\n\n📰 GitHub ReadME Project June 2023: [Non-code contributions are the secret to open source success](https://github.com/readme/featured/open-source-non-code-contributions) - Klint Finley\n\n🎙️ Hanselminutes Podcast September 2023: [Episode 911: Documentation as a path to Open Source](https://www.hanselminutes.com/911/documentation-as-a-path-to-open-source-with-sarah-rainsberger)\n\n📺 ViteConf 2023: [Community and Contributors Panel](https://www.youtube.com/watch?v=rqB7hy5lcmc&list=PLqGQbXn_GDmkOsHI7-Wrbv1GgAA4tJZhg&index=29) - Sarah Rainsberger, Brittney Postma, Anthony Fu, and Matias Capeletto, with This Dot Labs' Tracy Lee as host, discuss how to get involved in open source and foster healthier communities.\n\n\n## Open Source\n\nI am a core maintainer and the Docs Lead for [Astro](https://astro.build), an open source web framework. I also write and speak about managing and maintaining community-driven, open source documentation.\n\n![Astro badge contributions](https://astro.badg.es/v1/contributor/sarah11918.svg)\n\n### Astro Origin Story\n\nI am a former math teacher/tutor who started to learned to code in 2018 because I inherited a crappy website I volunteered to maintain for my community choir and only knew enough HTML to be dangerous. I started taking online HTML, CSS then eventually JavaScript and React courses through [Scrimba](https://scrimba.com). After I had taken all their \"boot camp\" courses, I was ready to convert my personal Jekyll blog to a JavaScript framework where I could actually build from the ground up and understand every file in my repo.\n\nThat's when I discovered Astro, which was *very* (very!) new and I had to make a choice: go with Gatsby which had a big community and tons of resources (since I was very new to web dev/Jamstack in general), or this new thing that no one had ever heard of but people were just starting to talk about which had a very small documentation site and an active, friendly, welcoming Discord. I figured Gatsby was the *safer* bet, but the Astro community won me over. \n\nBeing one of the first people to use Astro, and being there as even some of the earliest features were being actively developed, I may not have known very much about software development, but I knew a lot about how *Astro* worked. I found that as new, even very experienced devs came into the Discord asking for help with their projects, *I* was able to help them because of my familiarity with Astro.\n\nI spent hours every day in support threads, and testing out every feature and providing feedback. Although I was much more involved in how Astro worked (and sharing that knowledge with our community) rather than how it was built, eventually I became familiar enough with some aspects of the project code that I could contribute small fixes or improvements directly.\n\nI was invited to be a maintainer of the project because of my (mostly \"non-code\") contributions, and eventually was asked to first contribute as a technical writer (Who's using their English degree *now*!) and then eventually lead the entire documentation project... which is itself an Astro (Starlight) website.\n\nI'm now a core maintainer with significant responsibilities in several aspects of maintaining this open source project, which requires a LOT more than code to function! I have spoken about documentation, \"non-code contributions\" to open source, community building and.. all three: using documentation as community building for your open source project!\n\nIn fact, many of Astro's contributors and maintainers were first onboarded as *docs* contributors, including translators! Their familiarity with Astro through careful docs contributions (and, translators have to understand what you've written backwards and forwards to be able to express it in another language!) often gave them confidence to then begin making *code* contributions, because they understood how Astro worked. Astro Docs is a *great* place to contribute, even if it's your very first contribution to open source, and this is an initiative I have championed in my capacity as a community leader.\n\n## Personal\n\nIn my \"past life\" in Toronto, I helped hundreds of students through high school & university as a private tutor, teacher, academic advisor, school administrator and guidance / university admissions counsellor. I used several stylus-based tablet PCs for taking/making digital math notes long before tablets were a thing. I was also an active volunteer in the Ontario homeschooling and alternative edudation communities: writing, advising, and speaking at conferences.\n\nNow, from our island waterfront home in Atlantic Canada, I enjoy bird photography on our scenic boardwalk and am involved with local community choirs.\n\nOther personal interests include a good cappuccino, a new-to-me gin, watching Toronto Blue Jays baseball on PVR delay so we can skip commercials (no spoilers!), stylus-based gadgets (#ALLtheSamsung, plus many niche devices you've probably never heard of), and natural disaster movies where the rogue atmospheric physicist saves the day.\n\nMy home is currently Summerside, PEI, Canada / Epekwitk (though I will always be \"from Toronto\"). My actual physical location could be anywhere in the world as a constant travel companion to my loving husband Joe, with whom the epic \"Oshawa vs. Brampton\" battle is ongoing.\n\n## Hobbies and interests\n\n<CardGrid>\n\t<Card title=\"Nature Photography\" icon=\"instagram\">\n\tTaking [photos of birds](/photography/) and other nature subjects. [Photostream on Flickr](https://www.flickr.com/photos/sarahrainsberger/).\n\t</Card>\n\t<Card title=\"sBirb\" icon=\"twitter\">\n\tUsing and building [birding tools](/birding/) to enrich my own birding experience.\n\t</Card>\n  <Card title=\"Vocal music\" icon=\"seti:audio\">\n\t\tSinging choral and a cappella music while [managing choir tech](/choirtech/) in [community choirs and ensembles](https://www.youtube.com/playlist?list=PLowBAHWxr_2DdNpEhojRwVB0JTucgOo-4). High tech. Low alto.\n\t</Card>\n\t<Card title=\"Cloud-based development\" icon=\"laptop\">\n\t\tCoding entirely in the cloud with [no local dev environment](/blog/tags/no-local-dev-environment/) on a Chromebook and Android tablet.\n\t</Card>\n</CardGrid>","src/content/docs/about.mdx","b0ab3cb0b8b5effb","birding",{id:48,data:50,body:56,filePath:57,digest:58,deferredRender:23},{title:51,description:52,editUrl:23,head:53,template:42,sidebar:54,pagefind:23,draft:14},"Birding","The birding apps and tools I use",[],{hidden:14,attrs:55},{},"import { YouTube } from 'astro-embed';\n\nIn 2014 my [photography](/photography/) began to drift towards nature and birds. I started casually recording bird observations using the [Merlin birding app](https://merlin.allaboutbirds.org/) to identify and save observations locally. In 2018 I moved my observations over to [eBird.org](https://ebird.org) where you can find [my birding profile](https://ebird.org/profile/OTE3ODE4/world) (available to logged in users).\n\n## Participatory science\n\nBirding is great hobby that allows you to participate in [citizen science](https://en.wikipedia.org/wiki/Citizen_science) (also known by [the more inclusive \"community science\"](https://www.ecospark.ca/blog/q3yvjx673xfa12esi43295aosviyl2) since \"citizen\" is a term describing one's legal status within a jurisdiction). Your observations are used by research scientists to track and understand bird populations around the world.\n\nGlobal organizations like eBird and [iNaturalist](https://www.inaturalist.org/) connect your data with scientists and projects supporting education and biodiversity. Importantly for me, it's a hobby I can do wherever in the world I happen to be: from my own backyard to travelling around Europe.\n\n![Screenshot of an email from eBird with a collage of several bird photos in portrait mode, as if taken on a mobile phone with the text: Hi Sarah, Thank you for contributing photos to eBird and the Macaulay Library. This November, we released a new version of Photo ID in Merlin, and we wanted to extend our gratitude for the important part you played in the creation of this new resource. **1 of your photos were used to train Merlin to identify birds in photos.**](../../assets/your-photo-was-used.png)\n\nCanadians can also find [local citizen science initiatives to participate in at Birds Canada](https://www.birdscanada.org/you-can-help/citizen-science), organized by province. These range from continuous ongoing projects such as eBird checklists, targeted studies for one species of bird, and specific \"blitz\" days or weekends like the Christmas Bird Count or \"Global Big Day\" events.\n\n## Android Birding Apps\n\nThe following apps for identifying and observing birds can be downloaded from Google Play:\n\n  <ul>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.audubon.mobile.android\">Audubon</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=edu.cornell.birds.ebird\">eBird</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.labs.merlinbirdid.app\">Merlin</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=org.inaturalist.android\">iNaturalist</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.thenerdbirder.GoBird\">GoBird</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=de.tu_chemnitz.mi.kahst.birdnet\">BirdNET</a></li>\n  </ul>\n\n## sBirb\n\nAfter taking self-study courses at [Scrimba](https://scrimba.com/home) to learn JavaScript and React, I built [`sbirb`](https://sbirb.netlify.app/) in Astro and React to house my experiments working with the eBird API to fetch and display data in a way that is not available through eBird's website nor any other existing birding apps. It isn't pretty, but it works!\n\nI created this app specifically to track [**reported but not yet reviewed** rare or unusual bird sightings](https://sbirb.netlify.app/#unusual) so I could check on the status of my own observations and see when they were confirmed or denied. (Because reasons, this was otherwise impossible without direct access to the API.)\n\nOver time, I added other functions that **I** found useful when birding, such as a quick [\"show me a list of which birds have been recently reported in this area\"](https://sbirb.netlify.app/#recent) as a \"gut check\" when I think I've seen a certain bird that seems unusual for this time of year. If someone else has recently reported seeing that bird, then it's a safer bet that it is in fact the bird I think it is.\n\n<p>Watch 2 minutes of my React Conf 2021 talk \"Learning in the Browser\" where I describe building this tool as my very first React project!</p>\n    <YouTube \n        id=\"5X-WEQflCL0\" \n        params=\"start=186&end=343\"\n        title='Excerpt: How did I decide what to build? Solve a real problem you have!'\n        poster=\"https://lh3.googleusercontent.com/pw/AP1GczPqtri7_KSX0T1OMq6KrramYwQzdpIlfHdnvlNQmjcavNVF3FyzgI5S3lJxOP-6QNqo2IgbZ_lN6AYcgDLfTuUdU5M9YvyT10TGX64scBDmiRQB_wrv1EA5blbveINYjnFd2hdIrVtE6Ok7LQCbZ-PPlw=w1191-h655-s-no-gm?authuser=0\"\n        />","src/content/docs/birding.mdx","5d6463cfab23dfce","choirtech",{id:59,data:61,body:67,filePath:68,digest:69,rendered:70},{title:62,description:63,editUrl:23,head:64,template:42,sidebar:65,pagefind:23,draft:14},"Choir Tech","Tips for choir apps and resources.",[],{hidden:14,attrs:66},{},"These are some of the tools that can help your choir!\n    \n## Android\n\n<h3><a href=\"https://play.google.com/store/apps/details?id=com.zubersoft.mobilesheetspro\">Mobile Sheets</a></h3>\n\n<p>There is no question, this is *the* sheet music app for Android. With this app on a tablet, you can entirely replace your choir binder. It extremely full-featured and is in active development with new features are added all the time. It has support for importing pdfs and audio files from both Google Drive and Dropbox.</p>\n\n<h3><a href=\"https://play.google.com/store/apps/details?id=com.gamestar.perfectpiano&rdid=com.gamestar.perfectpiano\">Perfect Piano</a></h3>\n<p>There are lots of free piano apps for plunking notes, but this app gives you access to all 88 keys by scrolling to whichever part of the keyboard you like. Not only can you control the octave you're in, but you can choose exactly where the active part of the keyboard starts. (It doesn't have to be a C or an F, for example.) So, I think it gives the most flexibility for choosing exactly which keys are available at any one time and you can easily move the slider to suit the range of each song.</p>\n\n## iOS\n\n<h3><a href=\"http://forscore.co/\">ForScore</a></h3>\n\n<p>This is the sheet music app for Apple iOS devices. It is extremely powerful, and like Mobile Sheets for Android, can completely replace your choir binder. ForScore even includes an in-app piano keyboard that can pop up while you are reviewing your music, so you won't need a separate piano app.Like Mobile Sheets, ForScore has built-in support for importing music directly from Dropbox, so it's the best choice for your choir pdf and audio files.</p>\n\n## Resources around the Web\n\n### Learning tracks\n\n<p><a href=\"http://www.cyberbass.com/Major_Works.htm\">Cyberbass</a> and <a href=\"http://choralia.net/mp3catalogue.htm\">Choralia</a> both provide part-by-part learning tracks free for listening online for many major choral works. It's always a good idea to check these sites when you start a piece to see if there are resources here!</p>\n\n\n### Sheet music\n\n<p><a href=\"http://www2.cpdl.org/wiki/index.php/Main_Page\">ChoralWiki</a> and the <a href=\"http://imslp.org/wiki/Main_Page\">International Music Score Library Project</a> both contain thousands of public domain pdfs of music scores. Although you can scan a copy of your physical score to add to your device, an electronic copy will be much easier to use (and often easier to read).</p>\n\n### Performance videos\n\n<p><a href=\"https://www.youtube.com/\">YouTube</a> is a great resource for finding recordings of other choirs performing your songs as well as for finding part-by-part learning tracks that various organizations, music teachers and students have uploaded themselves to their own accounts. NOTE: When searching for songs on YouTube it is very important to include the name of the arranger in your search. You want to make sure you're finding performances of the exact same arrangement of the song you are learning. You may also need to include the voicing (e.g. SATB or TTBB) or look at the video to make sure you see both men and women performing if you want a mixed-voice rendition. For part-by-part tracks, include the name of your voice part (e.g. \"alto\" or \"tenor\") in your search, as well. Be sure to check out the <a href=\"https://www.youtube.com/channel/UCS0_0LYL2unSdwOb9AhNOrw\">Choir Parts YouTube Channel</a> YouTube channel for many classical part-by-part learning tracks.</p>\n  \n<p><a href=\"http://www.vimeo.com\">Vimeo</a> and <a href=\"http://www.soundcloud.com\">SoundCloud</a> are two other sources you may wish to search.</p>\n\n### Publishers with online resources\n\n<p>Many times if you search for the title and arranger of a song, you can find a listing for it on a publisher's website or online sheet music store for sale. <a href=\"http://www.jwpepper.com/sheet-music/school-choir-music.jsp\">JW Pepper</a> and <a href=\"https://www.halleonard.com/index.jsp?subsiteid=5\">Hal Leonard</a> are two excellent resources for many popular arrangements. Often, these listings will have professional recordings of the songs that you can listen to online. Sometimes they are only 30 second clips, but very often you can hear the entire song performed by studio musicians. These can also be very helpful for learning your part because the recordings and individual voices are quite clear.</p>\n  \n<p><a href=\"http://cypresschoral.com/Composers/Home.html\">Cypress Choral</a> is an excellent Canadian Choral publisher with many recordings of their arrangements available online.</p>\n\n## My choir performances\n\nSee a [playlist of my performances](https://www.youtube.com/playlist?list=PLowBAHWxr_2DdNpEhojRwVB0JTucgOo-4).","src/content/docs/choirtech.md","f3e9cfdbbf6576dc",{html:71,metadata:72},"<p>These are some of the tools that can help your choir!</p>\n<h2 id=\"android\">Android</h2>\n<h3><a href=\"https://play.google.com/store/apps/details?id=com.zubersoft.mobilesheetspro\">Mobile Sheets</a></h3>\n<p>There is no question, this is *the* sheet music app for Android. With this app on a tablet, you can entirely replace your choir binder. It extremely full-featured and is in active development with new features are added all the time. It has support for importing pdfs and audio files from both Google Drive and Dropbox.</p>\n<h3><a href=\"https://play.google.com/store/apps/details?id=com.gamestar.perfectpiano&#x26;rdid=com.gamestar.perfectpiano\">Perfect Piano</a></h3>\n<p>There are lots of free piano apps for plunking notes, but this app gives you access to all 88 keys by scrolling to whichever part of the keyboard you like. Not only can you control the octave you're in, but you can choose exactly where the active part of the keyboard starts. (It doesn't have to be a C or an F, for example.) So, I think it gives the most flexibility for choosing exactly which keys are available at any one time and you can easily move the slider to suit the range of each song.</p>\n<h2 id=\"ios\">iOS</h2>\n<h3><a href=\"http://forscore.co/\">ForScore</a></h3>\n<p>This is the sheet music app for Apple iOS devices. It is extremely powerful, and like Mobile Sheets for Android, can completely replace your choir binder. ForScore even includes an in-app piano keyboard that can pop up while you are reviewing your music, so you won't need a separate piano app.Like Mobile Sheets, ForScore has built-in support for importing music directly from Dropbox, so it's the best choice for your choir pdf and audio files.</p>\n<h2 id=\"resources-around-the-web\">Resources around the Web</h2>\n<h3 id=\"learning-tracks\">Learning tracks</h3>\n<p><a href=\"http://www.cyberbass.com/Major_Works.htm\">Cyberbass</a> and <a href=\"http://choralia.net/mp3catalogue.htm\">Choralia</a> both provide part-by-part learning tracks free for listening online for many major choral works. It's always a good idea to check these sites when you start a piece to see if there are resources here!</p>\n<h3 id=\"sheet-music\">Sheet music</h3>\n<p><a href=\"http://www2.cpdl.org/wiki/index.php/Main_Page\">ChoralWiki</a> and the <a href=\"http://imslp.org/wiki/Main_Page\">International Music Score Library Project</a> both contain thousands of public domain pdfs of music scores. Although you can scan a copy of your physical score to add to your device, an electronic copy will be much easier to use (and often easier to read).</p>\n<h3 id=\"performance-videos\">Performance videos</h3>\n<p><a href=\"https://www.youtube.com/\">YouTube</a> is a great resource for finding recordings of other choirs performing your songs as well as for finding part-by-part learning tracks that various organizations, music teachers and students have uploaded themselves to their own accounts. NOTE: When searching for songs on YouTube it is very important to include the name of the arranger in your search. You want to make sure you're finding performances of the exact same arrangement of the song you are learning. You may also need to include the voicing (e.g. SATB or TTBB) or look at the video to make sure you see both men and women performing if you want a mixed-voice rendition. For part-by-part tracks, include the name of your voice part (e.g. \"alto\" or \"tenor\") in your search, as well. Be sure to check out the <a href=\"https://www.youtube.com/channel/UCS0_0LYL2unSdwOb9AhNOrw\">Choir Parts YouTube Channel</a> YouTube channel for many classical part-by-part learning tracks.</p>\n<p><a href=\"http://www.vimeo.com\">Vimeo</a> and <a href=\"http://www.soundcloud.com\">SoundCloud</a> are two other sources you may wish to search.</p>\n<h3 id=\"publishers-with-online-resources\">Publishers with online resources</h3>\n<p>Many times if you search for the title and arranger of a song, you can find a listing for it on a publisher's website or online sheet music store for sale. <a href=\"http://www.jwpepper.com/sheet-music/school-choir-music.jsp\">JW Pepper</a> and <a href=\"https://www.halleonard.com/index.jsp?subsiteid=5\">Hal Leonard</a> are two excellent resources for many popular arrangements. Often, these listings will have professional recordings of the songs that you can listen to online. Sometimes they are only 30 second clips, but very often you can hear the entire song performed by studio musicians. These can also be very helpful for learning your part because the recordings and individual voices are quite clear.</p>\n<p><a href=\"http://cypresschoral.com/Composers/Home.html\">Cypress Choral</a> is an excellent Canadian Choral publisher with many recordings of their arrangements available online.</p>\n<h2 id=\"my-choir-performances\">My choir performances</h2>\n<p>See a <a href=\"https://www.youtube.com/playlist?list=PLowBAHWxr_2DdNpEhojRwVB0JTucgOo-4\">playlist of my performances</a>.</p>",{headings:73,localImagePaths:100,remoteImagePaths:101,frontmatter:102,imagePaths:103},[74,78,81,84,88,91,94,97],{depth:75,slug:76,text:77},2,"android","Android",{depth:75,slug:79,text:80},"ios","iOS",{depth:75,slug:82,text:83},"resources-around-the-web","Resources around the Web",{depth:85,slug:86,text:87},3,"learning-tracks","Learning tracks",{depth:85,slug:89,text:90},"sheet-music","Sheet music",{depth:85,slug:92,text:93},"performance-videos","Performance videos",{depth:85,slug:95,text:96},"publishers-with-online-resources","Publishers with online resources",{depth:75,slug:98,text:99},"my-choir-performances","My choir performances",[],[],{title:62,description:63,template:42},[],"gear",{id:104,data:106,body:112,filePath:113,digest:114,deferredRender:23},{title:107,description:108,editUrl:23,head:109,template:42,sidebar:110,pagefind:23,draft:14},"Gadgets and Gear","The gadgets and gear I use",[],{hidden:14,attrs:111},{},"## Current Gear and Gadgets\n\n<p>2023 <a href=\"https://www.asus.com/ca-en/laptops/for-work/chromebook/asus-chromebook-cx9-cx9400-11th-gen-intel/\">Asus Chromebook CX9</a></p>\n<p>2023 <a href=\"https://www.techradar.com/reviews/samsung-galaxy-s23-ultra\">Samsung Galaxy S23 Ultra</a></p>\n<p>2023 <a href=\"https://system76.com/desktops/meerkat\">System 76 Meerkat</a></p>\n<p>2022 <a href=\"https://www.gsmarena.com/samsung_galaxy_tab_s8_ultra-11274.php\">Samsung Galaxy Tab S8 Ultra</a></p>\n<p>2017 <a href=\"https://en.wikipedia.org/wiki/Kobo_eReader#Kobo_Aura_One\">Kobo Aura One e-reader</a></p>\n<p>2020 <a href=\"https://www.samsung.com/ca/wearables/galaxy-watch-active2-r820/SM-R820NZDAXAC/\">Samsung Galaxy Watch Active 2</a></p>\n<p>2010 <a href=\"https://www.dpreview.com/products/nikon/slrs/nikon_d7500\">Nikon D7500</a> (acquired in 2021)</p>\n<p>2016 <a href=\"https://www.dpreview.com/search/?query=nikon%20d500&#x26;product=nikon_d500\">Nikon D500</a> (acquired in 2023)</p>\n<br/>\n\n## Emergency Backups Still (Mostly) Kicking\n\n<p>2017 <a href=\"https://news.samsung.com/global/samsung-and-google-introduce-the-next-generation-chromebook-designed-for-google-play-the-samsung-chromebook-plus-and-chromebook-pro\">Samsung Chromebook Pro</a></p>\n<p>2017 <a href=\"https://www.techradar.com/news/samsung-galaxy-note-8\">Samsung Galaxy Note 8</a></p>\n<p>2012 <a href=\"https://en.wikipedia.org/wiki/MacBook_Air\">Macbook Air 11.6</a></p>\n<p>2017 <a href=\"http://www.samsung.com/global/galaxy/gear-fit2/\">Samsung Gear Fit 2 fitness tracker</a></p>\n<p>2010 <a href=\"https://www.dpreview.com/products/nikon/slrs/nikon_d7000\">Nikon D7000</a> (acquired in 2019)</p>\n<br/>\n\n## Wish List\n\n<br/>\n\n## Past Gadgets (passed on or away)\n\n<p>1997 - <a href=\"https://en.wikipedia.org/wiki/PowerBook_Duo\">Macintosh Powerbook Duo 230</a></p>\n<p>2004 - <a href=\"https://www.amazon.com/Acer-TravelMate-Tablet-Centrino-DVD-RW/dp/B0001KV5Y4\">Acer Travelmate C300 Tablet PC</a></p>\n<p>2005 - <a href=\"https://www.dpreview.com/reviews/canons2is\">Canon Powershot S2 IS</a></p>\n<p>2006 - <a href=\"https://www.amazon.com/Creative-ZEN-Vision-Video-Player/dp/B000CS7U1C\">Creative Zen Vision M mp3 player</a></p>\n<p>2006 - <a href=\"http://www.mobiletechreview.com/notebooks/Fujitsu-P1510d.htm\">Fujitsu Tablet PC</a></p>\n<p>2007 - <a href=\"https://en.wikipedia.org/wiki/Nokia_N810\">Nokia N810 internet tablet</a></p>\n<p>2009 - <a href=\"https://en.wikipedia.org/wiki/Nokia_E71\">Nokia E71 mobile phone</a></p>\n<p>2009 - <a href=\"http://www.digitalcamerareview.com/camerareview/canon-powershot-sx10-is-review/\">Canon Powershot SX10 IS</a></p>\n<p>2010 - <a href=\"https://en.wikipedia.org/wiki/EnTourage_eDGe\">enTourage eDGe dual book</a></p>\n<p>2011 - <a href=\"https://www.asus.com/Eee-Family/Eee_Note_EA800/\">Asus eeeNote EA800 e-ink tablet</a></p>\n<p>2012 - <a href=\"https://en.wikipedia.org/wiki/Samsung_Galaxy_Note_(original)\">Samsung Galaxy Note original</a></p>\n<p>2012 - <a href=\"https://shop.usa.canon.com/shop/en/catalog/powershot-sx40-hs\">Canon Powershot SX40 HS</a></p>\n<p>2013 - <a href=\"https://en.wikipedia.org/wiki/Samsung_Galaxy_Note_10.1\">Samsung Galaxy Note 10.1</a></p>\n<p>2014 - <a href=\"https://en.wikipedia.org/wiki/Samsung_Galaxy_Note_4\">Samsung Galaxy Note 4</a></p>\n<p>2016 - <a href=\"https://en.wikipedia.org/wiki/Nikon_Coolpix_P900\">Nikon Coolpix P900</a></p>\n<p>2017 - <a href=\"https://www.dpreview.com/products/sony/compacts/sony_dscrx10iv\">Sony Cyber-shot DSC-RX10 iv</a></p>","src/content/docs/gear.mdx","69d8e906f0813224","index",{id:115,data:117,filePath:142,assetImports:143,digest:145,deferredRender:23},{title:118,description:119,editUrl:23,head:120,template:16,hero:121,sidebar:140,pagefind:23,draft:14},"Sarah Rainsberger","Creates and solves problems. Sometimes, in that order.",[],{tagline:122,image:123,actions:126},"Sarah photographs birds, watches baseball, and writes docs!",{alt:124,file:125},"","__ASTRO_IMAGE_../../assets/mewithbird.webp",[127,134],{text:128,link:129,variant:130,icon:131},"About me, and more!","/about/","primary",{type:132,name:133},"icon","right-arrow",{text:135,link:136,variant:137,icon:138},"\"50 docs tips in 50 days\"","/blog/50-docs-tips-in-50-days","secondary",{type:132,name:139},"rocket",{hidden:14,attrs:141},{},"src/content/docs/index.mdx",[144],"../../assets/mewithbird.webp","ea7600e8fa7244fe","photography",{id:146,data:148,body:154,filePath:155,digest:156,deferredRender:23},{title:149,description:150,editUrl:23,head:151,template:42,sidebar:152,pagefind:23,draft:14},"Photography","About my photography. Mostly birds.",[],{hidden:14,attrs:153},{},"import camera from '../../assets/camera.jpg';\n\nI'm still organizing photos on Flickr, experimenting with [an Astro Flickr content loader](https://astro-loaders.lekoarts.de/), and figuring out the best way to display my collections of photos.\n\nIn the mean time, you can [visit my Flickr photo stream](https://www.flickr.com/photos/sarahrainsberger/), view [photos posted to the Fediverse from Mastodon](https://mastodon.social/@sarah11918/media) or see a sample embedded album below:<br/><br/>\n\n\n<a data-flickr-embed=\"true\" data-header=\"true\" data-footer=\"false\" href=\"https://www.flickr.com/photos/sarahrainsberger/albums/72177720295657321\" title=\"PEI Canada Nature\"><img src=\"https://live.staticflickr.com/65535/51792833621_0c9da5df8d_z.jpg\" width=\"640\" height=\"480\" alt=\"PEI Canada Nature\"/></a><script async src=\"//embedr.flickr.com/assets/client-code.js\" charset=\"utf-8\"></script>\n\n## Philosophy\n\nSince I began traveling regularly (2006), I have always photographed as a way of journaling, and organized my photos into albums with what can only be described as an unhealthy enthusiasm.  (\"What year did they have that duckpin bowling tournament? In... was it Quebec City or Montreal?\" WELL, LET ME AND MY METICULOUSLY ORGANIZED PHOTO ALBUMS TELL YOU...)\n\nLong before the days of Google Maps, I would photograph to remember the menu of a restuarant or the hours of a coffee shop in Munich. When we bought a new couch? That's a photograph, so I can always look up how it is. When we traveled for several months out of the year, my photographs were also the souvenirs we didn't have room to bring home. For the longest time, photography wasn't art, but memory for me.\n\nOf course, it helps if the photographs look nice, too! So I started to take more care in the photos I took. I began to take photographs to capture emotions, not just information. I'm not a very artistic person, so when I thought something looked \"nice\" or \"cool\", I'd try to capture that. At the very least, if I captured the *thing* then I could *remember* the emotion, even if I couldn't evoke it in someone else. And, I'm happy if that's all I ever achieve!\n\nWhat I can do, even without much artistic sense, is improve my technical abilities as a photographer: learn about light, use the appropriate shutter speed and aperature for the thing I'm taking a picture of or the image I want to create, and put myself in the position to be ready for an opportunity.\n\nAlso, because I'm shy and don't like being *in* the action, I often have a great view *of* the action from the periphery. I often notice what others miss, so I enjoy being the unofficial family photographer at gatherings. (Protip: if you're holding the camera, you won't get caught *in* the photos!)\n\nStill chronicling life today (sometimes as if to prepare for a triva show that is never going to happen), my recent gallery contains the new honey ginger whiskey we ordered (now, with thoughtful framing and lighting of course!), the old bingo hall being torn down to make way for condos, a pot of hot mulled wine on the stove with our festive mugs to open Rainsberger Backyard Christmas Market, and the Ho Ho Holiday 5K runners dressed in Santa suits that we noticed jogging by the front window one Saturday morning.\n\n## History\n\nMy bird and nature photography hobby began in earnest with a Nikon P900 super-zoom camera. As I joined forums to learn how to use the camera and improve my photography, it turned out many of the users of this camera were using it for bird photography because of its long reach. So, that's what I learned how to do, and how my photography pivoted from travel journaling to nature!\n\nI then upgraded to the Sony RX10iv for fast shutter speeds and burst modes (though less zoom) to better capture birds in flight. That camera is still today considered the best compact, non-interchangeable lens camera for birding and is popular among aging birders who \"downsize\" their gear. While fantastic in the field, \n\nOn a whim, I wandered into my local pawn shop and discovered an inexpensive, old Nikon D7000 DSLR which I initially intended only for indoor/low-light photography (e.g. family gatherings, bowling tournaments). However, I noticed the improved image quality and the lack of start-up time with a DSLR compared to the RX10iv made it a compelling upgrade for nature photography, too. When my trusty local pawn shop had a compatible 70-300mm lens available, I finally had a chance to give the Nikon a serious try for birding and was hooked.\n\n<p>I now use a Nikon D7500 and D500 for all my photography, and have since added a used Sigma 150-600mm which I was thrilled to find locally very inexpensively. On my photo walks, I usually wear a Cotton Carrier harness to distribute the weight of the camera and lens while also giving me quick access for spontaneous shots. I am still learning how to use (I mean, even how to **hold**!) the new gear, but I enjoy the challenge and occasional rewarding capture!</p>\n\n## Android photography apps I use\n\n<div style=\"display:flex; justify-content: space-between\">\n\n  <ul>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.photos\">Google Photos</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.flickr.android\">Flickr</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.fstop.photo\">F-Stop Gallery</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.diune.pictures\">Piktures</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.snapwood.photos2\">pixFolio</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.snapwood.flickfolio\">FlickFolio</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.niksoftware.snapseed\">Snapseed</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=photo.editor.polarr\">Polarr Photo Editor</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.iudesk.android.photo.editor\">Android Photo Editor</a></li>\n    <li><a href=\"https://play.google.com/store/apps/details?id=com.goodtemperapps.renamephotosandvideos.pro\">Rename Photos and Videos</a></li>\n  </ul>\n\n  <div style=\"padding-right: 3em;\">\n  <img alt=\"Me wearing a camera harness vest with a large camera and VERY large lense attached, taking up almost the length of my entire upper body.\" src={camera.src} width=\"180px\"/>\n  </div>\n</div>","src/content/docs/photography.mdx","37832bf18baeb39c","blog/5-pin-bowling-simulation",{id:157,data:159,body:171,filePath:172,digest:173,rendered:174},{title:160,description:161,editUrl:23,head:162,template:42,sidebar:163,pagefind:23,draft:14,authors:165,date:167,excerpt:168,tags:169},"Javascript 5-pin bowling simulation in CodePen","One of my early learning activities -- building a bowling game.",[],{hidden:14,attrs:164},{},[166],"sarah",["Date","2021-08-25T00:00:00.000Z"],"When you code for @jbrains, you get 5-pin bowling coding assignments!",[170],"javascript","## Look at me, I'm a pin setter!\n\nHere's what kept me busy yesterday... [5-pin Bowling Code Pen](https://codepen.io/sarah11918/pen/rNwNEBL)\n\n(This preview doesn't happen to show the console output, which is where I print some of the data, but you get all the hot pin action in this embed, and you can click through to see the code.)\n\n<p class=\"codepen\" data-height=\"400\" data-default-tab=\"html,result\" data-slug-hash=\"rNwNEBL\" data-user=\"sarah11918\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/sarah11918/pen/rNwNEBL\">\n  5-pin bowling</a> by Sarah Rainsberger (<a href=\"https://codepen.io/sarah11918\">@sarah11918</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>","src/content/docs/blog/5-pin-bowling-simulation.md","628a5088d3825dde",{html:175,metadata:176},"<h2 id=\"look-at-me-im-a-pin-setter\">Look at me, I’m a pin setter!</h2>\n<p>Here’s what kept me busy yesterday… <a href=\"https://codepen.io/sarah11918/pen/rNwNEBL\">5-pin Bowling Code Pen</a></p>\n<p>(This preview doesn’t happen to show the console output, which is where I print some of the data, but you get all the hot pin action in this embed, and you can click through to see the code.)</p>\n<p class=\"codepen\" data-height=\"400\" data-default-tab=\"html,result\" data-slug-hash=\"rNwNEBL\" data-user=\"sarah11918\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/sarah11918/pen/rNwNEBL\">\n  5-pin bowling</a> by Sarah Rainsberger (<a href=\"https://codepen.io/sarah11918\">@sarah11918</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>",{headings:177,localImagePaths:181,remoteImagePaths:182,frontmatter:183,imagePaths:187},[178],{depth:75,slug:179,text:180},"look-at-me-im-a-pin-setter","Look at me, I’m a pin setter!",[],[],{title:160,description:161,authors:184,date:185,excerpt:168,tags:186},[166],["Date","2021-08-25T00:00:00.000Z"],[170],[],"blog/50-1-if-one-does-not-already-exist",{id:188,data:190,body:201,filePath:202,digest:203,deferredRender:23},{title:191,editUrl:23,head:192,template:42,sidebar:193,pagefind:23,draft:14,authors:195,date:196,excerpt:197,tags:198},"Tip 1 - \"... if one does not already exist\"",[],{hidden:14,attrs:194},{},[166],["Date","2024-06-24T00:00:00.000Z"],"When instructing a reader to make a new file or folder, acknowledge that one might already exist.",[199,200],"docs tips","50 tips in 50 days",":::tip\nWhen instructing a reader to make a new file or folder, acknowledge that one might already exist.\n:::\n\nAstro Docs publishes a lot of guides from community contributors that involve connecting with a third-party service such as a CMS or deploy host. This can mean instructing the reader to add files for environment variables or other necessary \"glue\" to connect the services, or to ensure the project contains a specific folder.\n\nOne PR edit I am often suggesting is to **append any such instruction to create a new file or folder with, \"if one does not already exist.\"** If this is something that might reasonably already exist in someone's project, then it's helpful to acknowledge that and assure the reader. This also demonstrates reader empathy by showing you have put a little thought into what their project might look like, and earns reader trust with your attention to a small detail.\n\nAt this point in their guide, they may very well be struggling with *two* platforms that they may or may not know well. Every little bit of assurance that they're on the right track is some friction removed from their journey!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-1-if-one-does-not-already-exist.mdx","5c4da2bdc78005e6","blog/50-10-headings-work-alone",{id:204,data:206,body:215,filePath:216,digest:217,deferredRender:23},{title:207,editUrl:23,head:208,template:42,sidebar:209,pagefind:23,draft:14,authors:211,date:212,excerpt:213,tags:214},"Tip 10 - headings need to work alone",[],{hidden:14,attrs:210},{},[166],["Date","2024-07-03T00:00:00.000Z"],"Consider everywhere your headings will be used, not just in the body of the page.",[199,200],":::tip\nConsider everywhere your headings will be used, not just in the body of the page.\n:::\n\n\nEveryone seems to want to add more and more \"asides\" (e.g. note, info, tip, or caution call outs) whenever they think something is important to point out. Instead, I often [make it a heading](/blog/50-4-make-it-a-heading) because section headings are a docs site's best friend! Titles and subtitles help us organize our content both to group similar things together and to separate distinct items. \n\nBut more than that, headings often have other functions in a docs site that may affect how you write them.\n\nIn Astro Docs, `<h2>` and `<h3>` level headings show up automatically in our \"On this page\" navigation component. When a reader arrives on a page, this table of contents helps readers quickly scan to find specific content, or even figure out whether they are on the right page.\n\nOne PR edit I regularly make is **adjusting headings to create helpful table of contents**. In order to be helpful as visual markers, I try to keep headings short. This often means removing repetitive, non-descriptive words and end punctuation that looks out of place in a separate list:\n\n- ✅ \"Integrations\"\n\n- 😐 \"About integrations:\"\n\nHeadings also gives me an opportunity to consider a section's \"one key point.\" A section heading doesn't have to be a complete sentence or a full thought. Unlike when I'm [being explicit about what \"like\" means](/blog/50-9-dislike-like), this is my chance to distill a section down to a few key words.\n\n\n> ### My component is not interactive\n> \n> When you notice that your component renders on the page but is not responding to user interaction...\n\n\nInside paragraphs of text, I may sacrifice brevity when I want to reinforce the vocabulary and concepts of the project. It is *helpful* for my readers to be able to describe their situation in terms of rendering and interactivity, especially when they want to troubleshoot or ask for help in support channels. It is less helpful for navigating a page when the section heading itself tries to provide those details.\n\nIt also makes for one darn ugly anchor link!\n\n`#my-component-renders-on-the-page-but-is-not-responding-to-user-interaction`\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-10-headings-work-alone.mdx","f14a2df172d0e1ba","blog/50-11-what-could-have-been",{id:218,data:220,body:229,filePath:230,digest:231,deferredRender:23},{title:221,editUrl:23,head:222,template:42,sidebar:223,pagefind:23,draft:14,authors:225,date:226,excerpt:227,tags:228},"Tip 11 - don't regret what could have been",[],{hidden:14,attrs:224},{},[166],["Date","2024-07-04T00:00:00.000Z"],"Alternative versions are more helpful than alternate histories.",[199,200],":::tip\nAlternative versions are more helpful than alternate histories.\n:::\n\nWriting step-by-step guides for using Astro features is challenging in part because there are often *lots* of ways to do the same thing! When your readers have choices, you can't be sure which ones they will make. And, you don't know which decisions they have already made to create the current state of their project.\n\nOne PR edit I regularly make is **to remove references to previous paths not taken and instead create alternative instructions**. Your reader is following your instructions to complete a task. They want to get out of docs as soon as possible and back to their project. Don't make them go back and replay steps, even just mentally, in an alternate universe.\n\n- ✅ `## Alternative: using collocated images\"\n\n- 😐 \"You could have put your images with your Markdown files in the same folder...\"\n\nImagine getting part way through a set of instructions, pleased that everything is going well, only to find out that three steps ago, you could have done something different. Well, I *was* feeling pretty good about my progress. Now apparently there's a choice I could have made earlier. (Should have made earlier? Would that have been better? How do I decide? Why are you telling me NOW?) What kind of life is Alternate Universe Me living? Do I go back and take the other path?\n\nIf you do want to include alternatives, plan and separate your reader journeys. You can try to funnel your readers into the appropriate version upfront. Or, you can have one basic recipe, then create sections for variations or \"substitutions.\" It's OK to be opinionated and provide one happy path. Your advanced or adventurous users will experiment and adapt to their own projects, if they even tried to stick to the guide faithfully at all. (\"I made this recipe, but instead of cream I used coconut oil, and instead of flour I used flax seed...\")\n\nIdeally, we want to support every reader! We want to show you how to do it this way, or that way, or even an entirely different way. But, we also want to make sure that you have a clear path for the one way you *do* end up using, undistracted by thoughts of what might have been.\n\nAnd, this also gives you an excuse to [make more headings](/blog/50-4-make-it-a-heading) and [improve page navigation](/blog/50-10-headings-work-alone)!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-11-what-could-have-been.mdx","d34e6a97691b3e70","blog/50-12-cool-story-bro",{id:232,data:234,body:243,filePath:244,digest:245,deferredRender:23},{title:235,editUrl:23,head:236,template:42,sidebar:237,pagefind:23,draft:14,authors:239,date:240,excerpt:241,tags:242},"Tip 12 - cool story bro",[],{hidden:14,attrs:238},{},[166],["Date","2024-07-05T00:00:00.000Z"],"Let your docs tell their own story.",[199,200],":::tip\nLet your docs tell their own story.\n:::\n\nWhen helping to craft Astro Docs, I'm always aware of the \"story\" that the features are telling. A \"good story\" is one where the feature works as you'd expect it to and explanations are pleasantly smooth to write. These stories tell themselves, and don't need a narrator.\n\nOne PR edit I am often suggesting is to **remove narrating the progression of your docs**. This is a quick way to keep your word count down and your text focused without losing any key content.\n\n- ✅ \"Import the `rss` helper from the `@astrojs/rss` package and pass it the following paramaters:\"\n\n- 😐 \"Import the `rss` helper from the `@astrojs/rss` package, which takes several parameters. We will explore each one below:\"\n\nThere can be a time for letting your reader know what to expect. But, I normally reserve this for situations like a tutorial where I need my readers to hang in there for an extended period of time. When I am worried that they might give up partway through if they can't see a light at the end of the tunnel, I will lay out the plan at the beginning of the page.\n\nBut for most documentation, organized with headings and a visible table of contents, the extra annotation can be just extra words on the page for your reader. We're always on the lookout for ways to keep our docs shorter and to the point. Removing the narrator from the story is one specific way to remove non-essential content.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-12-cool-story-bro.mdx","0bc57023f932df60","blog/50-13-inadvertently-inappropriate",{id:246,data:248,body:257,filePath:258,digest:259,deferredRender:23},{title:249,editUrl:23,head:250,template:42,sidebar:251,pagefind:23,draft:14,authors:253,date:254,excerpt:255,tags:256},"Tip 13 - inadvertently inappropriate",[],{hidden:14,attrs:252},{},[166],["Date","2024-07-06T00:00:00.000Z"],"Be aware of words that may have an unintended nuance.",[199,200],":::tip\nBe aware of words that may have an unintended nuance.\n:::\n\nWhile [\"like\" often doesn't convey *enough* information](/blog/50-9-dislike-like), some words convey too much: another meaning or nuance that you don't intend. And if you're super lucky, you might encounter a word that does both!\n\nOne PR edit I make is to **remove the word \"appropriate\" from documentation**. This unicorn word is *both* not descriptive enough *and* has a particular unintended suggestion that I prefer to avoid in Astro docs. What a find! Gotta give it up to \"appropriate\" for being \"inappropriate\" on multiple levels.\n\n- ✅ \"Any supported page file (`.astro`, `.md`, `.mdx`, `.js`/.`ts`, `.html`) located within `src/pages/` automatically creates its own page route on your website.\"\n\n- 😐 \"Any appopriate page file (`.astro`, `.md`, `.mdx`, `.js`/.`ts`, `.html`) located within `src/pages/` automatically creates its own page route on your website.\"\n\nAs an adjective, appropriate just means \"suitable.\" Like \"like\", it doesn't tell you *how* it is suitable. And \"suitable\" in docs often means \"works.\" This is yet another example of asking your reader to have your context and infer the correct connection that you, the writer, are making. This particular configuration or use works because... why? I never want my reader to have to read my mind to figure out what *exactly* I mean.\n\nBut things get interesting when you consider the meaning of \"*in*appropriate.\" This word is most often used to convey a judgement about what is or isn't \"proper.\" The word \"inappropriate\" is often used as a synonym for \"(slightly) offensive.\" (\"That t-shirt is inappropriate for this event.\") I prefer not to suggest that my readers might actually be causing offense with their not-yet-properly-working code!\n\nWhile I *do* often vary my language by using synonyms because presenting the same things said in different ways can be an [effective form of repetition as a pedagogical technique](/blog/50-3-repetition-pedagogical-tool), I am also always on the lookout for any unintended messages.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-13-inadvertently-inappropriate.mdx","dc1edd8a13a8e886","blog/50-14-this-post-includes-advice",{id:260,data:262,body:271,filePath:272,digest:273,deferredRender:23},{title:263,editUrl:23,head:264,template:42,sidebar:265,pagefind:23,draft:14,authors:267,date:268,excerpt:269,tags:270},"Tip 14 - this post includes advice",[],{hidden:14,attrs:266},{},[166],["Date","2024-07-07T00:00:00.000Z"],"Make it clear whether your list is partial or complete.",[199,200],":::tip\nMake it clear whether your list is partial or complete.\n:::\n\nYour official documentation is the primary resource for how your project works. Readers come to your docs to get the \"truth\" that they often cannot get anywhere else. This is one reason that docs have a responsibility to be precise: really, only we truly *know* our own project. Everyone else relies on us to be an accurate source.\n\nOne PR edit I **received** (credit where credit is due!) to Astro docs was to **avoid using \"including\" to introduce an exhaustive list**. Inclusions are commonly interpreted as examples and can leave your reader wondering whether your list is complete:\n\n- ✅ \"Entries can be written in two supported data formats: YAML (`.yaml`) and JSON (`.json`).\"\n\n- 😐 \"Entries can be written in data formats including YAML (`.yaml`) and JSON (`.json`).\"\n\nYes, there are situations when a list of what is included is (and is interpreted as) complete. \"Your ticket includes seat selection, priority check-in, and one checked bag,\" may feel exhaustive and conclusive.\n\nBut, we have to write for *all* our readers. If we can reasonably expect someone to ask, \"Is that *all* that's included?\" then we adjust our wording to remove any doubt. (And, to help our support squad volunteers who now probably have one fewer support thread to deal with!)\n\nAnd, because this post only *includes* advice... I am also including a little celebration that today marks two weeks of tips!\n\nI'll let you in on a little secret: I had no grand plan with this series of tips. I happened to realize *two days before I started* that there was a 50 day stretch before my birthday during which I could do... something. I did **not** have 50 tips ready to go. I didn't stop to think about whether I even *had* 50 tips in me! But, it felt like something I should be able to accomplish.\n\nSo, thank you for starting this journey with me, and I'm going to try my best to get us to our intended destination!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-14-this-post-includes-advice.mdx","c81c9af3c4571cf7","blog/50-15-dont-doc-when-you-can-fix",{id:274,data:276,body:285,filePath:286,digest:287,deferredRender:23},{title:277,editUrl:23,head:278,template:42,sidebar:279,pagefind:23,draft:14,authors:281,date:282,excerpt:283,tags:284},"Tip 15 - don't doc when you can fix",[],{hidden:14,attrs:280},{},[166],["Date","2024-07-08T00:00:00.000Z"],"Don't document workarounds. Fix them!",[199,200],":::tip\nDon't document workarounds. Fix them!\n:::\n\nThis idea might be a little controversial, but at Astro docs, we always prefer to document things as they are *intended* to work. Docs continue to be the official source of (eventual) truth. If something is utterly and severely broken to the point your documentation doesn't make sense, maybe that's a sign that a recent update should be reverted, or perhaps should not have been released yet. This isn't, as far as I'm concerned, a \"docs problem.\"\n\nMore commonly, there's a bug, temporary constraint, or unexpected behavior that is going to be fixed. Our platform devs are generally responsive enough to prioritize a significant mismatch between docs and practice. We will collectively decide how big of a problem this is based on the feature affected, the number of people we think it affects, and the time needed to release a new version. \n\nHowever, **when a workaround will only be needed temporarily, I will not update the documentation for that feature**. And, I may very well have a greater tolerance for \"temporary\" than you do. If I suspect `create astro` will be out of order for multiple weeks, *then* I might consider a banner or note in docs. Most other features? I take a different approach!\n\nDirecting your users to the appropriate place for issues, uptime status, and other non-expected behaviours is often more advantageous in the long run. Just like different docs pages are written for different purposes, your guides and reference material are not meant to be subject to the whims of an unnoticed failed test or upstream issue with a project dependency.\n\nTrain your readers to look in the right place for the information they need. This will help them learn where to go when they have problems that are *not* a result of incorrect docs, too.\n\nAnd, I *still* want them to know \"how Astro works\" even if it's temporarily not working! Yes, following your docs might not work at this exact moment, but when the workaround is removed... how will they know they no longer need this hack? Not only have they used (and maybe internalized?) a non-standard pattern, now you've given them a maintenance burden that they didn't sign up for ... a maintence burden that *you* have now signed up for, too, by the way.\n\nIf a problem is so severe and so far away from functioning that you are tempted to document it, that probably means that **this is realistically how your project works** anyway. 😅 And by all means, document \"how your project works!\"\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-15-dont-doc-when-you-can-fix.mdx","f09004be0d525973","blog/50-16-if-you-want-to",{id:288,data:290,body:299,filePath:300,digest:301,deferredRender:23},{title:291,editUrl:23,head:292,template:42,sidebar:293,pagefind:23,draft:14,authors:295,date:296,excerpt:297,tags:298},"Tip 16 - read this tip... if you want to",[],{hidden:14,attrs:294},{},[166],["Date","2024-07-09T00:00:00.000Z"],"You don't know what your reader wants. Save effort (and words!) by not trying to guess.",[199,200],":::tip\nYou don't know what your reader wants. Save effort (and words!) by not trying to guess.\n:::\n\nWhen I'm writing documentation, I may have *some* idea of what our reader \"wants\" to do. Sometimes, I don't. Yet, I still have to produce guides and instructions that work in, or can be applied to, a variety of situations.\n\nOne PR suggestion I'm often making is to **remove qualifying statements about the readers intent and replace them with direct ways to achieve a goal**. I can't be inside my reader's head (no matter how much I might try or think I can... just me?). So, one of the specific ways I can safely cut extra words and tighten up my writing is to not try to be a mind reader:\n\n- ✅ \"To dynamically create an index.html at root level (e.g. for content fetched from a headless CMS), include an object with `slug: undefined` in your `getStaticPaths()` function.\"\n\n- 😐 \"If you want to create an index.html dynamically at rool level (e.g. for content fetched from a headless CMS), you have to provide `undefined` as value for the slug to `getStaticPaths()`.\"\n\nLike most rules, there are exceptions! I can picture myself consciously choosing this wording if I want to emphasize this action as a choice. (In my head, I'm hearing the stress on the word \"want.\" And, I've probably typed then deleted \"*really* want.\") But, this is not my go-to style.\n\n And, whether or not your reader \"wants to\" to do something doesn't change the truth about how your project works. Be on the look out for \"if you want to\" followed by a description of your project that stands on its own: \"If you want to use content collections, they will provide typesafety and autocomplete in your code editor.\"\n \n Don't use, \"If you want to\" as a stand in for \"Here's why you might want to.\" If you do make it about \"you\", then keep it about \"you!\" But most of the time, I don't need to play mind games with my reader at all.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-16-if-you-want-to.mdx","790e5d022c2ed4d6","blog/50-17-go-with-the-flow",{id:302,data:304,body:313,filePath:314,digest:315,deferredRender:23},{title:305,editUrl:23,head:306,template:42,sidebar:307,pagefind:23,draft:14,authors:309,date:310,excerpt:311,tags:312},"Tip 17 - go with the flow",[],{hidden:14,attrs:308},{},[166],["Date","2024-07-10T00:00:00.000Z"],"Group the most similar items together for a definition that flows.",[199,200],":::tip\nGroup the most similar items together for a definition that flows.\n:::\n\nDocs writing is all about crafting concise, yet meaningful, definitions. It's not always easy! Sometimes, you have a few key ideas that you really want to get across to give your reader a great introduction to a term. Presenting your reader with the right amount of information to explain without being overwhelming is only part of the job. The individual parts also have to flow.\n\n\nOne type of PR suggestion I make is to **deconstruct your definition into its elements, then recombine them in the order that causes the least context switching.** I am often introducing a term that may have a format, a purpose, a structure, a main benefit, a notable caveat or constraint...  As a result, definitions are often information-dense, meant to be unpacked over the course of the section or page. You can help your reader successfully navigate a lot of thoughts expressed in not a lot of words by putting these separate pieces in a logical order.\n\nBelow, I suggest starting with the technical properties of the file (type and location) together, followed by implementation details of its contents. This allows someone looking for a straight definition to stop there and keeps them focused on the concept of a particular file in their project. Then, I suggest moving on to describing how powerful and useful it is.\n\n\n- ✅ \"An API Route is a `.js` or `.ts` file within the `src/pages` folder that takes a Request and returns a Response. A powerful feature of SSR-enabled projects, API routes are able to securely execute code on the server side.\"\n\n- 😐 \"API Routes is a powerful feature of SSR, represented by a `.js` or `.ts` file. They take a Request and return a Response while begin able to securely execute code on the server side. These should be located within the `src/pages` folder. \n\nThis is not the only way to organize those ideas! If the purpose of a page is selling a feature, not defining it, then one might choose to start with how powerful and useful API routes can be.\n\nNo matter how you slice it, an introduction or definition runs the risk of throwing a lot of facts at a reader... right upfront! I consider it my responsibility to at least be throwing from the same direction as often as I can.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-17-go-with-the-flow.mdx","5be0e19825cb48b1","blog/50-18-twist-then-pull",{id:316,data:318,body:327,filePath:328,digest:329,deferredRender:23},{title:319,editUrl:23,head:320,template:42,sidebar:321,pagefind:23,draft:14,authors:323,date:324,excerpt:325,tags:326},"Tip 18 - twist *then* pull",[],{hidden:14,attrs:322},{},[166],["Date","2024-07-11T00:00:00.000Z"],"Use sequence words to help your reader progress through your instructions.",[199,200],":::tip\nUse sequence words to help your reader progress through your instructions.\n:::\n\nThis tip is inspired by [one of my favourite clips from the television show \"Frasier\"](https://youtu.be/Jtq1EBMe1gQ?si=ClhCYl0R2Efb0VVk&t=120) in which Frasier defends his difficulties in a night school class for basic car mechanic skills:\n\n> So you twist.... *then* pull? You see, I was twisting and pulling simultaneously as per *your* instructions: 'Twist **and** pull.'\n\nYou could argue I am being \"that guy\" when I make a PR suggestion to **replace conjunctions with adverbs to more explicitly describe a sequence of actions**. You might not be wrong! But, have you taught students like Frasier? The best defence is a good offence!\n\nNeed your reader to do two things simultaneously? Consider using **while**, **as**, or **at the same time**. Try reserving \"and\" for your lists for the next little while. *Then*, judge for yourself whether this is a tip for you.\n\nAdditionally, I find that I tend to use \"and\" in the middle of a sentence more often than at the beginning. The reverse seems to be true when using \"then.\" Reminding myself of \"twist *then* pull\" has the added benefit of subtly nudging me to start a new sentence where I might have otherwise just kept on going... and that is almost never a bad thing! \n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-18-twist-then-pull.mdx","1f71257d92d21685","blog/50-19-be-the-change",{id:330,data:332,body:341,filePath:342,digest:343,deferredRender:23},{title:333,editUrl:23,head:334,template:42,sidebar:335,pagefind:23,draft:14,authors:337,date:338,excerpt:339,tags:340},"Tip 19 - be the change you want to see",[],{hidden:14,attrs:336},{},[166],["Date","2024-07-12T00:00:00.000Z"],"When communicating updates to your project, emphasize what has changed for the reader.",[199,200],":::tip\nWhen communicating updates to your project, emphasize what has changed for the reader.\n:::\n\nRelease notes and changelogs are documentation, too! These announce that you have made \"bug fixes and improvements\" to your project. While they often signal what's *new*, it's maybe even more important that they tell your reader what is *different*.\n\nNew is shiny! New is fun! You are very proud of your New Thing™ and can't wait to show it off! But, not everyone is immediately ready for something new.\n\nIf something has *changed* with something I use or rely on, however, you can be sure I want to know! In particular, I want to know *how it affects me* (if it in fact does at all).\n\nOne PR suggestion I often make is to **describe the change from your reader's perspective**. Your reader is someone who *uses* your project, not someone who works on it. They are usually most concerned with changes in *their own* code, not changes in yours. Your average user cares more about knowing that fetching data from multiple collections at once is now faster than they do about the specific magic you did behind the scenes for the performance gains. (Sorry!)\n\nSometimes, it can be challenging to present internal refactors or architectural decisions in a way that is meaningful to someone working *with*, not working *on*, your project. While I don't stress out about it, I do at least make an attempt. There's always a *reason* someone changed the code, right? Even a change doesn't have much of a user-facing effect, it often can be *expressed in relation to* a part of the user experience.\n\n- ✅ Improves type checking and error handling when you pass an image import directly to `getImage()`.\n\n- 😐 Adds an internal field to the type returned by an ESM import to detect if an ESM image has been passed directly.\n\nTo be clear, the description of the implementation change was pretty darn good already! This would be a great statement to have within the pull request or commit description itself. In projects where these notes are intended exclusively for other developers on the project, you might even choose this style of release notes consistently. \n\nAnd, some users of your project *are* interested in these code details. These users are often comfortable following the digital trail on their own to view the code changes and even the code itself to learn more.\n\nI would argue that a user-friendly description in your public release notes is even helpful to those advanced users: they can more quickly see at a glance *whether or not to care and explore further* based on which area of the project or user experience has changed. You have to get pretty far in that second example before you have the *context* of the change that was made.\n\nSo don't just focus on the new and exciting! Don't let your devs get away with \"now returns a cloned array.\" Be up for the challenge: documenting change is a great way to practice your \"reader empathy\" skills.\n\nIf you can make internal refactors sound relatable, imagine how great you'll be at writing reference material that resonates with your reader!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-19-be-the-change.mdx","6986c74b9e883813","blog/50-2-put-the-condition-first",{id:344,data:346,body:355,filePath:356,digest:357,deferredRender:23},{title:347,editUrl:23,head:348,template:42,sidebar:349,pagefind:23,draft:14,authors:351,date:352,excerpt:353,tags:354},"Tip 2 - put the condition first",[],{hidden:14,attrs:350},{},[166],["Date","2024-06-25T00:00:00.000Z"],"When an instruction is conditional, put the condition before the action to perform.",[199,200],":::tip\nWhen an instruction is conditional, put the condition *before* the action to perform.\n:::\n\nIn Astro, there are often several ways to achieve the same result. For example, your site could be configured to prerender static pages at build time, or generate pages on demand at request time. Your blog could use Astro's built-in automatic routing for any page files in the special `src/pages/` folder, or you could use content collections to organize your Markdown content in `src/content/`.\n\nOne PR edit I am often suggesting is to **state the condition that applies *before* the step to take:** \n\n- ✅ \"If you are using content collections, create the file `src/content/config.ts` to define your schema.\"\n\n- 😐 \"Create the file `src/content/config.ts` to define your schema if you are using content collections.\n\nMany readers will be following your instructions faithfully, sometimes line-by-line or even word-by-word. If a step doesn't apply to them, they need to know before they attempt it! This can prevent your reader from doing extra work, or even from feeling a temporary moment of confusion (\"A schema? Why would I need that? OH! That's only for content collections...\") as they progress through your content. \n\nEvery time your reader has to stop and question (your instructions, themselves, whether your guide is worth the effort to finish...) is a moment they are taken out of their flow. These tiny stops and starts add up over time, and I believe it's my responsibility to remove as many of these as I can... especially when I can often do so simply by swapping the order of ideas in my sentences!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-2-put-the-condition-first.mdx","fe58b59240a72160","blog/50-20-add-this-code",{id:358,data:360,body:369,filePath:370,digest:371,deferredRender:23},{title:361,editUrl:23,head:362,template:42,sidebar:363,pagefind:23,draft:14,authors:365,date:366,excerpt:367,tags:368},"Tip 20 - add this code",[],{hidden:14,attrs:364},{},[166],["Date","2024-07-13T00:00:00.000Z"],"Make sure readers can actually add your “add this code” examples.",[199,200],":::tip\nMake sure readers can actually add your \"add this code\" examples.\n:::\n\nSometimes, writing docs is about predicting and avoiding things your readers can complain about.\n\nWhen a reader is frustrated or confused using your project and they come to docs for help, it can be validating, or even satisfying, to say, \"See! Even if I followed the docs, I would have got this wrong!\" So, some of these tips fall into the broader category of \"try not to give your readers ammunition.\"\n\nAdmittedly, this helps *me* by having less negative feedback to deal with. But more importantly, it honestly *does* keep my writing more clear and helpful to the reader. (And, [the only reason docs exist is to *help*](/blog/stop-writing-start-helping).) Being precise in my writing helps my reader understand what I mean. It also helps them trust me, and my docs. I honestly cannot think of anything worse than reading a project's official documentation and not knowing whether or not you can rely on it!\n\nOne PR suggestion I often make is to **provide a code sample that works if copied into a project**. It may not work for every reader's particular use case, but it works in a particular situation that is explicitly stated:\n\n- ✅ To deploy your Astro site at a particular path of your domain, provide a value for `base`. For example, to deploy your site at `/docs`, add `base: '/docs'` to your Astro config.\n\n- 😐 To deploy your Astro site at a  of your domain, add the following code to your Astro configuration: `base: '/foo'`.\n\nThe industry culture is to expect (much to my dismay) a reader to understand what `foo` and `bar` are doing in non-descript code examples. Given that, I contend that no one can reasonably complain about an example that says, \"If you intend to do X, add code Y.\" \n\nJust adding an example with context puts you in the elite category of docs writers in my books! (And, since my personal accolades and gratitude are meaningless, measure your success by the lack of complaints you'll get from your readers.)\n\n\"Add\" means \"paste\" to your readers. If <kbd>CTRL+V</kbd> doesn't literally, exactly, and immediately achieve a goal in their project, don't say \"add.\" Instead, show your readers an example of how to do something in context, and let them extract the pattern. It's helpful content, and great pedagogy!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-20-add-this-code.mdx","02fc620eeacabad1","blog/50-21-prepare-to-be-assimilated",{id:372,data:374,body:383,filePath:384,digest:385,deferredRender:23},{title:375,editUrl:23,head:376,template:42,sidebar:377,pagefind:23,draft:14,authors:379,date:380,excerpt:381,tags:382},"Tip 21 - prepare to be assimilated",[],{hidden:14,attrs:378},{},[166],["Date","2024-07-14T00:00:00.000Z"],"Consider the surrounding context around your changes.",[199,200],":::tip\nConsider the surrounding context around your changes.\n:::\n\nA large part of updating Astro Docs isn't adding brand new feature docs written from scratch. For example, when an existing feature gains a new config value, the current docs need to reflect this addition.\n\nIn some ways, it's easier to document entirely new features: when you are dealing with all aspects of a feature at once, you can more easily picture the entire context. When updating a section of existing docs, you may not have the introductory paragraph or troubleshooting suggestions top of mind.\n\nOne PR suggestion I often make is to **update previous sections that are inconsistent with the proposed changes**. It doesn't take long for docs to get outdated. \"Choose one of Astro's three rendering modes\" is great... until a fourth is added! 😅\n\nAnd, even if you do successfully make an update in the immediate context, none of your existing code examples, guides, or recipes in *other* parts of your docs will show this option. While this doesn't make your existing docs *wrong*, it could make them *less helpful* to your readers. If this new mode exists in reference documentation only, then one ever \"sees it in action\" in the context of more task-oriented docs.\n\nTo try to catch these situations, I will always \"work my way up\" the page hierarchy when I'm given a change to incorporate. I first check whether anything needs changing in the immediate paragraph of text before or after that introduces/summarizes my new content. Then, I will check each increasing section abstracting up the page for any general or introductory sentence where this new content should now be included:\n\n- Is there **a specific number** of items mentioned or an **exhaustive list** that needs updating?\n- Is there a list of features, benefits, examples, caveats, exclusions that **would have included this when originally written**, if it existed at the time?\n- Is there a **general usage example** that could be updated to include this item, even if the code sample is not *about* that item... and *especially* if it would be a common use of the new item documented?\n\nIncremental docs often *look* like smaller changes than they are. Even one change can ripple throughout your docs in ways you didn't anticipate. And, these accumulated changes can add up over time, and leave you with a feature that is non-trivially different than the one you \"introduced\" at the top of the page! \n\nI find it helps to take the time at each change to ask, \"Would I have written anything differently with this information available at the time?\"\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-21-prepare-to-be-assimilated.mdx","acffac3eb6133281","blog/50-22-and-then",{id:386,data:388,body:397,filePath:398,digest:399,deferredRender:23},{title:389,editUrl:23,head:390,template:42,sidebar:391,pagefind:23,draft:14,authors:393,date:394,excerpt:395,tags:396},"Tip 22 - and then",[],{hidden:14,attrs:392},{},[166],["Date","2024-07-15T00:00:00.000Z"],"Start with one idea per sentence. Let it tell you whether it wants to be longer or shorter.",[199,200],":::tip\nStart with one idea per sentence. Let it tell you whether it wants to be longer or shorter.\n:::\n\nWe all agree that in most situations, most of the time, \"less is more\" when it comes to writing. For content-heavy contexts like docs writing, it's always a struggle to provide *enough* information while sticking to this adage. We want our readers to have *alllll* the information they ~~could possibly want~~ need to be successful!\n\n\n\nOne PR suggestion I often make is to **start by deconstructing separate ideas into their own sentences ruthlessly.** A little bit of sentence variety is fine, and can even make prose [easier to read](https://www.redwoodink.com/resources/why-varying-sentence-length-engages-your-reader). But starting from the smallest possible building blocks ensures that I am building back up intentionally. \n\nParadoxically, \"make shorter sentences\" often means... \"make longer sentences!\" 😅 You may need to *add* words to provide context you might have lost by turning a phrase into a full sentence. I find that \"over-zealous chopping\" + \"reintroduce context\" can often get me pretty close to readable docs:\n\n- ✅ These features require some one-time code set up. After that, your site will automatically update in response to changes. Astro will rebuild a new version of your site each time using both the current files in your project and any data returned by the most recent fetch calls.\n\n- 😐 These features require some one-time code set up, then will re-run at build time and return updated results based on the current files in your project and any data returned by the most recent fetch call.\n\nAnother advantage to splitting and recombining ideas: it can be easier to spot a better (re)grouping of these ideas than you originally had. Docs isn't a jigsaw puzzle with only one correct spot for each piece! Docs is maybe more like a Scrabble rack of tiles: individual letters you position and reposition in search of a good word to play.\n\nAs with any tip, your mileage may vary... just like your sentence lengths! But, I'm often pleasantly surprised that the \"longer\" shorter sentences end up improving the readability and flow of the entire paragraph. At the same time, my \"shorter\" shorter sentences can be direct and punchy. In both cases, it's easier for me to intentionally control the flow of information to my reader.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-22-and-then.mdx","06074cf910e46b5f","blog/50-24-mise-en-place",{id:400,data:402,body:411,filePath:412,digest:413,deferredRender:23},{title:403,editUrl:23,head:404,template:42,sidebar:405,pagefind:23,draft:14,authors:407,date:408,excerpt:409,tags:410},"Tip 24 - mise en place",[],{hidden:14,attrs:406},{},[166],["Date","2024-07-17T00:00:00.000Z"],"Front load prerequisites to avoid distracting side quests.",[199,200],":::tip\nFront load prerequisites to avoid distracting side quests.\n:::\n\nAstro Docs contains several guides to working with third-party services such as CMS guides, deploy hosts, and backend services. And, there are *several* different \"starting points\" for the journey of integrating another service with Astro. Do you already have an existing third-party... account? project? token? Do you even *have* an Astro project yet?\n\nThe French cooking term \"[mise en place](https://en.wikipedia.org/wiki/Mise_en_place)\" refers to laying out your ingredients ahead of time so that you aren't trying to find or prepare ingredients while you are trying to follow the recipe. \"How to build a blog with Astro and CMS X\" can feel like baking a pie with a crust, filling, and topping as you open one project here while configuring frontmatter fields over there and adding an environment variable to a deploy host over yonder.\n\nOne PR suggestion I often make for these guides is to **assume people can find and follow existing documentation for side quests**, and put anything that's not about integrating the two existing services as a stated prerequisite. We *have* documentation on running `create astro`. This guide does not need to cover it. Similarly, a CMS itself should be documenting how to configure their own settings and use their own dashboard.\n\n- ✅ Prerequisites: An Astro project configured for `hybrid` rendering and an existing CMS X project with `title`, `author`, `date`, and `body` field labels created. You will also need your personal token from the CMS dashboard for your deploy host.\n\n- 😐 Run `create astro`... Sign up for a free account with \"CMS X.\" ...\n\nYour marketing concerns itself with your project's \"unique selling proposition\" (USP). The best recipes and guides also focus on exactly what they can bring to the table that no one else can, or specifically, what no one else has written. (In the Astro + X guides case, it's **connecting two existing services**.)\n\nIdentify the parts of your guide that are already documented, and don't redocument them. Make them a prerequisite to even starting! It's not being \"lazy\" or \"incomplete.\" It is keeping your readers focused on *your* task so that they aren't trying to bake fudge in the middle of making the ice cream it will go into.\n\nNot only will you save time writing, you'll reduce your maintenance burden when something (inevitably) changes in a part of the process that you might not even be responsible for. When a CMS changes their settings menu from `Settings > Project > Token` to `Settings > Tokens`, you can remain *blissfully unaware* with your *still-functioning* guide!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-24-mise-en-place.mdx","d4f25cd561795e9f","blog/50-25-just-follow-this-tip",{id:414,data:416,body:425,filePath:426,digest:427,deferredRender:23},{title:417,editUrl:23,head:418,template:42,sidebar:419,pagefind:23,draft:14,authors:421,date:422,excerpt:423,tags:424},"Tip 25 - just follow this one simple tip",[],{hidden:14,attrs:420},{},[166],["Date","2024-07-18T00:00:00.000Z"],"Your enthusiasm isn't always contagious.",[199,200],":::tip\nYour enthusiasm isn't always contagious.\n:::\n\nOne common docs tip is to avoid words like \"easy\" because it's not up to *you* to say what is or isn't easy for someone else.\n\nMany people have already incorporated this tip into their docs writing practice and are quick to stop themselves when they are tempted to write \"easy!\" or \"simply!\" It's wonderful that this \"easily\" makes everyone's lists of top 10 docs tips!\n\nBut, the trick isn't \"simply\" to remove a few specific words from your vocabulary. (As if that's a simple thing to do!) Often, we make things *sound* like they are easy because we *are excited to tell you how easy they are*. Docs that use the word \"easy\" typically don't take a dismissive, superior tone, talking down to a reader like they should totally get this already and why don't you understand?!\n\nWe use words like \"easy\" because we are enthusiastic! And, our excitement itself can betray our best intentions, causing us to *imply* that things are easy without saying the word directly.\n\nOne PR suggestion I often make is to **consciously tone down excitement**, and stick to a dry, factual tone.\n\n- ✅ To use Starlight's `<Steps/>` component with an existing Markdown ordered list, wrap...\n\n- 😐 All you have to do to convert a numbered list into Steps is just...\n\nInjecting your positive engergy into your documentation carries the risk of **not meeting your reader where they are**. Have you ever had a service provider be a little *too* cheery for your current mood? When you are excited, things seem easy to **you**. In that situation, you have to work hard *not* to make everything sound like it should be \"easy.\"\n\nIt's also entirely possible that your reader... just isn't that into your project. They may be forced to use it. It may be their job to use it. They may even *hate* using your project. You can't assume that every reader is an enthusiastic, or even willing, user of your project. \n\nAnd that's OK! It's not your job to motivate, entertain, or compensate for the situation that led them to needing your documentation. Don't try to \"cheer them up.\" Just give them what they need with the least friction possible.\n\nThere's a joke about writing (code or docs!) as if your reader is angry, confused, frustrated, and knows where you live. I like to make a similar joke about writing my docs as if *I* am tired, grumpy, and yelling to someone upstairs while trying to keep three cats off of my keyboard. That's probably a more accurate picture of my reader anyway!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-25-just-follow-this-tip.mdx","45cd0baa74c94787","blog/50-26-use-this",{id:428,data:430,body:439,filePath:440,digest:441,deferredRender:23},{title:431,editUrl:23,head:432,template:42,sidebar:433,pagefind:23,draft:14,authors:435,date:436,excerpt:437,tags:438},"Tip 26 - use this",[],{hidden:14,attrs:434},{},[166],["Date","2024-07-19T00:00:00.000Z"],"Use the words you mean.",[199,200],":::tip\nUse the words you mean.\n:::\n\nThe word with the most definitions in the Oxford English dictionary is \"set.\" It has **430** different ways to use it! (And, it will apparently be [overtaken in the 2037 edition](https://www.businessinsider.com/words-with-the-most-definitions-2019-1#run-645-definitions-1) by \"run\" and its anticipated 645 meanings!)\n\nFortunately, \"set\" and \"run\" have pretty standard meanings in our context of documentation! The word that *can* \"run\" off the rails for us, though, is \"use.\"\n\nIt's not that \"use\" has too many confusing definitions to be clearly understood. To \"avail oneself of\", \"put into action\", or \"carry out a purpose or action by means of\" aren't all that dissimilar. But, \"use\" often ends up obscuring or replacing that \"purpose or action\" and we lose the chance to express ourselves more precisely... perhaps more helpfully!  \n\nOne PR suggestion I often make is to **try to express exactly *how* or *in what way*, something is \"used.\"** If someone handed you a hammer and said, \"Use this!\" you'd have a reasonable idea of what they meant. But, you can \"use\" the claw portion of a hammer to *remove* nails, too!\n\n- ✅ ... this lets you create a list from your fetched blog posts\n- 😐 ... this lets you use your array of fetched blog posts \n\nUpon seeing \"use\" at the beginning of an instruction, I imagine physically throwing a feature, tool, or option at my unsuspecting reader and shouting, \"Use this!\"\n\nCan I be more helpful by giving them an explicit step to execute?\n\n- ✅ Add this attribute to make a server island\n- 😐 Use this attribute to make a server island\n\nIt's challenging not to use \"use!\" (Not to *write* \"use\"...?) But it's rewarding to dig deeper than my first instinct and find a more descriptive word that gives my reader just that little bit more guidance!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-26-use-this.mdx","185abf6ad9184a5b","blog/50-27-writing-that-clicks",{id:442,data:444,body:453,filePath:454,digest:455,deferredRender:23},{title:445,editUrl:23,head:446,template:42,sidebar:447,pagefind:23,draft:14,authors:449,date:450,excerpt:451,tags:452},"Tip 27- writing that clicks",[],{hidden:14,attrs:448},{},[166],["Date","2024-07-20T00:00:00.000Z"],"Focus on your reader's needs, not their mechanics.",[199,200],":::tip\nFocus on your reader's needs, not their mechanics.\n:::\n\nYou might be familiar with the advice to not use \"Click here!\" as text for your links. This is an accessibility issue because the link text, available to readers through assistive technology, has no meaning out of context. It doesn't tell them anything about what the link is, where it goes, or why they might click it.\n\nThat's a great tip on its own! You should follow it! I don't claim to be an accessibility expert though. So, I hesitate to give you accessibility tips. I *can* tell you why I don't like using the word \"click\" *as a writer*, however, and that's where today's tip comes from!\n\nIf you participate in the Astro Discord, you'll see some... *interesting* \"typos\" from me. Depending on the device I'm posting from, I might be posting via stylus input, voice dictation, a trackpad, a mouse, or even my brand new little six-key USB micro shortcut keyboard with dedicated keys for cut, copy, paste, find, select all, and save.\n\nIf I'm dictating posts into my phone, then you'll see a lot of \"ducks\" and \"docks\" instead of \"docs.\" If I'm handwriting, then you'll see \"does\" (because handwriting keyboards favour the letters they think you wrote over autocorrect for sensible meaning). It is *not* safe to assume that I'm \"clicking\" anything!\n\nAnd, with so many of our readers not just reading, but full-on programming, on mobile devices now (*waves from 14\" Samsung Galaxy Tab S8 Ultra*), you don't know which physical actions your readers are actually performing. If your user isn't \"clicking,\" then prompting them to \"click\" is inaccurate.\n\nOne PR suggestion I often make is to **guide your reader through a UI (user interface) using the site's information hierarchy instead of assuming which input method they're using**.\n\n- ✅ If you don't have any API keys, create one by selecting `**Add API key**`.\n- 😐 If you don't have any API keys, create one by clicking in `**Add API key**`.\n\n\nFull disclosure: I'm as much \"that reader\" as I am \"that writer.\" I will totally get taken out of the moment if you tell me to \"click\" when I'm not actually clicking. I *like* to think this is what makes me a thoughtful and empathetic docs writer! (Hashtag-lies-we-tell-ourselves?)\n\nSome of your readers are clicking, but some are tapping. Others are pressing. And if *I'm* using your project? Hoo boy... all bets are off! 😅\n\nThere's no guarantee I haven't trained a crow to topple a set of dominoes that eventually sends an electrical pulse and updates my project settings. Decouple the physical action from the structural path you want your reader to take, because birds are smarter than you think!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-27-writing-that-clicks.mdx","c835f1cc4fe4fd27","blog/50-28-this-time",{id:456,data:458,body:467,filePath:468,digest:469,deferredRender:23},{title:459,editUrl:23,head:460,template:42,sidebar:461,pagefind:23,draft:14,authors:463,date:464,excerpt:465,tags:466},"Tip 28 - this time",[],{hidden:14,attrs:462},{},[166],["Date","2024-07-21T00:00:00.000Z"],"Acknowledge the similarities to and differences from earlier instructions.",[199,200],":::tip\nAcknowledge the similarities to and differences from earlier instructions.\n:::\n\nBecause docs has to be written for everyone, we often can't know our readers' prior actions and experiences. But, with guided walkthroughs, it's safe to assume they've followed any and all previous steps. In my books, that's fair game for an assumed frame of reference!\n\nOne PR suggestion I often make is to **point out when a similar or identical step has already been performed.** This can assure your reader that yes, they've seen this before. It can also helpfully call attention to subtle differences.\n\n\n> **Use the same method** to fetch data your data from Contentful as above, **but this time**, on a page that will create a unique page route for each blog post.\n> \n> Create a new file named `[slug].astro` in `src/pages/posts/`.\n> \n> **As you previously did** in `src/pages/index.astro`, import the `BlogPost` interface and `contentfulClient` from `src/lib/contentful.ts`. \n>\n> **This time**, fetch your data inside a `getStaticPaths()` function.\n\nMost of the time, I don't want to presume that my reader has read *anything* else earlier on the page... and certainly not on any other page! One *disadvantage* of [using precise headings as anchor links](/blog/50-4-make-it-a-heading) is sending your reader to a part of the page where even the preceeding line (and often helpful context!) is scrolled out of view.\n\nHowever, your reader is working through a set of instructions from top to bottom. It is helpful to point out when they should find a task familiar (\"Are we just going to pretend that we haven't done this before?\") as well as when (and how) they should *not* mindlessly repeat it.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-28-this-time.mdx","f3477c9c9cd204df","blog/50-29-seen-and-not-heard",{id:470,data:472,body:481,filePath:482,digest:483,deferredRender:23},{title:473,editUrl:23,head:474,template:42,sidebar:475,pagefind:23,draft:14,authors:477,date:478,excerpt:479,tags:480},"Tip 29 - seen and not heard",[],{hidden:14,attrs:476},{},[166],["Date","2024-07-22T00:00:00.000Z"],"Use visual emphasis for conveying meaning, not intonation.",[199,200],":::tip\nUse visual emphasis for conveying meaning, not intonation.\n:::\n\nOften when we write, we use styles like bold or italics to convey the way our sentence *sounds in our own head*. This helps us ensure that readers get our meaning, and often that they also get a taste for our personal voice and style. Word emphasis make or break understanding a sentence... or a writer!\n\nIdeally, documentation doesn't need this same kind of reliance on the writer's voice to guide you through the text. This is just one more reason to favour shorter, \"boring\" sentences.\n\nOne PR suggestion I will make is to **visually mark the entire idea you want to get across, not just the individual words that may affect how the sentence is understood**. For docs, I prefer to rewrite so that these style markers aren't necessary in the first place. But, if you *are* going to call inline attention to a word or phrase because it's *that* important, then optimize for the readers who are skimming your page.\n\n- ✅ If an existing page file exists, Astro will not redirect to another page.  \n- 😐 If an existing page file exists, Astro will **not** redirect to another page.\n\n- ✅ **Astro leverages server-rendering over client-side rendering in the browser as much as possible**.\n- 😐 Astro leverages server-rendering over client-side rendering in the browser **as much as possible**.\n\nConsider what your reader will see when skimming your inline styles, and what information you are *really* conveying to them. What will a reader take away if **\"not\"** is all they see? And, if my sentence depends on being read it in *exactly* one way, then maybe I need to reconsider how clear it really is. 😅\n\nFun fact: **links automatically include their own inline styling**. Sometimes, I'll realize that I've previously written about the idea I want to emphasize. Using links to emphasize may not recreate my personal, super cool style. But, default link styling *will* catch a reader's attention and *can* help me suggest a particular rhythm or flow in a sentence. At the same time, you've given your reader helpful context if they'd like to explore more about *why* this might be an important idea!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-29-seen-and-not-heard.mdx","03b4bde3d360dcbc","blog/50-23-is-not-was",{id:484,data:486,body:495,filePath:496,digest:497,deferredRender:23},{title:487,editUrl:23,head:488,template:42,sidebar:489,pagefind:23,draft:14,authors:491,date:492,excerpt:493,tags:494},"Tip 23 - is not was",[],{hidden:14,attrs:490},{},[166],["Date","2024-07-16T00:00:00.000Z"],"Write the docs you have, not how you got them.",[199,200],":::tip\nWrite the docs you have, not how you got them.\n:::\n\nLife is a journey, not a destination. Your docs readers, however, are not along for the ride.\n\nJust as [you don't need to narrate the progression through the page](/blog/50-12-cool-story-bro), you can also cut the \"life story\" of your docs.\n\nOne PR suggestion I often make is to **document your features, not how or why they came to be**. \n\n- ✅ To add support for formatting `.astro` files, use the official Astro Prettier plugin.\n\n- 😐 To add Astro support (`.astro` files), we created and maintain an official Prettier Astro plugin.\n\nWhen you remove the story of *what you did*, the focus naturally shifts to what your *reader should do*... which is what they really came to docs for in the first place!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-23-is-not-was.mdx","26a64d65b3a417aa","blog/50-3-repetition-pedagogical-tool",{id:498,data:500,body:509,filePath:510,digest:511,deferredRender:23},{title:501,editUrl:23,head:502,template:42,sidebar:503,pagefind:23,draft:14,authors:505,date:506,excerpt:507,tags:508},"Tip 3 - repetition is a pedagogical tool",[],{hidden:14,attrs:504},{},[166],["Date","2024-06-26T00:00:00.000Z"],"Repetition is a pedagogical tool to reinforce a concept, not a safety net.",[199,200],":::tip\nRepetition is a pedagogical tool to reinforce a concept, not a safety net.\n:::\n\nIn Astro Docs, we will often say the same thing multiple times, or in multiple ways, to help our readers connect with terms they need to understand to be successful. However, it can be difficult to strike a balance between saying the same thing too often.\n\nOne PR edit I am often suggesting is to **use repetition only when the intention is to reinforce a concept, not for emphasis**:\n\n- ✅ \"In content collections, a schema allows you to define the shape of your frontmatter values and is used to alert you to potential errors or omissions. [...] Schemas allow you to specify exactly which properties each of your blog posts must (or may optionally) have, and will warn you when one is missing or of the wrong data type.\"\n\n- 😐 \"Create the file `src/content/config.ts` to define your schema if you are using content collections. [...] Don't forget to define your schema!\"\n\nWhen first learning a concept, some readers will benefit from hearing the same description phrased different ways, or gently repeated in relevant sections. This form of repetition often helps solidify new concepts. Repeating an *instruction* can sound patronizing or insulting! (\"Yes, I did that. You already told me to! Do you think that I'm stupid and can't follow instructions?\") \n\n\nDon't use repetition to make up for confusing instructions where you are worried about the reader's ability to follow, or because you haven't yet decided exactly *how* you want to explain something to your readers. I don't know about you, but I find these are both potential smells that my writing could use another editing pass. 😅\n\n\nThe fewer words your reader has to process, especially *while performing another action* (like, following your instructions!), the better. But, there can be a time for strategic repetition or restatement of new concepts in material designed to educate and explain. For example, I will often use this strategy when I want to first provide a concise, information-dense or jargon-heavy technical definition, but then restate later in a way that is more reader-friendly.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-3-repetition-pedagogical-tool.mdx","b810deec736cfb91","blog/50-30-link-in-your-chain",{id:512,data:514,body:523,filePath:524,digest:525,deferredRender:23},{title:515,editUrl:23,head:516,template:42,sidebar:517,pagefind:23,draft:14,authors:519,date:520,excerpt:521,tags:522},"Tip 30 - just a link in your chain",[],{hidden:14,attrs:518},{},[166],["Date","2024-07-23T00:00:00.000Z"],"When your users have users, you may want or need to document for them, too.",[199,200],":::tip\nWhen your users have users, you may want or need to document for them, too.\n:::\n\nIt is not always easy to describe what something *is* or *does*. And, this difficulty isn't always reserved for difficult concepts! Sometimes the easiest, or most obvious, tools and features can be challenging to documenent in style that matches the rest of your documentation.\n\nMuch of our API documentation falls nicely into repeatable patterns of stating what things *are*, and further breaking its components into smaller pieces and saying what they *are*. However, occasionally we may find ourselves tangled up in an explanation of what a thing *is* that just isn't working. When this happens, we need another way to think about our subject entirely.\n\nOne PR suggestion I'll often give when a fresh perspective is necessary is to **take a pass documenting for the (very) end user**. At Astro, we are documenting for people who are building websites. They are our \"readers.\" However, our \"readers\" are building websites that will be *used* by their own site visitors!\n\nSome of our documentation is best suited to thinking one level more removed, considering the the end product, and the end user. (And in the case of Starlight, these end users are *themselves* docs readers... of *our* readers' docs!)\n\n- ✅ Starlight's `<Tabs>` component allow readers to choose between different content views.\n\n- 😐 For your pieces of content that are relevant to only a percentage of your users (e.g. specific package manager or UI framework guidance), we have the `<Tabs>` component to help you.\n\nInstead of focusing on the experience of *our* reader (\"you have content that is like this; you want to organize and display it like this\"), we chose to focus on how *their* site visitor was going to interact with that content. This also subtly reminds our readers that they are using our tools to build *for* their visitors. It's easy to get caught up in the technical implementation and forget that these are just tools to create *experiences.*\n\nI'm not claiming that we got this \"right,\" but we at least found it easier to talk about this feature in terms of its end use vs. its moving parts. And, you can almost never go wrong when you think about your (end) user!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-30-link-in-your-chain.mdx","24602e39088f2c6f","blog/50-31-as-not-shown-here",{id:526,data:528,body:537,filePath:538,digest:539,deferredRender:23},{title:529,editUrl:23,head:530,template:42,sidebar:531,pagefind:23,draft:14,authors:533,date:534,excerpt:535,tags:536},"Tip 31 - as not shown here",[],{hidden:14,attrs:532},{},[166],["Date","2024-07-24T00:00:00.000Z"],"Don't explain what's not in the example.",[199,200],":::tip\nDon't explain what's not in the example.\n:::\n\nYou will rarely hear me complaining about a good \"The following example shows...\" preamble to a code snippet! Introducing code blocks is standard Astro docs practice.\n\n[Prefacing these examples with a hand-wavy \"like this\"](/blog/50-9-dislike-like) makes your reader guess which part of the code sample you're talking about. It's a hard habit to break and I totally understand the impulse. This means I get lots of practice helping writers get specific to direct readers to their desired take aways. While not as common, I would like to further suggest that we can remove \"*not* like this\" from our writing patterns.\n\nOne PR suggestion I occassionally have to make is **to constrain your introduction to what the example actually shows**. There is a time and a place for comparison and contrast. But your readers simply can't focus their attention on too many things at once, and especially when one of those things isn't even there.\n\n- ✅ The following examples shows CSS written in a `<style>` tag for styles scoped to the individual component.\n\n- 😐 While in this example the component is styled using a scoped `<style>` tag, pages can also be styled using global CSS.\n\nPresenting concepts that are *not* demonstrated in the example is information overload. How something works and how something works *differently from something else* are different concepts. It also requires already understanding the second thing, or else the comparison isn't helpful.\n\nAn introduction like above can also \"introduce\" more questions than it answers. (\"Why are you telling me about pages and global styling, while showing me scoped component styling? Is this more common or preferred? How do I style a page globally? Why aren't you showing me that? Should I be doing that instead? Why would you bring it up?\")\n\nIt can be challenging enough to make sure our readers are making the connections we intend from an existing code example. Don't \"haunt\" them with phantom docs! 👻\n\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-31-as-not-shown-here.mdx","58bf4bc986ac6fdc","blog/50-32-defining-the-obvious",{id:540,data:542,body:551,filePath:552,digest:553,deferredRender:23},{title:543,editUrl:23,head:544,template:42,sidebar:545,pagefind:23,draft:14,authors:547,date:548,excerpt:549,tags:550},"Tip 32 - defining the obvious",[],{hidden:14,attrs:546},{},[166],["Date","2024-07-25T00:00:00.000Z"],"The better the name, the harder you have to work for the definition.",[199,200],":::tip\nThe better the name, the harder you have to work for the definition.\n:::\n\nSome things seem like they should be so easy to define: `redirect()`... redirects! 😅\n\nIt's great when your devs take care to choose intuitive names. This does some of your documentation's heavy lifting, maybe even helping people avoid coming to docs at all. However, when they *do* come to docs, it's because that \"obvious\" name wasn't enough.\n\nOne PR suggestion I'm often making is to **not rely on the common meaning of a word to explain what it means**. Your docs need to serve readers of all experience levels, and language levels. Some words have slightly (or significantly) different meanings in particular fields. Some of the terms we document are general software concepts that our reader may or may not happen to know. Our project's \"take on\" or \"implementation of\" these established concepts may or may not differ from the standard.\n\n- ✅ `Astro.rewrite()` allows you to serve content from a different URL or path without redirecting the browser to a new page. \n\n- 😐 `Astro.rewrite()` allows you to rewrite a request at runtime.\n\nAnother alternative is to link externally when you are referring to a standard concept such as a Response object or HTML element. In these situations, I will consider the reader experience of being sent out (the flow) of our own docs. Sometimes canonical sources, while accurate, may not be \"quick glance\" resources. I prefer not to send my reader into *another* reading task, when they're already trying to get through *my* docs!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-32-defining-the-obvious.mdx","894ef3d6f9d6be6a","blog/50-33-whats-your-problem",{id:554,data:556,body:565,filePath:566,digest:567,deferredRender:23},{title:557,editUrl:23,head:558,template:42,sidebar:559,pagefind:23,draft:14,authors:561,date:562,excerpt:563,tags:564},"Tip 33 - what's your problem?",[],{hidden:14,attrs:560},{},[166],["Date","2024-07-26T00:00:00.000Z"],"Start troubleshooting advice with the observable error, not what led to it.",[199,200],":::tip\nStart troubleshooting advice with the observable error, not what led to it.\n:::\n\nMuch of our documentation covers what happens when things work properly. Sometimes, our writing is for when things go wrong.\n\nAnd when things go wrong, the first thing our readers experience is that something is not functioning as expected. They *may* have already realized what *caused* the error (step 2) when they consult our docs. But it's likely they have not yet progressed to step three: knowing what to do about it. That's what we're for!\n\nOne PR suggestion I will make is to **follow the reader's journey through an issue they way they experienced it**. The cause of the error may be unknown to them, but they can identify the problem they are having.\n\n- ✅ If the Translation Status Overview incorrectly shows \"needs updating\" for a page (e.g. a typo fix to an English page was merged without the \"ignore\" label and triggered the status update), take the following steps to manually update the tracker:\n\n- 😐 If a PR that should have been marked as an ignored change was merged without the label, the Translation Status Overview will consider the page's translations as \"needs updating\" when there are no changes to translate. If this occurs, and there aren't any other updates needed for that translation, take the following steps to manually update the tracker:\n\nStarting from the reason to explain what goes wrong feels to me like, \"Fun fact: if you do this, this will happen!\" I'm not entirely convinced that fact is so fun to someone who's experiencing it.\n\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-33-whats-your-problem.mdx","5b50bebfc7b2df4c","blog/50-34-show-what-to-do",{id:568,data:570,body:579,filePath:580,digest:581,deferredRender:23},{title:571,editUrl:23,head:572,template:42,sidebar:573,pagefind:23,draft:14,authors:575,date:576,excerpt:577,tags:578},"Tip 34 - show what to do",[],{hidden:14,attrs:574},{},[166],["Date","2024-07-27T00:00:00.000Z"],"Show the right thing so readers don't internalize the wrong thing.",[199,200],":::tip\nShow the right thing so readers don't internalize the wrong thing.\n:::\n\nIf you've been following this series of tips, you may have thought that my examples of \"pretty good\" (✅) vs. \"meh\" (😐) for each of these tips are in an unintuitive order. And I'll admit, sometimes it feels a little odd to me, too!\n\nIt's very common to show the \"wrong\" thing, then correct it. But, I am a strong supporter of \"showing positive models.\" Often in Astro Docs, you won't even ever see the \"wrong\" way to do something! Why would we put that in our docs?\n\nThere's a good reason for that: how do you become a better writer? **Read quality writing** so you can internalize patterns to use in your own writing. What this means for docs is showing the \"good\" version and not the \"bad\" version so that you don't inadvertantly introduce, or reinforce, unwanted patterns.\n\nOne PR suggestion I am often making is to **avoid showing anti-patterns in favour of showing positive models**. In these tips, it means showing what I consider helpful documentation first, and only after that, showing a \"less-optimal\" version of documentation. (In my mind, the \"wrong\" way should seem *so obviously less helpful* in compmarison to what you just read that you would never consider doing that. It's always shown in relation to something better.)\n\nI even considered *not* showing the \"before\" of the PR edits here at all! I want to share helpful models, and my strategy has been \"show an example of my tip in action first, and only then, show something that you can perceive by contrast isn't as helpful.\"\n\n- ✅ `<script>...</script>`\n\n- 😐 ❌ This doesn't work! ❌ `<button onClick={handleClick}>Nothing will happen when you click me!</button>`\n\nSometimes it makes sense to document what your users are naturally (and mistakenly) doing as a \"What not to do.\" But, if they weren't going to do that in the first place, why put that idea in their mind?\n\nIf your readers constantly struggle with something they *expect* to work, then it can make sense to call out that this pattern is not supported. But, my instinct will *always* be to present things in the positive: this is how Astro works, and this is how you do this in Astro. The less attention I give to things that don't actually work, the better.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-34-show-what-to-do.mdx","0593674dafed7dee","blog/50-35-link-in-bio",{id:582,data:584,body:593,filePath:594,digest:595,deferredRender:23},{title:585,editUrl:23,head:586,template:42,sidebar:587,pagefind:23,draft:14,authors:589,date:590,excerpt:591,tags:592},"Tip 35 - link in bio",[],{hidden:14,attrs:588},{},[166],["Date","2024-07-28T00:00:00.000Z"],"Links are going to be clicked! Use them strategically when you want readers to leave your page.",[199,200],":::tip\nLinks are going to be clicked! Use them strategically when you want readers to leave your page.\n:::\n\nInline text links are an efficient way to provide readers with optional extra context at the moment they encounter potentially unfamilar content. Many documentation sites link liberally to help readers discover and navigate to related content.\n\nLinks to source material also allow us to write content *once* (or, in the case of external links, not at all!) to reduce our maintenance burden and provide a single source of truth. Links directly within our text signals to our readers that there's more about this elsewhere if they need it, without cluttering the page with \"Read more about...\" throughout.\n\nHowever, links are distracting:\n\n<blockquote cite=\"https://www.roughtype.com/?p=1378\">\nWhere a footnote gives your brain a gentle nudge, the link gives it a yank. What’s good about a link – its propulsive force – is also what’s bad about it.\n</blockquote>\n<p>— Nicholas Carr, <cite>[Experiments in delinkification](https://www.roughtype.com/?p=1378)</cite></p>\n\nOne PR suggestion I'm often making is to **remove linked text when I feel it's more helpful to keep the reader following the current page's flow**. Like many edits, this is a judgement call. However, there are some standard situations where it's helpful to support reading without interruption: following instructions, being introduced to an entirely new concept, or anything else where the reader might need to focus or may already be holding multiple concepts in their head.\n\n- ✅ How do islands work? By default, Astro will render every UI framework component to just HTML & CSS, stripping out all client-side JavaScript automatically.\n\n- 😐 How do islands work? By default, Astro will render every [UI framework component](https://docs.astro.build/en/guides/framework-components/) to just [HTML](https://en.wikipedia.org/wiki/HTML) & [CSS](https://en.wikipedia.org/wiki/CSS), stripping out all client-side [JavaScript](https://en.wikipedia.org/wiki/JavaScript) automatically.\n\nWe paid particular attention to our linking when writing [the Astro introductory tutorial](https://docs.astro.build/en/tutorial/0-introduction/). This tutorial was designed to be accessible to learners who may never have used common web development tools such as VS Code and GitHub, and who have never deployed a website. Reducing distractions and helping them progress through the instructions is incredibly important in this kind of situation!\n\nDon't make your readers fight the temptation of the [visual decoration that links provide](/blog/50-29-seen-and-not-heard) which contains the promise of something more! (What is at that link??)\n\nReaders also don't know whether you intend for them to click a text line right now! (You put it there, after all.) It can be interpreted as an indication that you don't think they'll understand what comes next. And if they find inline links on *that* page, who knows when they'll get back to the content they originally came to read?\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-35-link-in-bio.mdx","65ca3533264584c4","blog/50-36-not-my-problem",{id:596,data:598,body:607,filePath:608,digest:609,deferredRender:23},{title:599,editUrl:23,head:600,template:42,sidebar:601,pagefind:23,draft:14,authors:603,date:604,excerpt:605,tags:606},"Tip 36 - not my problem",[],{hidden:14,attrs:602},{},[166],["Date","2024-07-29T00:00:00.000Z"],"Don't take responsibility for documenting someone else's project.",[199,200],":::tip\nDon't take responsibility for documenting someone else's project.\n:::\n\nNo docs site is an island! Astro docs overlaps with concepts from HTML, CSS, and JavaScript. Additionally, Astro can be connected to a CMS or backend service and deployed on a hosting platform. That's potentially a lot of documentation our community needs that is outside of our own project!\n\nIncluding other projects or services in your own documentation may be unavoidable. Who is responsible for publishing and maintaining \"definitive guide to deploying Astro on Netlify\" for example: Astro, or Netlify? (I know what *my* answer is...) In practice, the line may not always be easy to draw.\n\nOne PR suggestion I often make is to **keep the focus on \"working with\" services and possible interactions between projects, not (re)documenting *how* they work**. And *absolutely* avoid describing their UI at all costs! It is still possible to provide helpful guidance without providing too many details that are subject to change. Use language consistent with the other project's documentation so your readers can cross-check or search in their documentation when they need further instruction.\n\n- ✅ In your CMS dashboard, create a new post named `test-post` with the content type `blogPost`.\n\n- 😐 Sign in to your CMS and click on your user profile to access your dashboard. Click the green `+` button the upper right corner to create a new post. Scroll down to the field for entering the content type and select `blogPost` from the drop-down menu.\n\nWhen Astro's code changes, I know about it. I monitor the appropriate repositories. I am directly notified to review accompanying docs changes, and I am even brought in to assist [writing helpful CHANGELOG entries](/blog/50-19-be-the-change). When a feature, process, setting, or website UI changes at Netlify... I wouldn't even know *until my docs are already wrong* and I am be at the mercy of a reader discoving and pointing it out.\n\n\"Docs are never done\" and require continual (continuous? 😅) maintenance. Docs will occassionally be out of date. It may not always be my responsibility, but it's my problem! To help keep up, I don't take on any more responsibility than I need to.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-36-not-my-problem.mdx","7c47f334a989883c","blog/50-37-right-words-wrong-place",{id:610,data:612,body:621,filePath:622,digest:623,deferredRender:23},{title:613,editUrl:23,head:614,template:42,sidebar:615,pagefind:23,draft:14,authors:617,date:618,excerpt:619,tags:620},"Tip 37 - right words, wrong place",[],{hidden:14,attrs:616},{},[166],["Date","2024-07-30T00:00:00.000Z"],"You may need to 'rearrange' to support your reader's journey, not rewrite.",[199,200],":::tip\nYou may need to \"rearrange\" to support your reader's journey, not rewrite.\n:::\n\nLots of docs writing tips focus on specific word usage: use them correctly; use more precise words; use fewer of them! Sometimes, our words are already pretty good.\n\nWe can't get complacent, though! Sometimes writing that would fit very well in one place of your documentation doesn't quite work in another.\n\nOne PR suggestion I often make **doesn't significantly change words, but rearranges them to align with the purpose of the content.** Writing may be clear, correct, and even helpful, but presented at the wrong time. The example below is going to need some context to show why I prefer one over the other. Otherwise, it's difficult to tell!\n\nThe examples below occur immediately after a heading called \"Setup\" and the reader is assumed to be staring at a new, blank project.\n\n- ✅ Astro starter projects include a `tsconfig.json` file in your project. This file is important so that tools like Astro and VS Code know how to understand your project. Some features (like npm package imports) aren't fully supported in the editor without a `tsconfig.json` file. If you install Astro manually, be sure to create this file yourself.\n\n- 😐 Astro always treats your component code as TypeScript, but some features (like npm package imports) aren't fully supported in the editor without a `tsconfig.json` file. Even if you don't write TypeScript, this file is important so that tools like Astro and VS Code know how to understand your project. Astro starter projects include this file, but if you install Astro manually, be sure to create it yourself.\n\nThe difference is subtle, but I think it exists. In this situation, I prefer to first call attention to the file itself. In fact, I *do* like the nuance that \"Astro treats your code as TypeScript\" (even if you only write JavaScript). In another context, it's a great lead-in! I would totally use it to set *a* stage, just not *this* stage.\n\nWe wouldn't list steps out of order. (Well, *we* wouldn't do that. 😅) A sequence of concrete steps, like a set of instructions, gives us a natural structure to follow in our writing. Absent that, we have to do the heavy lifting ourselves to structure our (good) content in the context of the reader's journey through our docs, and the purpose of each page.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-37-right-words-wrong-place.mdx","bcd83408e2632a94","blog/50-38-this-and-that",{id:624,data:626,body:635,filePath:636,digest:637,deferredRender:23},{title:627,editUrl:23,head:628,template:42,sidebar:629,pagefind:23,draft:14,authors:631,date:632,excerpt:633,tags:634},"Tip 38 - this and that",[],{hidden:14,attrs:630},{},[166],["Date","2024-07-31T00:00:00.000Z"],"Save \"but\" for a truly unexpected turn of events. You can use \"and\" more than you think!",[199,200],":::tip\nSave \"but\" for a truly *unexpected* turn of events. You can use \"and\" more than you think!\n:::\n\nDocs is fact, not fiction. There's no story arc, no conflict, no twists and turns. You're not trying to surprise your reader... unless you count surprising them with how great your docs are! 🙌\n\nReadable docs follow a straight, predictable, boring path. I'm usually trying to remove complications and contradictions, not highlight them.\n\nOne PR suggestion I will make is to **try replacing \"but\" with \"and\" to see whether you can join ideas in a more neutral way**. If it fits, it sits! \"But\" conveys to your reader that the *relationship* between two ideas is somehow unexpected, surprising or contradicting. And usually, our stories just aren't that interesting. Furthermore, now they have to process the two pieces of information you wanted them to know *and* a (perhaps errant?) third concept: why these two ideas are in conflict with each other. \n\n- ✅ Your original image will be copied unprocessed to the build folder, and Astro's image integration will also return optimized versions of the image.\n- 😐 Your original image will be copied unprocessed to the build folder, but Astro's image integration will also return optimized versions of the image.\n\nIf they both work equally well, the tie goes to \"and\" because it evokes... absolutely nothing at all! \"But\" holds the promise of something different, interesting, challenging. \"But\" brings the popcorn. \"And\" hands you a glass of tepid tap water.\n\nOf course, don't be afraid to use \"but\" when there really is something contradictory or unexpected between two ideas you're joining together. Sometimes it's the right word for the job in that sentence! *But*, I also want to make sure that *I'm* not the one overcomplicating things by putting those ideas together in the first place! 😅\n\nI find that too many \"but\"s in my writing *could* be a sign that I'm bouncing back and forth between disjointed thoughts. Maybe I can find a better way to combine them so they flow from one to the next without taking that hard turn.\n\nYou can take advantage of your \"captive docs audience\" — you don't have to keep them on the edge of their seat. They won't lose interest and leave if you're not complelling enough. They want \"just the facts\" and \"none of the drama.\" Can I refill your glass?\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-38-this-and-that.mdx","265bdc7ea09e9fdf","blog/50-39-smarty-pants",{id:638,data:640,body:649,filePath:650,digest:651,deferredRender:23},{title:641,editUrl:23,head:642,template:42,sidebar:643,pagefind:23,draft:14,authors:645,date:646,excerpt:647,tags:648},"Tip 39 - smarty pants",[],{hidden:14,attrs:644},{},[166],["Date","2024-08-01T00:00:00.000Z"],"Don't sound smart; make your reader feel smart!",[199,200],":::tip\nDon't sound smart; make your reader feel smart!\n:::\n\nWhy do so many contributions to documentation sound like someone trying to \"be smart?\" I think people naturally tend to use \"elevated\" language because they think of docs as \"very serious reference material.\" \n\nDocs isn't Shakespeare... or *is it*? Shakespeare's writing only sounds \"fancy\" to us now because the language of their time is so different from the language of *our* time. Shakespeare's plays were not written to challenge the audience. They were entertainment, and not always of the highest form.\n\nWe may work with complex or abstract subject matter, but our docs writing is *meant to be understood*. There is no point in having docs that aren't consumable by our readers.\n\nOne PR suggestion I'll often make is to **simplify word choices and phrases so that the *meaningful* words stand out**. Don't waste your reader's energy on \"harder\" forms of words that distract from the project or industry terms that we *can't* simplify without losing meaning. Some of your sentences will be challenging enough for some of your readers even when they are as clear and concise as possible! \n\n- ✅ You can access the Cloudflare bindings and environment variables through the Adapter API.\n- 😐 You have the posibility to gain access to all the Cloudflare bindings and utilize any previously configured environment variables through the Adapter API.\n\nThese sentences may feel awkward to write. (\"This is \"official documentation\" — am I being \"proper\" enough?\" \"If I write too simply, will my audience feel talked down to?\") But, for the ones who need it, this may be the difference between them being able to use your project and being forced to give up.\n\nAnd the ones who don't... most of the time, they won't even notice. They'll have a great \"no fluff, just stuff\" experience.\n\n[No one ever complained because docs were too easy to read](https://vimeo.com/238673931#t=2045s).\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-39-smarty-pants.mdx","b563a3c3df266e36","blog/50-4-make-it-a-heading",{id:652,data:654,body:663,filePath:664,digest:665,deferredRender:23},{title:655,editUrl:23,head:656,template:42,sidebar:657,pagefind:23,draft:14,authors:659,date:660,excerpt:661,tags:662},"Tip 4 - make headings",[],{hidden:14,attrs:658},{},[166],["Date","2024-06-27T00:00:00.000Z"],"When you think (or realize) you'll reference something frequently, make it a heading.",[199,200],":::tip\nWhen you think (or realize) you'll reference something frequently, make it a heading.\n:::\n\nSection headings help organize your content and make your text easier to both read and skim. When I have several paragraphs in a row without a section heading, I know I've likely written more than one \"key idea.\" That's a good signal to look for where I might have moved on to a different idea that could be its own section.\n\nBut that's not my only clue that I'm in need of a heading! Often, I'll notice **its time for a heading when I can see myself wanting to link directly** to a paragraph. For example, in Astro, there are two ways to \"add a renderer to a container\" (using a helper function, and first importing then storing manually). Not only is it visually clearer to make a new section heading for each method, but separate sub-headings allow me to link to either method individually from other parts of the documentation.\n\nAstro Docs contains many internal links so people can quickly access related content. This content might be expanded on in a guide, shown in an example in a recipe, or defined in an API reference. The closer you can get to linking the exact place in docs you'd like your reader to visit, the more helpful the link. Your reader doesn't have to guess which part of a larger section is relevant to them.\n\nSometimes, I will discover after a page is already published that I wish I could link to a more targeted part of a section. Usually there's a key idea that would really help provide extra context... and, I've already written it so I don't need to say it again! But, it's buried in a larger chunk of content and it shouldn't be the reader's job to find it. \n\nHelping my readers navigate quickly and directly to the content they need is worth the rework. And, don't worry if you didn't predict the need ahead of time; when it's necessary, you'll know!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-4-make-it-a-heading.mdx","1539b58736bf4de6","blog/50-40-make-my-day",{id:666,data:668,body:677,filePath:678,digest:679,deferredRender:23},{title:669,editUrl:23,head:670,template:42,sidebar:671,pagefind:23,draft:14,authors:673,date:674,excerpt:675,tags:676},"Tip 40 - make my day",[],{hidden:14,attrs:672},{},[166],["Date","2024-08-02T00:00:00.000Z"],"\"Make things happen\" in your life, not in your docs writing.",[199,200],":::tip\n\"Make things happen\" in your life, not in your docs writing.\n:::\n\nMuch of our docs writing involves cause and effect. If you perform this action or set this value, then this will happen. When you start the dev server, you will see a live preview of your site.\n\nSometimes, the underlying mechanisms aren't particularly important or interesting to our readers. But sometimes, it is helpful for our readers to know more than, \"*This makes that happen*.\" (handwavy gesture)\n\nJust as it's helpful to [use the words you mean](/blog/50-26-use-this), adding precision to connected events gives your reader extra context and sometimes provides even more guidance than you originally intented... potentially saving you some writing (and your reader, some reading)!\n\nOne PR suggestion I'll make is to **provide more detail about a chain of events when it helps the reader use my project**. If I can provide some extra context, maybe tap into some prior knowledge, I can make an explanation more \"sticky.\" Perhaps knowing a bit more about what happened can help them predict what's coming next, even before they read it. Or, I might use this as a pedagogical opportunity to reinforce the vocabulary my readers need to be successful with my project. \n\nHowever, too many details can be overwhelming. And, most readers aren't interested in learning about the inner workings of your project out of curiosity or for its own sake. If my reader can't *do* anything with the extra information  — if knowing this wouldn't *change their behaviour* — I tend to leave it out.\n\n- ✅ When you import Markdown and MDX files in an Astro component, you receive an object containing their exported properties.\n- 😐 Importing Markdown and MDX files makes their exported properties available.\n\nYou can decide for yourself when to simply \"make this rabbit disappear\" and when to let your audience in on the trick. Can you provide more detail that helps your reader be a *more confident, competent user* of your project if you go into more details?\n\nThese kinds of edits also lend themselves to writing sentences from the reader's perspective. This particular example changes the subject of the sentence from \"the files\" to the reader, which is an added benefit if that's the style you're going for. Many docs today adopt a strong \"you\" vibe, and this example would fit right in with that friendly, casual style!\n\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-40-make-my-day.mdx","e721211cddf2e69c","blog/50-41-if-you-please",{id:680,data:682,body:691,filePath:692,digest:693,deferredRender:23},{title:683,editUrl:23,head:684,template:42,sidebar:685,pagefind:23,draft:14,authors:687,date:688,excerpt:689,tags:690},"Tip 41 - if you please",[],{hidden:14,attrs:686},{},[166],["Date","2024-08-03T00:00:00.000Z"],"Docs is not a conversation. Skip the pleasantries!",[199,200],":::tip\nDocs is not a conversation. Skip the pleasantries!\n:::\n\nDocs writing often addresses the reader to avoid clunky sentences or passive voice. When writing instructions, letting your reader know what \"you will see\" can be helpful and reassuring as they work through your guides. Docs is, though, a one-way broadcast.\n\nWriting your docs *to* your readers doesn't mean you have to follow conversational conventions. You can respect your readers without being \"polite.\"\n\nOne PR suggestion I will make is to **remove formalities and pleasantries when I'm not soliciting or recognizing particular action**. We typically don't \"thank\" our readers at the end for completing our guide. (Though, we may thank visitors for expressing an interest in contributing when they land on our Contributing guide!) It's just as out of place to preface instructions or explain features with \"please.\"\n\n- ✅ Adding the official Astro MDX integration allows you to write standard Markdown with JSX variables, expressions and components.\n- 😐 Please install the official `@astrojs/mdx` integration to use JSX variables, expressions and components.\n\nNo, I'm also not a fan of \"Please see the view transitions guide for more information.\" I am not *asking* them to go there. I am *informing* them that there is more information available. \"Please\" implies a request. Or, it is overly formal/flowery language that doesn't belong in our docs anyway.\n\nI try to make Astro docs as full-service as possible. If I'm doing it right, I shouldn't need to \"ask\" you to do anything. Just sit back and enjoy the docs!\n\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-41-if-you-please.mdx","2bc55dc49c5ff711","blog/50-42-whos-there",{id:694,data:696,body:705,filePath:706,digest:707,deferredRender:23},{title:697,editUrl:23,head:698,template:42,sidebar:699,pagefind:23,draft:14,authors:701,date:702,excerpt:703,tags:704},"Tip 42 - knock knock, who's there?",[],{hidden:14,attrs:700},{},[166],["Date","2024-08-04T00:00:00.000Z"],"Assume that your reader knows whose docs they're reading.",[199,200],":::tip\nAssume that your reader knows whose docs they're reading.\n:::\n\nWriters work to avoid redundant phrases in their writing like, \"very unique\" or \"new innovation.\" These modifiers repeat the idea already contained in the word being modified. In documentation, where we value writing concisely, these phrases are \"quick wins\" for getting that word count down (and, keeping that reader energy up)!\n\nThere are other, sneakier ways that redundancy can creep into our writing.\n\nOne PR suggestion I will make is to **use the name of the project only when it's helpful for clarity**. If my sentence works without name-checking the project, I can delete it!\n\n- ✅ You can add MDX pages to your project by adding `.mdx` files in the special `src/pages/` folder.\n- 😐 In Astro, you can add MDX pages to your project by adding `.mdx` files in the special `src/pages/` folder.\n\nThis format *is* useful when comparing to a similar project, especially one that may work differently. If you're describing multiple projects, then identifying the project is important enough to be the stage setter of the sentence. Similarly, in a \"What the heck *is* Astro?\" section, your reader might be so unfamiliar with your project, what it does, and how it works that it's *like* you're comparing it... to anything they might know so you can make a meaningful connection!\n\nFor the rest (most?) of our docs that explain \"how a thing works in Astro,\" emphasizing the *in Astro* part isn't necessary and can be annoying for the reader. You can perform a, \"What other project would we be talking about?\" check to decide. (Add it to your \"avoid sarcastic reader reactions\" editing pass.)\n\nAn unhelpful \"in Astro\" sometimes even feels to me a little like talking about yourself in the 3rd person. It also implies a comparison that no one made, and can feel \"invented\" just so you can take an agressive marketing position. (\"Oh, did you realize that *in ASTRO* you can just...\") And, if you think I'm \"inventing interpretations\" of a tiny, two-word phrase, may I introduce you to social media? 😅\n\nMention your project when it's helpful. Otherwise, trust that your reader knows where they are!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-42-whos-there.mdx","4f29c72d89bf2ecf","blog/50-43-whats-in-a-name",{id:708,data:710,body:719,filePath:720,digest:721,deferredRender:23},{title:711,editUrl:23,head:712,template:42,sidebar:713,pagefind:23,draft:14,authors:715,date:716,excerpt:717,tags:718},"Tip 43 - what's in a name?",[],{hidden:14,attrs:714},{},[166],["Date","2024-08-05T00:00:00.000Z"],"Sneak in \"extra docs\" with meaningful example file names.",[199,200],":::tip\nSneak in \"extra docs\" with meaningful example file names.\n:::\n\nNaming is hard when creating features and designing APIs. But naming in docs examples can be fun *and* educational!\n\nCode examples are... just that: *examples*. They are illustrative of larger concepts, not a function or configuration value you'll be stuck with. \n\nAnd, you're limited in how many you can show. You can't create examples for every situation your user might encounter while using your project. So, these examples need to help your reader make connections and form patterns to apply to their situation.\n\nOne PR suggestion I often make is to **choose example file names that reinforce their use**. It is helpful for readers to see the typical files and folder structure of your own project reflected in examples. This allows them to relate your examples to their own code. \n\nYou can squeeze even *more* meaning out of an example file name with a little creativity:\n\n\n- ✅ `excludedFiles: ['node_modules/chonky-module/not-this-huge-file.mp4']`\n- 😐 `excludedFiles: ['files/subdirectory/foo.txt']`\n\n(Is \"chonky\" in your style guide? 😅)\n\nThis is also a safer way to inject a *tiny bit* of humour into your docs without \"telling a joke.\" Even if my reader doesn't get the reference \"chonky\" (or why it's hilarious, thank you very much), \"huge\" *is* descriptive without trying so hard. \n\nThis example still conveys a little *extra* meaning even if \"huge\" isn't a familiar word. Media is a reasonable example of a potentially large file. Excluding items from the `node_modules` folder is also a common task my reader might perform.\n\nWhether you go with the familiar and expected, or the unusual and whimsical, you can get \"bonus docs\" when you pay special attention to your example file names!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-43-whats-in-a-name.mdx","a3a65c2ca4a23878","blog/50-44-we-did-it",{id:722,data:724,body:733,filePath:734,digest:735,deferredRender:23},{title:725,editUrl:23,head:726,template:42,sidebar:727,pagefind:23,draft:14,authors:729,date:730,excerpt:731,tags:732},"Tip 44 - we did it!",[],{hidden:14,attrs:728},{},[166],["Date","2024-08-06T00:00:00.000Z"],"Separate yourself from, and instead focus on, your reader.",[199,200],":::tip\nSeparate yourself from, and instead focus on, your reader.\n:::\n\nI don't know your docs situation. I don't know your style guide. I don't know your constraints, your stakeholders, your audience. I also don't know your stress level, your mood, or your past experiences. You do.\n\nSome consider it \"friendly\" to write instructions as if you were sitting right there beside your reader, going through the steps with them. But, you're not. You're separated by time and space, at a minimum. There's probably a *lot* more going on that you don't share.\n\n\"We\" is — *at best* — a lie. At its worst, it's condescending. It does not reliably make it through the “avoid sarcastic reader reactions” editing pass. (*Now, we see...* \"Who sees? I sure as heck don't see this!\") \n\nIt can also be unclear who \"we\" is referring to in your docs. In some situations, it is used to include the reader. Other times, it may be used to speak on behalf of the project, as in \"We recommend...\"\n\nOne PR suggestion I'm often making is to **address, not include, the reader.** This most often takes the form of changing step-by-step instructions from \"We will now create a new page...\" to \"You will now create a new page...\" \n\nAnd, I hope if you do that, it feels a *little* weird to you, and it prompts you to try alternatives such as, \"You must now create a new page...\" Eventually, I hope it feels the most natural to just write \"Create a new page...\" and [give your reader a direct instruction](/blog/50-41-if-you-please)!\n\n- ✅ Use the `useStoryblokApi` hook to query your data. This will initialize a new client instance using your integration configuration.\n- 😐 We will use the `useStoryblokApi` hook to query our data. This will initialize a new client instance using our integration configuration.\n\nTrying to \"support\" your reader through your steps with \"we\" can quickly take a turn from friendly to awkward, or even disturbing. \"We will use the API to...\" is one thing. But referring to *\"our\"* data feels a little intrusive.\n\nRemoving the reader-inclusive \"we\" also has an added benefit: it prevents you from thinking about *yourself* in the instruction. Using (or implying) “you” naturally puts the emphasis on your reader, and what they are doing. It guides you towards thinking about helping *them*. What might *their* set up look like? Writing “our” can trick you into thinking about your *own* context or situation that your reader might not share.\n\nI know I won't change *every* mind with this tip, even though it's one of my favourites! Using \"we\" is such a common docs practice that I can only assume that some find value in it.\n\nWhatever your take on \"we\", can *we* at least agree that using \"I\" is off the table? I don't know about you, but I don't expect to be reading a personal story or take in official docs.\n\n- 😬 I will use the `useStoryblokApi` hook to query my data. This will initialize a new client instance using my integration configuration.\n\n(I mean, it's not just me, right? You could imagine a reading where that even comes across as *creepy*...)\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-44-we-did-it.mdx","346387b0cb7570c4","blog/50-45-and-another-thing",{id:736,data:738,body:747,filePath:748,digest:749,deferredRender:23},{title:739,editUrl:23,head:740,template:42,sidebar:741,pagefind:23,draft:14,authors:743,date:744,excerpt:745,tags:746},"Tip 45 - and another thing...",[],{hidden:14,attrs:742},{},[166],["Date","2024-08-07T00:00:00.000Z"],"Every new fact is 'another thing', but you don't always need to call attention to it!",[199,200],":::tip\nEvery new fact is \"another thing,\" but you don't always need to call attention to it!\n:::\n\nIn Astro docs, we try to limit the number of \"asides\" (UI elements marked as \"note\", \"tip\", \"caution\" etc... like the one above!) to information that is truly tangential to the core material in some way. Otherwise, if it's just part of \"how things work,\" we believe we should include it in the regular documentation text.\n\nWe have to have this guidance because it is very common for people to learn a new fact, realize it's not explicity stated in our docs, and then submit a contribution to add a \"tip\" or a \"note\" with this new piece of information.\n\nUnfortunately, this TIL (*\"Today I learned...\"*) approach can easily lead to docs looking like a board of sticky notes. When *everything* stands out, *nothing* stands out. [Banner blindness](https://en.wikipedia.org/wiki/Banner_blindness) is real!\n\n\nIn addition to, \"omg stop making everything a flaming orange caution; your project won't explode because you didn't add a client directive\", one PR suggestion I'll make is to **remove extra words like \"also\" when you don't mean to emphasize the \"additional-ness\" of an idea**. \"Also\" is helpful to call out a \"similar addition,\" but not *every* addition.\n\n\"Components are reusable. Components are also composable. You can also write components from several different frameworks. Components can also pass and recieve props.\" It's easy to go overboard \"sticky note\"-ing \"also\" on to every new idea, whether or not the *similarity of the addition* is interesting, important, true, or helpful.\n\n\n- ✅ To avoid repeating the same HTML elements on every page, you can move common elements into a layout component. You can use as many or as few layout components as you’d like.\n- 😐 To avoid repeating the same HTML elements on every page, you can move common elements into a layout component. You can also use as many or as few layout components as you’d like.\n\nJust like [\"but\" sets the reader up to expect a surprise](/blog/50-38-this-and-that), \"also\" can make the reader think they missed something important that came before. We can file this under \"words mean things,\" and I like to make sure that each word I include in my docs is contributing to the reader's experience as intended. \n\nCertainly, if what came before *is helpful* to understanding this sentence, I will make that connection! If a superflous word like \"also\" gives me a better reading flow, I might decide to use it. It's (usually!) not wrong. It's occasionally overwhelming. It's sure to grab my attention while editing *just in case* it doesn't provide any benefit.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-45-and-another-thing.mdx","8160a4417e4cb5ab","blog/50-46-not-a-bug-its-a-feature",{id:750,data:752,body:761,filePath:762,digest:763,deferredRender:23},{title:753,editUrl:23,head:754,template:42,sidebar:755,pagefind:23,draft:14,authors:757,date:758,excerpt:759,tags:760},"Tip 46 - it's not a bug; it's a feature!",[],{hidden:14,attrs:756},{},[166],["Date","2024-08-08T00:00:00.000Z"],"Emphasize the positive! Help your readers achieve, not avoid.",[199,200],":::tip\nEmphasize the positive! Help your readers achieve, not avoid.\n:::\n\nDocs is a resource for how things work... and is often consulted when they don't! Troubleshooting references can help people look up their issue by problem or symptom. However, when people are in your docs to learn or explore, there is nothing wrong with presenting an idealized state of your project.\n\nAre there caveats and gotchas in your project? I'd be shocked if there weren't! Will everyone hit them? Maybe not. Should docs scare someone preemptively? I prefer not to. \n\nOne PR suggestion, contributed by an Astro Team Docs member, is to **help your reader do X to achieve Y, rather than to avoid Z**. Turn that frown upside down! That thing that you're worried *might not work* if they get it wrong? It's a *feature of your project* when they get it right! Help them succeed.\n\n- ✅ To run middleware for pre-rendered pages, set `edgeMiddleware: true`. This allows you to use middleware to perform actions such as authentication checks or redirects while still rendering static HTML output.\n\n- 😐 If you use Middleware to implement authentication, redirects, or similar things, you may need to enable `edgeMiddleware: true`. Otherwise, your Middleware will not run at runtime for pre-rendered pages.\n\n*\"Avoid\"* threatenening your reader with consequences. Don't make them juggle learning how something works in theory with how it might go wrong in practice. Problems are only relevant to people who have them. To everyone else, it's more information being thrown at them, sometimes making them feel like they have to be overly cautious.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-46-not-a-bug-its-a-feature.mdx","e933d9425b24292e","blog/50-47-ch-ch-ch-ch-changes",{id:764,data:766,body:775,filePath:776,digest:777,deferredRender:23},{title:767,editUrl:23,head:768,template:42,sidebar:769,pagefind:23,draft:14,authors:771,date:772,excerpt:773,tags:774},"Tip 47 - Ch-ch-ch-ch-changes",[],{hidden:14,attrs:770},{},[166],["Date","2024-08-09T00:00:00.000Z"],"Document change like a *verb*, not just as a noun.",[199,200],":::tip\nDocument change like a *verb*, not just as a noun.\n:::\n\nI get it! You're excited to tell your community about new updates to your project. Your team worked hard and is celebrating an accomplishment. They may have done some Clever Things™️ or removed some long-standing pain points. You publish release notes or update a CHANGELOG with *what you did*. (*mic drop; dust hands; walk away*)\n\nBut, the task has only just begun for the people who use your project! Not only do they have to learn about your changes. They may have to change their own code or how they use your project.\n\nOne PR suggestion I often make is to **include actionable guidance alongside the description of a change**. Your project *has* changes. Your reader needs to *make* changes! Connecting those dots in your change documentation can remove a lot of the pain, suffering, and stress of upgrading to a new version.\n\n- ✅ Astro v3.0 changes the default port from 3000 to 4321. 🚀 Update any existing references to `localhost:3000`, for example in tests or in your README, to reflect the new port `localhost:4321`.\n\n- 😐 The new default port is 4321. 🚀\n\nDon't just tell them *what*. Show them *how*.\n\nDon't make me tap the [\"no one ever complained that docs were too easy to read\"](https://vimeo.com/238673931#t=2045s) sign again!\n\nYou may think the \"advice\" is trivial. Surely, your reader will know what to *do* with the information. But, your team has already written tests for various situations and can pinpoint which areas of a project might need updating. Who wouldn't appreciate a checklist to ensure they didn't miss anything during a major upgrade?\n\n It's how we write the [Astro upgrade guide breaking changes](https://docs.astro.build/en/upgrade-astro/#upgrade-guides) (And, I document [our preferred breaking changes docs format](https://contribute.docs.astro.build/upgrade-guides/breaking-changes/) in Astro Docs Docs.)\n\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-47-ch-ch-ch-ch-changes.mdx","0ba04ec16913e014","blog/50-48-do-it-yourself",{id:778,data:780,body:789,filePath:790,digest:791,deferredRender:23},{title:781,editUrl:23,head:782,template:42,sidebar:783,pagefind:23,draft:14,authors:785,date:786,excerpt:787,tags:788},"Tip 48 - do it yourself",[],{hidden:14,attrs:784},{},[166],["Date","2024-08-10T00:00:00.000Z"],"Use examples to enhance your point, not make it.",[199,200],":::tip\nUse examples to enhance your point, not make it.\n:::\n\nWe can never have enough ideas to illustrate the sometimes abstract concepts we need to cover in our docs! Examples help contextualize ideas expressed in our terms, and relate them to our readers' world.\n\nAs docs writers, we use both the abstract and the concrete. We can't write for every reader, so we have to write for all readers, using every tool available to us. Examples make *sense*, but are they sufficient for making *meaning*?\n\nOne PR suggestion I often make is to **describe or define the general concept before launching into examples**. Your list of examples isn't exhaustive; you won't necessarily list what your reader is hoping to do.\n\nExample first writing make your reader *synthesize* (put parts together to construct a whole) which is more challenging than *analysis* (breaking down a concept into its parts). You are asking your reader to create meaning out of selected examples instead of providing a solid foundation to expand upon. There is no guarantee they will draw the conclusion you want them to.\n\n- ✅ Enable Astro's view transitions to create animated transitions between different website views. This links elements from both an outgoing page and the incoming page, so you can persist or animate common elements such as a blog post image. You can even make the entire page appear to fade or slide in.\n- 😐 To fade into a new page, zoom in on the image when selecting a blog post, or make the next page slide in, enable Astro's view transitions.\n\nAstro Docs readers are already building their own projects. I try not to make them build their own definitions, too!\n  \nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-48-do-it-yourself.mdx","80134c4bc28cff30","blog/50-49-nwtwwhb",{id:792,data:794,body:803,filePath:804,digest:805,deferredRender:23},{title:795,editUrl:23,head:796,template:42,sidebar:797,pagefind:23,draft:14,authors:799,date:800,excerpt:801,tags:802},"Tip 49 - NWTWWHB",[],{hidden:14,attrs:798},{},[166],["Date","2024-08-11T00:00:00.000Z"],"What doesn't kill you makes (your docs) stronger.",[199,200],":::tip\nWhat doesn't kill you makes (your docs) stronger.\n:::\n\n*\"Is it good?\"*\n\n*\"Well, it's **n**ot **w**orse **t**han **w**hat **w**e **h**ad **b**efore...\"*\n\n*\"Ship it!\"*\n\nNot every submission we receive to Astro does is... amazing. If we're lucky, they're helpful.\n\nWe're not always lucky.\n\nBut, we understand that **someone believed this was a valuable contribution**. They willingly and voluntarily took the time to fork the repo, edit the content, create a pull request... they must really want to help! \n\nMaintaining community-driven docs means identifying and channelling the desire to contribute. Community is the lifeblood of an open source project. It's who we write the docs *for* and the reason we exist.\n\nWe invest in our community by providing public-facing docs, and we can allow them to feel invested in us by including them in our project. Spot a typo? Fix it! Did an external link change? Update it! Want to rewrite the section on passing props to framework components? Uh... maybe let's talk?\n \nWhen I can't immediately see how a proposed change is useful, I try to [\"Yes, and...\"](https://en.wikipedia.org/wiki/Yes,_and...) I ask what they hoped to achieve. What problem were they trying to solve, and can I help explore the problem with then to see if we can find a solution that fits within Astro docs' scope, mandate, and style?\n\n- ✅ Finding a way to say yes to things!\n\nThere are myriad reasons why someone may choose to contribute. A problematic contribution is an opportunity to engage, and to figure out whether their very real issue can lead to an outcome that validates their experience and addresses their desire to be a part of the solution... without messing up your lovely docs in the process!\n\nA standard of \"not worse than what we had before\" (*#NWTWWHB*) is inclusive. And, I am including my own half-baked ideas, too! We may not accept every submission that comes our way. But we also don't waste as much time deciding, and our process actively discourages gate keeping or making potential contributors jump through excessive hoops.\n\nDid you not make things worse? Congratulations! That's all any of us can hope for at the end of the day. Welcome to Team Docs! Here's your badge, find a spot in our FacePile...\n\nYou can have an active culture of accepting community contributions and still maintain docs quality. In fact, you have no choice! Too many people are watching now... 😅\n\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-49-nwtwwhb.mdx","b64ea87251069e0b","blog/50-5-easy-fix-better-edit",{id:806,data:808,body:817,filePath:818,digest:819,deferredRender:23},{title:809,editUrl:23,head:810,template:42,sidebar:811,pagefind:23,draft:14,authors:813,date:814,excerpt:815,tags:816},"Tip 5 - don't let the easy edit distract you",[],{hidden:14,attrs:812},{},[166],["Date","2024-06-28T00:00:00.000Z"],"Don't let the easy fix distract you from the better edit.",[199,200],":::tip\nDon't let the easy fix distract you from the better edit.\n:::\n\nAstro Docs has over 1000 community contributors! And, I review *most* of their English contributions. With such a large, active population submitting content, we get submissions that regularly contain many of the common spelling and grammar mistakes you'd expect.\n\nExperienced writers and editors can spot the wrong version of \"it's/its\", \"there/their/there\", or \"opt in/opt-in\" a mile a way. These tiny mistakes are so common (we all make them!) and we are primed to see them when we're reviewing. Sometimes in our haste to correct them, we run the risk of missing the \"better edit.\" \n\nThese fixes are important! Little inaccuracies in your text can undermine your readers' confidence in the accuracy of your documentation. Noticing these errors distracts your readers. And, it can distract *you* while you're editing.\n\nThis tip is for the reviewing stage: **Don't fall for the feeling of of having edited when you've only \"fixed.\"** Would the contribution have passed your review if it didn't need \"fixing?\" \n\n\n- 😐  \"For more information about the supported options, how to get it ~~setup~~ **set up** when using Prettier inside VS Code **‸,** and more, see the plugin's README.\"\n\n- ✅ \"See the Prettier plugin's README for more information about supported options, how to set up Prettier inside VS Code, and more.\"\n\nThis is one way in which the editing stage differs from the writing stage. You can't \"unsee\" what was put in front of you. As a reviewer, I will always be anchored by the existing text in front of me. When an obvious fix is grabbing my attention, I remind myself to correct it *as a first step*. Then, the review editing can begin!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-5-easy-fix-better-edit.mdx","08f8bd45c02a5f63","blog/50-50-tip-your-server",{id:820,data:822,body:831,filePath:832,digest:833,deferredRender:23},{title:823,editUrl:23,head:824,template:42,sidebar:825,pagefind:23,draft:14,authors:827,date:828,excerpt:829,tags:830},"Tip 50 - tip your server",[],{hidden:14,attrs:826},{},[166],["Date","2024-08-12T00:00:00.000Z"],"Use tips for actionable, optional, been-there-done-that content.",[199,200],":::tip\nUse tips for actionable, optional, been-there-done-that content.\n:::\n\nWe try to [avoid sticky note docs](/blog/50-45-and-another-thing), where new pieces of information feel bolted on and fight for our readers' attention. Instead, we prefer to carefully weave new content into existing documentation whenever posible.\n\nSometimes, information is helpful and timely, though perhaps *not* particularly easy to integrate. \"Asides\" (note, tip, caution, danger...) exist for a reason! They have their uses, but they are not interchangeable. I choose to leave \"caution\" and \"danger\" for legitimate threats that may be difficult or impossible to recover from. Just doesn't work? That's probably a \"note.\"\n\nIn the spirit of finally \"tipping out\" today, I'll share when I am particularly inclined to use a \"tip!\" Hint, the icon we use in Astro Docs/Starlight for our tip tells you most of what you need to know...\n\nI use tips for **actions**, like the rocket launching into space! A tip is something to **do**, not know. It may be a shortcut, or a clever alternative. It may be an extra preparation step that will make the whole (officially documented) process go smoother.\n\nA tip is also not **required**. It *is* an \"aside.\" It maybe loosely or entirely tangential. Your reader can choose whether to heed it, but it's generally understood as a Good Idea™️.\n\nIt is intented to be **helpful**. It is shared from the trenches of experience, a cave of wisdom, a place of love.\n\nAnd that, gentle reader, is where this series takes its leave! \n\nThank you for joining me on this journey. I have truly appreciated the interactions to the individual posts on Mastodon. I did not know what I was signing up for, what to expect, who would care... but I certainly never felt alone.\n\nIf nothing else, I've enjoyed revisiting some of my past work and really forcing myself to put into words some of Past Sarah's decisions. This has provided me some clarity, and with any luck, it's been clear outside observers.\n\nTomorrow, a new journey begins! Until we meet again!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-50-tip-your-server.mdx","a6aeb5920ca513be","blog/50-6-new-gets-old",{id:834,data:836,body:845,filePath:846,digest:847,deferredRender:23},{title:837,editUrl:23,head:838,template:42,sidebar:839,pagefind:23,draft:14,authors:841,date:842,excerpt:843,tags:844},"Tip 6 - new gets old fast",[],{hidden:14,attrs:840},{},[166],["Date","2024-06-29T00:00:00.000Z"],"New gets old fast. Save it for timely or dated posts.",[199,200],":::tip\nNew gets old fast; save it for timely or dated posts.\n:::\n\nAstro releases new features all the time. We let our community know about them through several content channels: our blog, social media, and the project CHANGELOG in the code repository. \n\nAll of these are announcements that are meant to exist in the moment and to draw people's attention to something new. Documentation of the feature, however, has a different purpose, and a different lifespan.\n\nOne PR suggestion I often make is **to remove text describing a feature as \"new\" in its official documentation**. \"New\" features age quickly, so save yourself the extra maintenance burden of deciding when they are \"no longer new\" and going back to update your docs when they are \"old\".\n\nKnowing that a feature is \"new\" may not even be particularly helpful to a reader who has never used your project before, or who is several versions behind. Instead, consider labeling features with the version of the software in which they were added. This is not only more precise than \"new\", but also future-proof because it does not need updating.\n\nIf you'd like your docs to highlight newly added content, consider ways to automate adding *and removing* this content. For example, Astro Docs uses conditional logic to automatically display a small \"new\" badge only if a feature was added in the latest stable version.\n\n![A config option `error` showing \"Added in: astro@4.11.0\" with a small \"New\" badge](../../../assets/new-badge.webp)\n\nWhile \"new\" features of your project may be exciting for *you*, your documentation exists to serve the needs of your readers. They may just be getting started and *everything* is \"new\" to them!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-6-new-gets-old.mdx","5d16ab64b8b5a0ba","blog/50-7-title-code-blocks",{id:848,data:850,body:859,filePath:860,digest:861,deferredRender:23},{title:851,editUrl:23,head:852,template:42,sidebar:853,pagefind:23,draft:14,authors:855,date:856,excerpt:857,tags:858},"Tip 7 - title your code blocks",[],{hidden:14,attrs:854},{},[166],["Date","2024-06-30T00:00:00.000Z"],"Add file names as titles to your code blocks.",[199,200],":::tip\nAdd file names as titles to your code blocks.\n:::\n\nAstro Docs includes a *lot* of code snippets! We spend a lot of time making sure the code in our examples is not just correct, but as minimal as necessary to illustrate one key idea. However, providing the best code example in the world isn't helpful if your reader doesn't know where to put it!\n\nOne PR edit I am often making is to **title code blocks with the name of the file containing the code**. However you add titles to your code samples ([Starlight](https://starlight.astro.build/) documentation sites include [Expressive Code](https://expressive-code.com/) enabled by default), I suggest using that space to display the filename:\n\n```astro title=\"src/pages/index.astro\"\n---\nimport Layout from './layouts/Layout';\n---\n<Layout>\n  <h1>Welcome, world!</h1>\n</Layout>\n\n```\n\nBe honest: do you sometimes just scan docs looking for the code examples to copy? 😅 (And, is it *only* sometimes?)\n\nEspecially in larger guides that involve multiple files (e.g. a layout, a dynamic routing page, a component), code samples without titles rely on your paragraph text to explain where this code is (or is to be added). This can mean rereading and double-checking of instructions, especially if your code examples only show the *new* lines of code to be added and not the surrounding code to give a hint as to which file you're now talking about.\n\nProviding the file name in the title is a great way to add helpful, contextual information without extra \"explainy\" words. It's the kind of \"information dense\" presentation that doesn't overwhelm your reader. And as a title, it exists outside of the code itself so that it doesn't get copied to the clipboard.\n\nIf your reader is following along in their own project, seeing the title gives them a chance to navigate to their corresponding file even before they see the code. They may be juggling a lot in their head as they work through your instructions, and keeping the the location of the code tightly coupled with the code itself in one bundle can be a helpful convenience.\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-7-title-code-blocks.mdx","62493c0f098a7436","blog/50-8-dont-forget",{id:862,data:864,body:873,filePath:874,digest:875,deferredRender:23},{title:865,editUrl:23,head:866,template:42,sidebar:867,pagefind:23,draft:14,authors:869,date:870,excerpt:871,tags:872},"Tip 8 - don't forget",[],{hidden:14,attrs:868},{},[166],["Date","2024-07-01T00:00:00.000Z"],"You can't remember (or forget) what you didn't already know.",[199,200],":::tip\nYou can't remember (or forget) what you didn't already know.\n:::\n\nIt's common when writing to \"help\" your readers by anticipating their problems or mistakes and preemptively calling out things they may have forgotten to do. However, **remembering and forgetting both imply the information has been covered before**. (And, if you've already said it, [why are you saying it again](/blog/50-3-repetition-pedagogical-tool)?)\n\nOne PR edit I regularly make is removing phrases about remembering and forgetting, especially when the thing to remember or forget has not yet been stated:\n\n- ✅ \"If you did not previously have a value for `base` set and are only configuring this value so that you can deploy to GitHub, you must update your internal page links to now include your `base`.\"\n\n- 😐 If you are setting up `base` only to deploy to GitHub, do not forget to update your internal page links to include your `base`.\"\n\n\"Don't forget!\" is not a special code for \"pay extra attention to this next instruction!\" It tells your reader that there is something they should have known, but you do not trust them to have remembered it. This tone may not be well-received at the best of times. And, if you *haven't* actually given them this important knowledge yet, the chances that they will *not* take kindly to this framing only increase.\n\nThere are other ways to signify that a step is particularly important or troublesome. For example, you can stop your instructions and include a short \"check point\" or \"before moving on\" section. Alternatively you can emphasize the importance of a previous step with a mention of the step that came before:\n\n> Before moving on, verify that all your internal links are working. Your site may not deploy or function as expected with a broken link, so this is a good time to stop and check for problems.\n\nYes, many people will only skim or read your docs half-heartedly. Yes, they may make a mistake or even skip an important a step entirely. I prefer not to *assume* that my reader is unable to follow my instructions. (And, even if I did make that assumption, I wouldn't *tell* them so directly!)\n\nInstead, I trust that they know how to scroll up for anything they might have missed if something didn't work the first time. For situations where I *do* worry about their ability to be successful, I can nudge them to slow down and pay extra attention in a way that is both respectful and helpful!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-8-dont-forget.mdx","43bc681518f47d96","blog/50-9-dislike-like",{id:876,data:878,body:887,filePath:888,digest:889,deferredRender:23},{title:879,editUrl:23,head:880,template:42,sidebar:881,pagefind:23,draft:14,authors:883,date:884,excerpt:885,tags:886},"Tip 9 - I dislike \"like\"",[],{hidden:14,attrs:882},{},[166],["Date","2024-07-02T00:00:00.000Z"],"Don't make people figure out how one thing is 'like' something else.",[199,200],":::tip\nDon't make people figure out how one thing is \"like\" something else.\n:::\n\nIn docs, we write tons of examples showing our readers how something works. These often follow a more general explanation or definition to illustrate how to use this feature or idea in their project. Just like [remembering and forgetting assumes prior awareness](/50-8-dont-forget), the word \"like\" often does a lot of heavy lifting! \n\nI never want my reader to struggle to figure out what I mean by, \"Do it *like this*...\" You cannot assume that your reader knows which part of a code snippet is meaningful, especially when surrounding lines of code are shown for context. What specifically am I modelling? What's the pattern are they supposed to notice and be able to repeat?\n\nOne PR edit I regularly make is **removing \"like\" in favour of a more explicit comparison or explanation**:\n\n- ✅ \"To connect your CMS to your Astro project, set the value for `token` using your personal token available in your CMS dashboard:\"\n\n- 😐 \"Connect your Astro project to your CMS *like so*:\"\n\nSimilarly, when I want to draw on my reader's (presumed) prior knowledge to relate a new concept to something familiar, I don't assume they'll automatically perceive what *I* think is a similarity. \"See this dog? It's just like balloon, of course! Got it?\" (You have to hold on to the leash tightly, or it will get away.)\n\nDon't make your readers guess what seems obvious to *you*, and they will \"like\" reading your docs a whole lot more!\n\nimport { LinkCard } from '@astrojs/starlight/components';\n\n<LinkCard title=\"See the whole list of tips!\" href=\"/blog/50-docs-tips-in-50-days\" />","src/content/docs/blog/50-9-dislike-like.mdx","b1f4efc0645fbf93","blog/50-docs-tips-in-50-days",{id:890,data:892,body:901,filePath:902,digest:903,rendered:904},{title:893,editUrl:23,head:894,template:42,prev:14,next:14,sidebar:895,pagefind:23,draft:14,authors:897,date:898,excerpt:899,tags:900,featured:23},"50 Docs tips in 50 days",[],{hidden:14,attrs:896},{},[166],["Date","2024-06-24T00:00:00.000Z"],"It's 50 days until I turn 50! So I thought I'd celebrate with a different docs tip every day.",[199,200],"I realized while working *on* this site that it's been a while since I've written *for* this site!\n\nSo, I'm hoping I can jump-start my writing by taking advantage of the delightful coincidence that I've got 50 days left until I'm 50 and motivate myself to write one, small, helpful or interesting tidbit per day. \n\n(At least, I hope they are! They are things that help me while [leading Astro's community-driven documentation site](/blog/community-driven-astro-docs/).)\n\nI'll make a separate post for each one, and will share in [a Fediverse thread on my Mastodon account](https://mastodon.social/@sarah11918/112671713862058779) but I'll come back to this one and update the list as we go.\n\nLet's see if I can do it!\n\n1. [When instructing a reader to make a new file or folder, acknowledge that one might already exist](/blog/50-1-if-one-does-not-already-exist).\n\n2. [When an instruction is conditional, put the condition *before* the action to perform](/blog/50-2-put-the-condition-first).\n\n3. [Repetition is a pedagogical tool to reinforce a concept, not a safety net](/blog/50-3-repetition-pedagogical-tool).\n\n4. [When you think (or realize) you'll reference something frequently, make it a heading](/blog/50-4-make-it-a-heading).\n\n5. [Don't let the easy fix distract you from the better edit](/blog/50-5-easy-fix-better-edit).\n\n6. [New gets old fast. Save it for timely or dated posts](/blog/50-6-new-gets-old).\n\n7. [Add file names as titles to your code blocks](/blog/50-7-title-code-blocks).\n\n8. [You can't remember (or forget) what you didn't already know](/blog/50-8-dont-forget).\n\n9. [Don't make people figure out how one thing is \"like\" something else](/blog/50-9-dislike-like).\n\n10. [Consider everywhere your headings will be used, not just in the body of the page](/blog/50-10-headings-work-alone).\n\n11. [Alternative versions are more helpful than alternate histories](/blog/50-11-what-could-have-been).\n\n12. [Let your docs tell their own story](/blog/50-12-cool-story-bro).\n\n13. [Be aware of words that may have an unintended nuance](/blog/50-13-inadvertently-inappropriate).\n\n14. [Make it clear whether your list is partial or complete](/blog/50-14-this-post-includes-advice).\n\n15. [Don't document workarounds. Fix them](/blog/50-15-dont-doc-when-you-can-fix)!\n\n16. [You don't know what your reader wants. Save effort (and words!) by not trying to guess](/blog/50-16-if-you-want-to).\n\n17. [Group the most similar items together for a definition that flows](/blog/50-17-go-with-the-flow).\n\n18. [Use sequence words to help your reader progress through your instructions](/blog/50-18-twist-then-pull).\n\n19. [When communicating updates to your project, emphasize what has changed for the reader](/blog/50-19-be-the-change).\n\n20. [Make sure readers can actually add your “add this code” examples](/blog/50-20-add-this-code).\n\n21. [Consider the surrounding context around your changes](/blog/50-21-prepare-to-be-assimilated).\n\n22. [Start with one idea per sentence. Let it tell you whether it wants to be longer or shorter](/blog/50-22-and-then).\n\n23. [Write the docs you have, not how you got them](/blog/50-23-is-not-was).\n\n24. [Front load prerequisites to avoid distracting side quests](/blog/50-24-mise-en-place).\n\n25. [Your enthusiasm isn't always contagious](/blog/50-25-just-follow-this-tip).\n\n26. [Use the words you mean](/blog/50-26-use-this).\n\n27. [Focus on your reader's needs, not their mechanics](/blog/50-27-writing-that-clicks).\n\n28. [Acknowledge the similarities to and differences from earlier instructions](/blog/50-28-this-time).\n\n29. [Use visual emphasis for conveying meaning, not intonation](/blog/50-29-seen-and-not-heard).\n\n30. [When your users have users, you may want or need to document for them, too](/blog/50-30-link-in-your-chain).\n\n31. [Don't explain what's not in the example](/blog/50-31-as-not-shown-here).\n\n32. [The better the name, the harder you have to work for the definition](/blog/50-32-defining-the-obvious).\n\n33. [Start troubleshooting advice with the observable error, not what led to it](/blog/50-33-whats-your-problem).\n\n34. [Show the right thing so readers don't internalize the wrong thing](/blog/50-34-show-what-to-do).\n\n35. [Links are going to be clicked! Use them strategically when you want readers to leave your page](/blog/50-35-link-in-bio).\n\n36. [Don't take responsibility for documenting someone else's project](/blog/50-36-not-my-problem).\n\n37. [You may need to \"rearrange\" to support your reader's journey, not rewrite](/blog/50-37-right-words-wrong-place).\n\n38. [Save “but” for a truly unexpected turn of events. You can use “and” more than you think](/blog/50-38-this-and-that)!\n\n39. [Don't sound smart; make your reader feel smart](/blog/50-39-smarty-pants)!\n\n40. [\"Make things happen\" in your life, not in your docs writing](/blog/50-40-make-my-day).\n\n41. [Docs is not a conversation. Skip the pleasantries](/blog/50-41-if-you-please)!\n\n42. [Assume that your reader knows whose docs they're reading](/blog/50-42-whos-there).\n\n43. [Sneak in \"extra docs\" with meaningful example file names](/blog/50-43-whats-in-a-name).\n\n44. [Separate yourself from, and instead focus on, your reader](/blog/50-44-we-did-it).\n\n45. [Every new fact is “another thing,” but you don’t always need to call attention to it](/blog/50-45-and-another-thing)!\n\n46. [Emphasize the postive! Help your readers achieve, not avoid](/blog/50-46-not-a-bug-its-a-feature).\n\n47. [Document change like a *verb*, not just as a noun](/blog/50-47-ch-ch-ch-ch-changes).\n\n48. [Use examples to enhance your point, not make it](/blog/50-48-do-it-yourself).\n\n49. [What doesn't kill you makes (your docs) stronger](/blog/50-49-nwtwwhb).\n\n50. [Use tips for actionable, optional, been-there-done-that content](/blog/50-50-tip-your-server).","src/content/docs/blog/50-docs-tips-in-50-days.md","b0dd19d208f7b3f5",{html:905,metadata:906},"<p>I realized while working <em>on</em> this site that it’s been a while since I’ve written <em>for</em> this site!</p>\n<p>So, I’m hoping I can jump-start my writing by taking advantage of the delightful coincidence that I’ve got 50 days left until I’m 50 and motivate myself to write one, small, helpful or interesting tidbit per day.</p>\n<p>(At least, I hope they are! They are things that help me while <a href=\"/blog/community-driven-astro-docs/\">leading Astro’s community-driven documentation site</a>.)</p>\n<p>I’ll make a separate post for each one, and will share in <a href=\"https://mastodon.social/@sarah11918/112671713862058779\">a Fediverse thread on my Mastodon account</a> but I’ll come back to this one and update the list as we go.</p>\n<p>Let’s see if I can do it!</p>\n<ol>\n<li>\n<p><a href=\"/blog/50-1-if-one-does-not-already-exist\">When instructing a reader to make a new file or folder, acknowledge that one might already exist</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-2-put-the-condition-first\">When an instruction is conditional, put the condition <em>before</em> the action to perform</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-3-repetition-pedagogical-tool\">Repetition is a pedagogical tool to reinforce a concept, not a safety net</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-4-make-it-a-heading\">When you think (or realize) you’ll reference something frequently, make it a heading</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-5-easy-fix-better-edit\">Don’t let the easy fix distract you from the better edit</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-6-new-gets-old\">New gets old fast. Save it for timely or dated posts</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-7-title-code-blocks\">Add file names as titles to your code blocks</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-8-dont-forget\">You can’t remember (or forget) what you didn’t already know</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-9-dislike-like\">Don’t make people figure out how one thing is “like” something else</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-10-headings-work-alone\">Consider everywhere your headings will be used, not just in the body of the page</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-11-what-could-have-been\">Alternative versions are more helpful than alternate histories</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-12-cool-story-bro\">Let your docs tell their own story</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-13-inadvertently-inappropriate\">Be aware of words that may have an unintended nuance</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-14-this-post-includes-advice\">Make it clear whether your list is partial or complete</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-15-dont-doc-when-you-can-fix\">Don’t document workarounds. Fix them</a>!</p>\n</li>\n<li>\n<p><a href=\"/blog/50-16-if-you-want-to\">You don’t know what your reader wants. Save effort (and words!) by not trying to guess</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-17-go-with-the-flow\">Group the most similar items together for a definition that flows</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-18-twist-then-pull\">Use sequence words to help your reader progress through your instructions</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-19-be-the-change\">When communicating updates to your project, emphasize what has changed for the reader</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-20-add-this-code\">Make sure readers can actually add your “add this code” examples</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-21-prepare-to-be-assimilated\">Consider the surrounding context around your changes</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-22-and-then\">Start with one idea per sentence. Let it tell you whether it wants to be longer or shorter</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-23-is-not-was\">Write the docs you have, not how you got them</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-24-mise-en-place\">Front load prerequisites to avoid distracting side quests</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-25-just-follow-this-tip\">Your enthusiasm isn’t always contagious</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-26-use-this\">Use the words you mean</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-27-writing-that-clicks\">Focus on your reader’s needs, not their mechanics</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-28-this-time\">Acknowledge the similarities to and differences from earlier instructions</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-29-seen-and-not-heard\">Use visual emphasis for conveying meaning, not intonation</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-30-link-in-your-chain\">When your users have users, you may want or need to document for them, too</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-31-as-not-shown-here\">Don’t explain what’s not in the example</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-32-defining-the-obvious\">The better the name, the harder you have to work for the definition</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-33-whats-your-problem\">Start troubleshooting advice with the observable error, not what led to it</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-34-show-what-to-do\">Show the right thing so readers don’t internalize the wrong thing</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-35-link-in-bio\">Links are going to be clicked! Use them strategically when you want readers to leave your page</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-36-not-my-problem\">Don’t take responsibility for documenting someone else’s project</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-37-right-words-wrong-place\">You may need to “rearrange” to support your reader’s journey, not rewrite</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-38-this-and-that\">Save “but” for a truly unexpected turn of events. You can use “and” more than you think</a>!</p>\n</li>\n<li>\n<p><a href=\"/blog/50-39-smarty-pants\">Don’t sound smart; make your reader feel smart</a>!</p>\n</li>\n<li>\n<p><a href=\"/blog/50-40-make-my-day\">“Make things happen” in your life, not in your docs writing</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-41-if-you-please\">Docs is not a conversation. Skip the pleasantries</a>!</p>\n</li>\n<li>\n<p><a href=\"/blog/50-42-whos-there\">Assume that your reader knows whose docs they’re reading</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-43-whats-in-a-name\">Sneak in “extra docs” with meaningful example file names</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-44-we-did-it\">Separate yourself from, and instead focus on, your reader</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-45-and-another-thing\">Every new fact is “another thing,” but you don’t always need to call attention to it</a>!</p>\n</li>\n<li>\n<p><a href=\"/blog/50-46-not-a-bug-its-a-feature\">Emphasize the postive! Help your readers achieve, not avoid</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-47-ch-ch-ch-ch-changes\">Document change like a <em>verb</em>, not just as a noun</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-48-do-it-yourself\">Use examples to enhance your point, not make it</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-49-nwtwwhb\">What doesn’t kill you makes (your docs) stronger</a>.</p>\n</li>\n<li>\n<p><a href=\"/blog/50-50-tip-your-server\">Use tips for actionable, optional, been-there-done-that content</a>.</p>\n</li>\n</ol>",{headings:907,localImagePaths:908,remoteImagePaths:909,frontmatter:910,imagePaths:915},[],[],[],{title:893,authors:911,date:912,pubDate:913,excerpt:899,tags:914,featured:23,prev:14,next:14},[166],["Date","2024-06-24T00:00:00.000Z"],"2024-06-24",[199,200],[],"blog/astro-learners-paradise",{id:916,data:918,body:930,filePath:931,digest:932,rendered:933},{title:919,description:920,editUrl:23,head:921,template:42,sidebar:922,pagefind:23,draft:14,authors:924,date:925,excerpt:926,tags:927},"Astro is a learner's paradise!","How Astro makes it easy to learn new frameworks, all in your own existing project.",[],{hidden:14,attrs:923},{},[166],["Date","2021-09-30T00:00:00.000Z"],"One of Astro's selling points has been that you can bring your own mix-and-match components... but I didn't really get the power of that as a *learner* until just now, listening to Fred K. Schott interviewed on devtools.fm",[928,929],"astro","blogging","# Astro is a learner's paradise!\n\nMy most recent experiment was to render two identical components, one counter/button written in React (which I know) and one written in Svelte (which I do not know) on the same page. This was originally going to be a post comparing the two, and that post will happen. \n\nBut, while doing my end-of-the-month photo organizing, I finally got around to listening to [Fred](https://twitter.com/FredKSchott) being [interviewed on devtools.fm about Astro](https://devtools.fm/episode/14)... and THAT's when it really clicked for me that **Astro is the reason I can so easily play around with these various front-end tools, languages and frameworks as a learner**.\n\nWhen I set out to try writing a Svelte component, it didn't even *occur* to me to go to CodeSandbox and find a Svelte template (which is absolutely what I would have otherwise had to do). Admittedly, I did have to go into my Astro config file and add a Svelte renderer, but Astro's error message was helpful in pointing that out when I was initially unsuccessful in rendering my Svelte counter.\n\n**There was zero start-up cost to write my first Svelte component, and Fred explains why (at 36:02):**\n\n>\"...you've heard about this new framework, we are a great way to try it out. In any other project, you have to make a bet, this whole thing is gonna be React, and then that's your project. Astro's one of the only ways you can ... try it out, this one component. If you don't like it, pull it out! No big deal! You didn't just have to re-architect your entire project because you wanted to try a new framework... it's certainly a great thing for experimentation. There's no cost to me to bring in a new framework, and that framework doesn't actually break everything else that I've done.\"\n\nHere are a couple of other quotations from the interview hosts that I found noteworthy enough to transcribe (before I realized that a transcription was available on their website, of course. SMRT.)\n\n>\"There's a lot to be said, if you do web development for a living, being able to play with different components and interject them directly into your blog posts. It's like, 'Hey, here's this really cool vue component, and the thing that it does!\" without really having to think about your architecture. That's super powerful.'\"\n\n![](/images/birdhrthin.png)\n\n>\"Just the idea that this can be expanded in the future, so if React falls out of vogue and there's some new, better thing that comes along, we can jump on that ship and incrementally migrate with little to no cost.\"\n\n\nSo, eventually I'll get around to writing the post to accompany the process of creating my React and Svelte counter buttons in the same page experiment, but for now, I thought it was noteworthy to discuss *why* that is such a big deal in the first place:\n\nI didn't have to go to CodeSandbox and look for a Svelte template, or find something to fork on GitHub.\n\nI didn't have to spin up anything new/different. I just literally added a new component, with a different file extension, into my already-existing, already-working blog.\n\nI could LEARN Svelte through Astro, if I wanted to.\n\nThis isn't just a \"write in what you feel comfortable in\" tool. This thing I'm learning *is itself* a learning tool, and code playground, all wrapped into my plain old website!","src/content/docs/blog/astro-learners-paradise.md","e0d2d9b9e139df16",{html:934,metadata:935},"<h1 id=\"astro-is-a-learners-paradise\">Astro is a learner’s paradise!</h1>\n<p>My most recent experiment was to render two identical components, one counter/button written in React (which I know) and one written in Svelte (which I do not know) on the same page. This was originally going to be a post comparing the two, and that post will happen.</p>\n<p>But, while doing my end-of-the-month photo organizing, I finally got around to listening to <a href=\"https://twitter.com/FredKSchott\">Fred</a> being <a href=\"https://devtools.fm/episode/14\">interviewed on devtools.fm about Astro</a>… and THAT’s when it really clicked for me that <strong>Astro is the reason I can so easily play around with these various front-end tools, languages and frameworks as a learner</strong>.</p>\n<p>When I set out to try writing a Svelte component, it didn’t even <em>occur</em> to me to go to CodeSandbox and find a Svelte template (which is absolutely what I would have otherwise had to do). Admittedly, I did have to go into my Astro config file and add a Svelte renderer, but Astro’s error message was helpful in pointing that out when I was initially unsuccessful in rendering my Svelte counter.</p>\n<p><strong>There was zero start-up cost to write my first Svelte component, and Fred explains why (at 36:02):</strong></p>\n<blockquote>\n<p>“…you’ve heard about this new framework, we are a great way to try it out. In any other project, you have to make a bet, this whole thing is gonna be React, and then that’s your project. Astro’s one of the only ways you can … try it out, this one component. If you don’t like it, pull it out! No big deal! You didn’t just have to re-architect your entire project because you wanted to try a new framework… it’s certainly a great thing for experimentation. There’s no cost to me to bring in a new framework, and that framework doesn’t actually break everything else that I’ve done.”</p>\n</blockquote>\n<p>Here are a couple of other quotations from the interview hosts that I found noteworthy enough to transcribe (before I realized that a transcription was available on their website, of course. SMRT.)</p>\n<blockquote>\n<p>“There’s a lot to be said, if you do web development for a living, being able to play with different components and interject them directly into your blog posts. It’s like, ‘Hey, here’s this really cool vue component, and the thing that it does!” without really having to think about your architecture. That’s super powerful.’”</p>\n</blockquote>\n<p><img src=\"/images/birdhrthin.png\" alt=\"\"></p>\n<blockquote>\n<p>“Just the idea that this can be expanded in the future, so if React falls out of vogue and there’s some new, better thing that comes along, we can jump on that ship and incrementally migrate with little to no cost.”</p>\n</blockquote>\n<p>So, eventually I’ll get around to writing the post to accompany the process of creating my React and Svelte counter buttons in the same page experiment, but for now, I thought it was noteworthy to discuss <em>why</em> that is such a big deal in the first place:</p>\n<p>I didn’t have to go to CodeSandbox and look for a Svelte template, or find something to fork on GitHub.</p>\n<p>I didn’t have to spin up anything new/different. I just literally added a new component, with a different file extension, into my already-existing, already-working blog.</p>\n<p>I could LEARN Svelte through Astro, if I wanted to.</p>\n<p>This isn’t just a “write in what you feel comfortable in” tool. This thing I’m learning <em>is itself</em> a learning tool, and code playground, all wrapped into my plain old website!</p>",{headings:936,localImagePaths:941,remoteImagePaths:942,frontmatter:943,imagePaths:947},[937],{depth:938,slug:939,text:940},1,"astro-is-a-learners-paradise","Astro is a learner’s paradise!",[],[],{title:919,description:920,authors:944,date:945,excerpt:926,tags:946},[166],["Date","2021-09-30T00:00:00.000Z"],[928,929],[],"blog/contribute-open-source-docs-edit-page-on-github",{id:948,data:950,body:960,filePath:961,digest:962,rendered:963},{title:951,editUrl:23,head:952,template:42,sidebar:953,pagefind:23,draft:14,authors:955,date:956,excerpt:957,tags:958},"Contribute to Open Source Docs via \"Edit this page\" on GitHub",[],{hidden:14,attrs:954},{},[166],["Date","2022-02-10T00:00:00.000Z"],"Have you ever been reading documentation for an open source project and found a typo, or an out-of-date code example? If there's an \"edit this page on GitHub\" link, then you're only a few clicks away from contributing to Open Source and helping out a project!",[9,959],"open source","With open source projects, not only can you *see* the code, you can help *edit and maintain* the code, too!\r\n\r\nHere's an example of how you can contribute to [Astro's documentation](https://docs.astro.build), right from your browser!\r\n\r\n## Edit this page\r\nOn every page of the Astro documentation, there is a pencil icon and a link to \"Edit this page\" in the right hand sidebar.\r\n\r\n![Astro Docs home page, with the edit this page link circled.](https://lh3.googleusercontent.com/pw/AM-JKLU_kl-WFfHVC6TBI-CZe7esReIiCzC_xaPd4kdjQFri7mVsOFovee04s5p76FzRKR_hKbPtVUjdYYDeFUx6lzuIsXp52p9H5KqzSvkn0uQz8JYtKKzcp50J7B0g56lxQ-itFF3mhbfsCH9zxcwM7vQiTg=w2367-h1334-no?)\r\n\r\nClick this link!  Your browser will navigate to the Astro Docs source repository on GitHub, taking you directly to the file for the page you're viewing. To make a contribution to this file, select the pencil icon to edit. If you are not logged in, you will be prompted to log in. \r\n\r\n![GitHub page, wit the pencil icon for editing the page highlighted, and hover text: You must be logged in to make or propose changes.](https://lh3.googleusercontent.com/pw/AM-JKLWVjV1esyJ6ytzpgiCBX204uQoDfINTRCUqX1GN936Rd5MkPr4aZrkwuWORHWF9NggpJ4YIUu1ptidj2jjak2J8kW8Mj_k0tCuN79Vo0RY8jNPjviK26fKNoRmM-HsLmfz4INflxaGbuzh9e4j7YF_M_w=w2132-h1009-no?)\r\n\r\nIf you *are* logged in, the pencil icon will take you to edit this file in your fork of this project. (If this is your first time editing a project, a fork will automatically be created in your own GitHub account. Yay! You now own a copy of the Astro docs!)\r\n\r\n![GitHub page, wit the pencil icon for editing the page highlighted, and hover text:Edit this file in your fork of the project.](https://lh3.googleusercontent.com/pw/AM-JKLWipslaN8fxh8j2IdCnyfyJhiv_6zVd-EuvkNVyxrZR5lTJr5S5_jwUFKyB24qXVRIW2vtdCK_mAprpaIV4EIuDvUzqFGoceXqTwqDCtfDT7U6gSCm2PP6InF6x7wQScP_Eyx1-jwMtoYeP-PQkq-OyPQ=w2132-h1009-no?)\r\n\r\n\r\n## Propose Changes\r\nAfter clicking the pencil icon to edit that file, you will be greeted by a banner reminding you that you do not have permission to make changes *directly* to the file. Instead, you will make changes in your *own* copy of the documents, then submit a pull request to the original project.\r\n\r\nIn edit mode, you can flip between typing Markdown source code and previewing those changes on the page.\r\n\r\n![Editing a page in GitHub, with a banner highlighted that reads: You're making changes in a project that you don't have write access to. Submitting a change will write it to a new branch in your fork so you can send a pull request.](https://lh3.googleusercontent.com/pw/AM-JKLXJqnQSZ1S1A0N7DGLLMlmGH0hM0Et9cmzqMOLa8TsE_2YAdt2JL7FB-vV4KMFCmZ7-fhV0WT-q2N77YWo8TEYqS_yuGzX3BPPY-UOl94JGmisEbxoGyKC_eIHKElAkvuaSxCvHq5NTJbi1QG1O8XTFOA=w2132-h1223-no?)\r\n\r\nOnce you have made changes, use the \"Propose Changes\" button at the bottom of the page to submit your new version of the page to the Open Source project for consideration. Be sure to include a short but descriptive title of what you changed, and optionally, a longer description. This could be a more thorough explanation of what you changed, or why you believe the change was necessary or appropriate. \r\n\r\n![The Propose Changes text entry submission box, with space to enter a title and a description.](https://lh3.googleusercontent.com/pw/AM-JKLXWu82RfWuzpY1OYplqYyQTPpr3eFNJhs9JIunoRHsUBNtCXv6a87ZvVZk93zCRgvYgudH4SErQrqgzGYsoVR7JKhED2P1uR709clbLmM1J_4lVSTVoWt164V5HHkeKf-Xt_Z2FAOO2jL-w4FRN_1MlGQ=w1849-h805-no?)\r\n\r\nAfter \"proposing changes,\" you'll still have two more steps to go (and two more chances to back out!) in order to create a pull request. So there's absolutely no risk in going this far!\r\n\r\n## Create a pull request\r\nNext, you'll be taken to a page that performs a check to make sure that your changes are able to be merged, without conflict, into the open source repository. It's at this point that you'll click the submit button to \"create a pull request\" (PR)... but this is only the button that takes you to *another* page where you'll have a chance to edit your PRs title and description before *actually* opening it (sending your proposed changes to the original repository). \r\n\r\nIt's totally safe to click here! You've still got one more chance to back out!\r\n\r\n![Message: Able to merge. These branches can be automatically merged. Followed by a submit button to Create Pull Request.](https://lh3.googleusercontent.com/pw/AM-JKLVNBeNY81MqF9gzK-_kfFX5we3Kk8SyMYHSujsi1wGyvAR0_pyHRZQrTXk4XppHA9jiwTupp8yMXyd6inn4TB3-wPltW7uXs12uGBtaZeuvcZX4m2eeyJ3jZNNhQF0qwGPDtP7EYpcBqF_mj_rZBQ327Q=w1747-h195-no?)\r\n\r\nThe next page you'll reach will again confirm that your changes can be merged without creating a conflict, and will allow you to adjust your title and description as necessary. (This screenshot shows a pull request to one of my own repositories this time, instead of the Astro docs.)\r\n\r\n![The Open a Pull Request page on GitHub. A more advanced editor for creating a more elaborate description, and then a final create pull request button at the bottom.](https://lh3.googleusercontent.com/pw/AM-JKLXinD_jpQl7ciFjpI2yN8E-lJPgpcTbPOu7O89Bm9CC85AL0cC9udngyowgur5QFzAJV0-UVibRylt8RGTP9EZKtxx6ZbnkagBZCObaKJ2-N-PLrNg6CVEQy4UnYXnW2OxhYd7cW-OmINk1RIGPO9KwtQ=w1747-h836-no?authuser=0)\r\n\r\n>⚠️ **When you click \"Create a pull request\" on this screen, now you *actually* create a pull request! This one counts!**\r\n\r\nHere, you can leave a comment in Markdown, and also preview your comment. So, if you'd like to add a more descriptive or elaborate description of your changes here, including lists, formatting, code blocks... feel free!\r\n\r\nAlso, there is a checkbox (selected by default) at the bottom, just before the submit button, for allowing edits by maintainers. This allows a maintainer of the project to accept your pull request while still making a change like fixing a typo or addressing a style issue. Perhaps the maintainer agrees with the idea of your proposted changes, but is unable to accept them exactly as you've written them. By checking this box, you're allowing the maintainer to modify your changes so that they can still accept your pull request. Otherwise, if the maintainer cannot accept your changes *exactly* as you've proposed them, they will need to ask you to make changes and resubmit, or will be forced to deny your proposed changes entirely.\r\n\r\nOnce you are satisfied with the content of your pull request, click the button to submit (for realz!) and you'll be taken to a confirmation screen that shows your \"open\" pull request, in the original repository.\r\n\r\n## Success!\r\n![A GitHub page for a completed pull request, showing its status as open, options for closing it or adding another comment, as well as a button to unsubscribe from further notifications about this request.](https://lh3.googleusercontent.com/pw/AM-JKLVm_4gUSrAdry7tFHPm2qiWnXNHS_x4LoYOLRRDnbXIYlg31Ia4uVOxynamMfysRFj1M9c8PI01AlrVi1vhmJmMaQ5-WpP2DG_zJnJ7yX_O0e_CBL1Ciydd42ojuO4nNOeF7k2qqsqu3x-Epzl2-J3JoA=w1806-h1229-no?authuser=0)\r\n\r\nCongratulations! Your contribution has left your hands! Your pull request joins all the other pull requests (shown in the upper left) to that project. \r\n\r\nYou can still add a follow up comment or decide to close the pull request at any time by revisiting this page. You can't \"delete\" a pull request, but you can \"close\" it to let the maintainers of the project know that you are withdrawing your proposed changes. The pull request continues to exist, (and can even be re-opened with the press of a button!) but closed PRs are typically hidden out of sight behind a default filter that only shows \"open\" (unresolved) pull requests.\r\n\r\nAlso be aware that you will be automatically subscribed to receive notifications for any activity on this pull request. You can customize your notification preferences, but by default, you will receive an email when there is any activity on your request.\r\n\r\n## Continuing to Contribute\r\n\r\nYour GitHub profile will now contain local copies, that *you* own, of the repositories to which you submitted changes. This means, you can easily revisit them at any time and contribute again and again!\r\n\r\n![A GitHub profile page showing the user's repositories. Under each local repository, it reads Forked from... the original project](https://lh3.googleusercontent.com/pw/AM-JKLVtcxnpUc5qai86ZKw32mIiHV6FpZMVqqUEtvsagHAXMskeohdGKB-QWJYfp42U-Mud9BBUJmuMTn9iIMq8vnw9SoAsL7VXUFgv4Kykf1DNIt9Rb_7A4dSizI1krJsn2rRXl-OfLAYN80fpZcleeRtqIw=w1828-h694-no?authuser=0)\r\n\r\nYou can continue to edit files on GitHub, or you can open these repositories however you prefer to work on them: locally on your machine, in an online development environment or code editor like Gitpod or CodeSandbox, or by using the handy \".\" (period key) shortcut while on GitHub to open github.dev for a VS Code editing experience instead of GitHub's default individual file editing page.\r\n\r\n### ⚠️ Avoid merge conflicts!\r\n\r\nRemember how GitHub checked *multiple times* to make sure your changes could be merged into the original repository without any conflicts? Remember, the open source project probably has several people contributing to it, and it is changing all the time! (Even if you only work on your local copy every now and then.)\r\n\r\nTo make sure that any new changes you propose are compatible with the *current version* of the project, before you begin editing, you should always ***fetch upstream*** so that your project incorporates any new changes since the last time you contributed.\r\n\r\n![The main page of a forked, local repository showing This branch is 11 commits behind as well as Contribute and Fetch upstream options](https://lh3.googleusercontent.com/pw/AM-JKLXlr6bZkeal-1mmFhUgME_5LEmxsCICrfEo5ppodxVJ5MqYNC3DbKeuwhkeIhG2UD_DnM_New6XkQLuFzK8EJf5IXS5w8QGPuczxRa7UXvAJX0C4Yt6UponzpNrKpE4rufZdGONlgbyI9Eeo3KUoeYHyg=w1534-h449-no?)\r\n\r\nNavigating into one of your repositories should show you if your forked copy of the project is *behind* (i.e. not caught up with changes to) the original. There will also be an option to \"fetch upstream\" which will add all the new changes, and project commit history of the original project to your own.\r\n\r\n**Always do fetch upstream first, before starting to make changes to your local copy!**\r\n\r\nThere is even a [handy GitHub app called \"Pull\"](https://github.com/apps/pull) that you can authorize to run automatically to perform this action at regular intervals so that you can avoid going a long time without fetching, and avoid issues of massive, even breaking, changes in the original project conflicting with what's in your local copy. You should still fetch manually before each work session though, to catch any up-to-the-minute changes before you begin editing.\r\n\r\nAny changes you make here are *only* local changes, contained in *your* repository. So feel free to experiment! You don't have to send your changes back every time you make them... or, ever! You can work independently for as long as you want and make as many commits *to your own project* as you like. (Just remember to fetch upstream each time you begin again, to keep up-to-date with any upstream changes.)\r\n\r\nWhen you *do* have new changes commited to your local fork of the project that you want to contribute back via a new pull request, go back to your repository's main page. Instead of \"fetching upstream,\" this time you can \"Contribute\" back to the original project. (These options are next to each other on the page.)\r\n\r\n\"Contribute\" will start the process for a brand new pull request, first by checking for merge conflicts, and then by allowing you to provide a good title and description for your changes. Your pull request, once opened, is attached to the original project for review, and the cycle begins again!\r\n\r\n## Thank you for contributing to open source!","src/content/docs/blog/contribute-open-source-docs-edit-page-on-github.md","397aa0db93345472",{html:964,metadata:965},"<p>With open source projects, not only can you <em>see</em> the code, you can help <em>edit and maintain</em> the code, too!</p>\n<p>Here’s an example of how you can contribute to <a href=\"https://docs.astro.build\">Astro’s documentation</a>, right from your browser!</p>\n<h2 id=\"edit-this-page\">Edit this page</h2>\n<p>On every page of the Astro documentation, there is a pencil icon and a link to “Edit this page” in the right hand sidebar.</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLU_kl-WFfHVC6TBI-CZe7esReIiCzC_xaPd4kdjQFri7mVsOFovee04s5p76FzRKR_hKbPtVUjdYYDeFUx6lzuIsXp52p9H5KqzSvkn0uQz8JYtKKzcp50J7B0g56lxQ-itFF3mhbfsCH9zxcwM7vQiTg=w2367-h1334-no?\" alt=\"Astro Docs home page, with the edit this page link circled.\"></p>\n<p>Click this link!  Your browser will navigate to the Astro Docs source repository on GitHub, taking you directly to the file for the page you’re viewing. To make a contribution to this file, select the pencil icon to edit. If you are not logged in, you will be prompted to log in.</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLWVjV1esyJ6ytzpgiCBX204uQoDfINTRCUqX1GN936Rd5MkPr4aZrkwuWORHWF9NggpJ4YIUu1ptidj2jjak2J8kW8Mj_k0tCuN79Vo0RY8jNPjviK26fKNoRmM-HsLmfz4INflxaGbuzh9e4j7YF_M_w=w2132-h1009-no?\" alt=\"GitHub page, wit the pencil icon for editing the page highlighted, and hover text: You must be logged in to make or propose changes.\"></p>\n<p>If you <em>are</em> logged in, the pencil icon will take you to edit this file in your fork of this project. (If this is your first time editing a project, a fork will automatically be created in your own GitHub account. Yay! You now own a copy of the Astro docs!)</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLWipslaN8fxh8j2IdCnyfyJhiv_6zVd-EuvkNVyxrZR5lTJr5S5_jwUFKyB24qXVRIW2vtdCK_mAprpaIV4EIuDvUzqFGoceXqTwqDCtfDT7U6gSCm2PP6InF6x7wQScP_Eyx1-jwMtoYeP-PQkq-OyPQ=w2132-h1009-no?\" alt=\"GitHub page, wit the pencil icon for editing the page highlighted, and hover text this file in your fork of the project.\"></p>\n<h2 id=\"propose-changes\">Propose Changes</h2>\n<p>After clicking the pencil icon to edit that file, you will be greeted by a banner reminding you that you do not have permission to make changes <em>directly</em> to the file. Instead, you will make changes in your <em>own</em> copy of the documents, then submit a pull request to the original project.</p>\n<p>In edit mode, you can flip between typing Markdown source code and previewing those changes on the page.</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLXJqnQSZ1S1A0N7DGLLMlmGH0hM0Et9cmzqMOLa8TsE_2YAdt2JL7FB-vV4KMFCmZ7-fhV0WT-q2N77YWo8TEYqS_yuGzX3BPPY-UOl94JGmisEbxoGyKC_eIHKElAkvuaSxCvHq5NTJbi1QG1O8XTFOA=w2132-h1223-no?\" alt=\"Editing a page in GitHub, with a banner highlighted that reads: You&#x27;re making changes in a project that you don&#x27;t have write access to. Submitting a change will write it to a new branch in your fork so you can send a pull request.\"></p>\n<p>Once you have made changes, use the “Propose Changes” button at the bottom of the page to submit your new version of the page to the Open Source project for consideration. Be sure to include a short but descriptive title of what you changed, and optionally, a longer description. This could be a more thorough explanation of what you changed, or why you believe the change was necessary or appropriate.</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLXWu82RfWuzpY1OYplqYyQTPpr3eFNJhs9JIunoRHsUBNtCXv6a87ZvVZk93zCRgvYgudH4SErQrqgzGYsoVR7JKhED2P1uR709clbLmM1J_4lVSTVoWt164V5HHkeKf-Xt_Z2FAOO2jL-w4FRN_1MlGQ=w1849-h805-no?\" alt=\"The Propose Changes text entry submission box, with space to enter a title and a description.\"></p>\n<p>After “proposing changes,” you’ll still have two more steps to go (and two more chances to back out!) in order to create a pull request. So there’s absolutely no risk in going this far!</p>\n<h2 id=\"create-a-pull-request\">Create a pull request</h2>\n<p>Next, you’ll be taken to a page that performs a check to make sure that your changes are able to be merged, without conflict, into the open source repository. It’s at this point that you’ll click the submit button to “create a pull request” (PR)… but this is only the button that takes you to <em>another</em> page where you’ll have a chance to edit your PRs title and description before <em>actually</em> opening it (sending your proposed changes to the original repository).</p>\n<p>It’s totally safe to click here! You’ve still got one more chance to back out!</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLVNBeNY81MqF9gzK-_kfFX5we3Kk8SyMYHSujsi1wGyvAR0_pyHRZQrTXk4XppHA9jiwTupp8yMXyd6inn4TB3-wPltW7uXs12uGBtaZeuvcZX4m2eeyJ3jZNNhQF0qwGPDtP7EYpcBqF_mj_rZBQ327Q=w1747-h195-no?\" alt=\"Message: Able to merge. These branches can be automatically merged. Followed by a submit button to Create Pull Request.\"></p>\n<p>The next page you’ll reach will again confirm that your changes can be merged without creating a conflict, and will allow you to adjust your title and description as necessary. (This screenshot shows a pull request to one of my own repositories this time, instead of the Astro docs.)</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLXinD_jpQl7ciFjpI2yN8E-lJPgpcTbPOu7O89Bm9CC85AL0cC9udngyowgur5QFzAJV0-UVibRylt8RGTP9EZKtxx6ZbnkagBZCObaKJ2-N-PLrNg6CVEQy4UnYXnW2OxhYd7cW-OmINk1RIGPO9KwtQ=w1747-h836-no?authuser=0\" alt=\"The Open a Pull Request page on GitHub. A more advanced editor for creating a more elaborate description, and then a final create pull request button at the bottom.\"></p>\n<blockquote>\n<p>⚠️ <strong>When you click “Create a pull request” on this screen, now you <em>actually</em> create a pull request! This one counts!</strong></p>\n</blockquote>\n<p>Here, you can leave a comment in Markdown, and also preview your comment. So, if you’d like to add a more descriptive or elaborate description of your changes here, including lists, formatting, code blocks… feel free!</p>\n<p>Also, there is a checkbox (selected by default) at the bottom, just before the submit button, for allowing edits by maintainers. This allows a maintainer of the project to accept your pull request while still making a change like fixing a typo or addressing a style issue. Perhaps the maintainer agrees with the idea of your proposted changes, but is unable to accept them exactly as you’ve written them. By checking this box, you’re allowing the maintainer to modify your changes so that they can still accept your pull request. Otherwise, if the maintainer cannot accept your changes <em>exactly</em> as you’ve proposed them, they will need to ask you to make changes and resubmit, or will be forced to deny your proposed changes entirely.</p>\n<p>Once you are satisfied with the content of your pull request, click the button to submit (for realz!) and you’ll be taken to a confirmation screen that shows your “open” pull request, in the original repository.</p>\n<h2 id=\"success\">Success!</h2>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLVm_4gUSrAdry7tFHPm2qiWnXNHS_x4LoYOLRRDnbXIYlg31Ia4uVOxynamMfysRFj1M9c8PI01AlrVi1vhmJmMaQ5-WpP2DG_zJnJ7yX_O0e_CBL1Ciydd42ojuO4nNOeF7k2qqsqu3x-Epzl2-J3JoA=w1806-h1229-no?authuser=0\" alt=\"A GitHub page for a completed pull request, showing its status as open, options for closing it or adding another comment, as well as a button to unsubscribe from further notifications about this request.\"></p>\n<p>Congratulations! Your contribution has left your hands! Your pull request joins all the other pull requests (shown in the upper left) to that project.</p>\n<p>You can still add a follow up comment or decide to close the pull request at any time by revisiting this page. You can’t “delete” a pull request, but you can “close” it to let the maintainers of the project know that you are withdrawing your proposed changes. The pull request continues to exist, (and can even be re-opened with the press of a button!) but closed PRs are typically hidden out of sight behind a default filter that only shows “open” (unresolved) pull requests.</p>\n<p>Also be aware that you will be automatically subscribed to receive notifications for any activity on this pull request. You can customize your notification preferences, but by default, you will receive an email when there is any activity on your request.</p>\n<h2 id=\"continuing-to-contribute\">Continuing to Contribute</h2>\n<p>Your GitHub profile will now contain local copies, that <em>you</em> own, of the repositories to which you submitted changes. This means, you can easily revisit them at any time and contribute again and again!</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLVtcxnpUc5qai86ZKw32mIiHV6FpZMVqqUEtvsagHAXMskeohdGKB-QWJYfp42U-Mud9BBUJmuMTn9iIMq8vnw9SoAsL7VXUFgv4Kykf1DNIt9Rb_7A4dSizI1krJsn2rRXl-OfLAYN80fpZcleeRtqIw=w1828-h694-no?authuser=0\" alt=\"A GitHub profile page showing the user&#x27;s repositories. Under each local repository, it reads Forked from... the original project\"></p>\n<p>You can continue to edit files on GitHub, or you can open these repositories however you prefer to work on them: locally on your machine, in an online development environment or code editor like Gitpod or CodeSandbox, or by using the handy ”.” (period key) shortcut while on GitHub to open github.dev for a VS Code editing experience instead of GitHub’s default individual file editing page.</p>\n<h3 id=\"️-avoid-merge-conflicts\">⚠️ Avoid merge conflicts!</h3>\n<p>Remember how GitHub checked <em>multiple times</em> to make sure your changes could be merged into the original repository without any conflicts? Remember, the open source project probably has several people contributing to it, and it is changing all the time! (Even if you only work on your local copy every now and then.)</p>\n<p>To make sure that any new changes you propose are compatible with the <em>current version</em> of the project, before you begin editing, you should always <em><strong>fetch upstream</strong></em> so that your project incorporates any new changes since the last time you contributed.</p>\n<p><img src=\"https://lh3.googleusercontent.com/pw/AM-JKLXlr6bZkeal-1mmFhUgME_5LEmxsCICrfEo5ppodxVJ5MqYNC3DbKeuwhkeIhG2UD_DnM_New6XkQLuFzK8EJf5IXS5w8QGPuczxRa7UXvAJX0C4Yt6UponzpNrKpE4rufZdGONlgbyI9Eeo3KUoeYHyg=w1534-h449-no?\" alt=\"The main page of a forked, local repository showing This branch is 11 commits behind as well as Contribute and Fetch upstream options\"></p>\n<p>Navigating into one of your repositories should show you if your forked copy of the project is <em>behind</em> (i.e. not caught up with changes to) the original. There will also be an option to “fetch upstream” which will add all the new changes, and project commit history of the original project to your own.</p>\n<p><strong>Always do fetch upstream first, before starting to make changes to your local copy!</strong></p>\n<p>There is even a <a href=\"https://github.com/apps/pull\">handy GitHub app called “Pull”</a> that you can authorize to run automatically to perform this action at regular intervals so that you can avoid going a long time without fetching, and avoid issues of massive, even breaking, changes in the original project conflicting with what’s in your local copy. You should still fetch manually before each work session though, to catch any up-to-the-minute changes before you begin editing.</p>\n<p>Any changes you make here are <em>only</em> local changes, contained in <em>your</em> repository. So feel free to experiment! You don’t have to send your changes back every time you make them… or, ever! You can work independently for as long as you want and make as many commits <em>to your own project</em> as you like. (Just remember to fetch upstream each time you begin again, to keep up-to-date with any upstream changes.)</p>\n<p>When you <em>do</em> have new changes commited to your local fork of the project that you want to contribute back via a new pull request, go back to your repository’s main page. Instead of “fetching upstream,” this time you can “Contribute” back to the original project. (These options are next to each other on the page.)</p>\n<p>“Contribute” will start the process for a brand new pull request, first by checking for merge conflicts, and then by allowing you to provide a good title and description for your changes. Your pull request, once opened, is attached to the original project for review, and the cycle begins again!</p>\n<h2 id=\"thank-you-for-contributing-to-open-source\">Thank you for contributing to open source!</h2>",{headings:966,localImagePaths:988,remoteImagePaths:989,frontmatter:990,imagePaths:996},[967,970,973,976,979,982,985],{depth:75,slug:968,text:969},"edit-this-page","Edit this page",{depth:75,slug:971,text:972},"propose-changes","Propose Changes",{depth:75,slug:974,text:975},"create-a-pull-request","Create a pull request",{depth:75,slug:977,text:978},"success","Success!",{depth:75,slug:980,text:981},"continuing-to-contribute","Continuing to Contribute",{depth:85,slug:983,text:984},"️-avoid-merge-conflicts","⚠️ Avoid merge conflicts!",{depth:75,slug:986,text:987},"thank-you-for-contributing-to-open-source","Thank you for contributing to open source!",[],[],{title:951,authors:991,date:992,pubDate:993,excerpt:957,alt:994,tags:995},[166],["Date","2022-02-10T00:00:00.000Z"],["Date","2022-02-10T00:00:00.000Z"],"Side bar of a documentation site with a menu item called Edit This Page",[9,959],[],"blog/community-driven-astro-docs",{id:997,data:999,body:1008,filePath:1009,digest:1010,rendered:1011},{title:1000,editUrl:23,head:1001,template:42,sidebar:1002,pagefind:23,draft:14,authors:1004,date:1005,excerpt:1006,tags:1007},"Astro's Community-Driven Docs",[],{hidden:14,attrs:1003},{},[166],["Date","2022-11-04T00:00:00.000Z"],"What community-driven means to Astro Docs.",[928,9,959],"*This was orignally written in early June 2022, in response to the question, \"Have you written anything about your community-driven approach to Docs at Astro?\" My first response was, \"Give me a few days.\" My second response was this.*\n\n## Community-Driven\nTo us, community-driven means:\n\n- **collaborative** - docs are reviewed, discussed and approved publicly on GitHub\n\n- **responsive** - docs are written not just abstractly keeping the reader in mind, but often directly in response to stated or observed needs from the community\n\n- **participatory** - docs are open to contributions (of any type) from any member of the community \n\n## PR Process\n\nWhat makes us slow, makes us grow!\n\nInspired by the collaborative nature of the Astro core project itself, no PR passes without an LGTM from at least one (other) Team Docs member. \n\n_(Fun fact: since we are open to contributions from community members of all experience levels, many who contribute to our docs were unfamiliar with what LGTM stood for. Some ventured tentative guesses, many of which were way more fun than \"Looks Good To Me.\" After exploring various alternatives, our current favourite is, **\"Let's Get That Money!\"**)_\n\nDoes it make it slower that we as maintainers don't even merge our own PRs with a simple typo fix? \n\nYeah. But, we accept this tradeoff. It's a simple way to ensure that an author didn't inadvertently introduce a new typo to be fixed. But also, it means that:\n\n- We **encourage looking at the PRs regularly** so that everyone can be kept up to date with what is happening, to the extent that they want.\n\n- We can easily **receive contributions from *any* community member** in the form of an LGTM, even if they are not willing or able to write content or do more time-consuming tasks such as reviewing an entire page or testing code examples.\n\n- We naturally **put built-in onboarding and guard rails in place** to be able to manage these contributions from such a wide range of contributors, and to be able to direct them to small PR contributions first.\n\n- We **demonstrate everything that goes into a docs site**, down to typo fixes, and model a diverse range of contributions for those wanting to get involved.\n\n- We **set realistic expectations of the process of \"getting merged,\"** and that not every idea immediately makes it into production. And, it gives explicit permission to think about the PR carefully, as well as to wait for other perspectives, or second-thoughts, to surface.\n\n- We  **provide an open opportunity for public proof of open source involvment**, and our contributors can claim and own this experience.\n\n## Support as Docs\n\nLong before there was a \"Team Docs,\" Astro had an active \"Support Squad\" role on Discord. Our approach to support has become the stuff of legends, and some people have chosen to use Astro, still in alpha itself until recently, on the basis of our community alone.\n\nWhen \"Team Docs'' was established, many of our inaugural members were also seasoned Squaddies. We knew the questions people were asking in our support threads, and we had lots of practice answering them. It was natural for us to apply that experience to the docs.\n\n>If someone asks a question, answer with documentation. If the documentation doesn’t exist, write the documentation, then answer the question with documentation.\n> Jen Luker\n> https://twitter.com/knitcodemonkey/status/1486214423190519811\n \nAs a \"newer\" project with very few answers written on blogs or Stack Overflow, we knew that the only public place people were able to find answers was in our Discord channel. Team Docs had the advantage of knowing exactly what our users were asking. We could use this to steer our documentation decisions, to add or update content, and to prioritize. \n\nWe created crudely-categorized, monthly tallys of the general topics our users were asking about to point us to areas of existing documentation that could be improved. We also had a supply of raw content already written, and unsuspecting future docs contributors to get us started! \n\nOne regular task we have now incorporated into Team Docs is to go through support threads and be a little bolder about asking, \"What could we have put in the docs that would have helped you out with this?\" or \"Where in the docs would you have expected to find this?\" and to even suggest that thread participants (question askers and answerers alike) are welcome to make issues and PRs to the docs repo... partly to save *us* from recreating what's already in the thread, but also to encourage and onboard new contributors.\n\n\n## (Re)Writing in Public\n\nSince we were the only game in town, our docs were not only **our** single source of truth; they were **the** single source of truth. \n\nAlthough we knew our docs needed restructuring, they also needed to keep up with constantly evolving features that come with early version product changes. We didn't feel that we could split our resources writing a second \"idealized\" set of docs from scratch behind the scenes while at the same time maintaining the only docs that existed for our community. They needed to work **now**\n\nWe decided to edit existing content in place, guided by two key questions inspired by our Support Squad background:\n\n- Is this content **correct**?\n\n- Is this content **helpful**?\n\nMaybe our existing explanation on how page routing works in Astro was a little underwhelming. But if it was **correct** and if it gave the reader some immediate **help** to get them going or unstuck, it was serving its purpose until we could prioritize rewriting.\n\n\n## \"How can I help, if I have some time today?\"\n\nNow that we have a full-fledged Team Docs, I attempt to \"wrangle\" their efforts and energies by **explicitly demonstrating how any member of the community can contribute**.\n\nRegularly, I post messages in our Astro Discord #docs that answer what I (tongue-in-cheekly) assume to be everyone's burning question, **\"How can I help, if I have some time today?\"**\n\nThese answers might include anything (because, docs really does require a bit of *everything*) as I attempt to push the boundaries of how we think of \"docs,\" and who is a \"docs person.\" \n\nThese \"answers\" are concrete, pointed tasks that I validate by explicitly asking for them. \n\nLots of people want to \"help\" but might feel overwhelmed about where to start, or unsure whether their contribution will be useful. They might not have a lot of time or energy, and might not realize just how valuable the smallest contribution can be, especially when my own typo fix might **still** sitting in a PR!\n\nJust some of the tasks I've highlighted include:\n\n- reviewing particular PRs with a quick description of what it involves\n\n- writing new content, in response to an existing issue\n\n- testing a particular code sample or set of instructions\n\n- fixes to the site or styling improvements\n\n- researching something that needs to be written\n\n- translating a particular word or phrase, if not an entire page\n\n- brainstorming a list of \"common error messages\" for our new Troubleshooting page\n\n- labeling issues and PRs, even if you don't do anything with/about them\n\n... all the way down to simply stating a preference between two link colours! No contribution is too small!\n\nAnd then when people do step up, we celebrate their efforts. We have added a \"FacePile\" to our main docs landing page showing the GitHub avatars of every contributor to the docs repo. We regularly show off our docs progress in our Discord Showcase channel, because our docs site *is* a showcase of our community members' efforts!\n\n## Aspirations\n\nI do have some specific goals moving forward, and I hope that by building a solid community foundation around our docs site, we will be in a sustainable position to achieve them. It is easier for me, as docs lead, to step back and let the system chug along if I know that our regular docs maintenance process is well-established, and works even without me on the critical path.\n\nI have even seen one of our lead translators from our i18n group start addressing their crew with their own delightful, \"How can I help?\" posts in the Discord. We aim to provide our community docs members with clear, consistent messages so they can feel confident contributing to the docs. Modeling these tasks, routines, and ceremonies publicly also means that budding community leaders can feel confident stepping into leadership roles. \n\nThis early investment in community-driven docs now frees me up to spend some focused time writing our first introductory tutorial from scratch, which is as good an ulterior motive as it gets. My background in education and curriculum writing, and my current involvement in projects like #DevEdBookClub on Twitter can bring some relevant theory and practice not only to the tasks of planning, prioritizing, and steering the efforts of our contributors, but also to creating some fresh content influenced by common industry models and practices. \n\nI am also working to formalize our communication channels between Support Squad and Team Docs, with written contributor guides for each role so they know how they can be supporting *each other* in their interconnected efforts.\n\nWe also want to give our docs a thorough \"Every Page is Page One\" treatment. I have started to emphasize to Team Docs that, no matter how much of a page turner it might be, few people will read our docs site like a book, cover to cover. Furthermore, you can't be guaranteed that they will arrive to the docs site on the landing page. All pages have to be welcoming to new arrivals. Now that our content is **correct** and **helpful**, it needs to also be **discoverable** and **navigable**. \n\n## Docs are never done\n\nThe docs are never done is a true, and also potentially overwhelming statement. It can be all the more overwhelming, and intimidating, when this all plays out publicly, in real-time. As we are trying to systematically improve the site as a whole with a unified approach, we are also constantly responding to internal demands and external feedback.\n\nWe have opted for a community approach to our docs that does its best to work with and for our community: to encourage contributions from people who might never have thought of themselves as contributors, and to provide a structure that allows them to feel comfortable, and even celebrated, while doing so.\n\nAstro has attracted and kept users despite its still-beta status because of its strong commitment to cultivating a vibrant, healthy community. Happy people overlook a surprising number of bugs, missteps and limitations, especially when they can see that someone is working to address them. \n\nWe bring that same community vibe to our docs, and provide an easy way for anyone to jump in themselves, and *become* that someone who is working to address them!","src/content/docs/blog/community-driven-astro-docs.md","519aa91724773c07",{html:1012,metadata:1013},"<p><em>This was orignally written in early June 2022, in response to the question, “Have you written anything about your community-driven approach to Docs at Astro?” My first response was, “Give me a few days.” My second response was this.</em></p>\n<h2 id=\"community-driven\">Community-Driven</h2>\n<p>To us, community-driven means:</p>\n<ul>\n<li>\n<p><strong>collaborative</strong> - docs are reviewed, discussed and approved publicly on GitHub</p>\n</li>\n<li>\n<p><strong>responsive</strong> - docs are written not just abstractly keeping the reader in mind, but often directly in response to stated or observed needs from the community</p>\n</li>\n<li>\n<p><strong>participatory</strong> - docs are open to contributions (of any type) from any member of the community</p>\n</li>\n</ul>\n<h2 id=\"pr-process\">PR Process</h2>\n<p>What makes us slow, makes us grow!</p>\n<p>Inspired by the collaborative nature of the Astro core project itself, no PR passes without an LGTM from at least one (other) Team Docs member.</p>\n<p><em>(Fun fact: since we are open to contributions from community members of all experience levels, many who contribute to our docs were unfamiliar with what LGTM stood for. Some ventured tentative guesses, many of which were way more fun than “Looks Good To Me.” After exploring various alternatives, our current favourite is, <strong>“Let’s Get That Money!”</strong>)</em></p>\n<p>Does it make it slower that we as maintainers don’t even merge our own PRs with a simple typo fix?</p>\n<p>Yeah. But, we accept this tradeoff. It’s a simple way to ensure that an author didn’t inadvertently introduce a new typo to be fixed. But also, it means that:</p>\n<ul>\n<li>\n<p>We <strong>encourage looking at the PRs regularly</strong> so that everyone can be kept up to date with what is happening, to the extent that they want.</p>\n</li>\n<li>\n<p>We can easily <strong>receive contributions from <em>any</em> community member</strong> in the form of an LGTM, even if they are not willing or able to write content or do more time-consuming tasks such as reviewing an entire page or testing code examples.</p>\n</li>\n<li>\n<p>We naturally <strong>put built-in onboarding and guard rails in place</strong> to be able to manage these contributions from such a wide range of contributors, and to be able to direct them to small PR contributions first.</p>\n</li>\n<li>\n<p>We <strong>demonstrate everything that goes into a docs site</strong>, down to typo fixes, and model a diverse range of contributions for those wanting to get involved.</p>\n</li>\n<li>\n<p>We <strong>set realistic expectations of the process of “getting merged,”</strong> and that not every idea immediately makes it into production. And, it gives explicit permission to think about the PR carefully, as well as to wait for other perspectives, or second-thoughts, to surface.</p>\n</li>\n<li>\n<p>We  <strong>provide an open opportunity for public proof of open source involvment</strong>, and our contributors can claim and own this experience.</p>\n</li>\n</ul>\n<h2 id=\"support-as-docs\">Support as Docs</h2>\n<p>Long before there was a “Team Docs,” Astro had an active “Support Squad” role on Discord. Our approach to support has become the stuff of legends, and some people have chosen to use Astro, still in alpha itself until recently, on the basis of our community alone.</p>\n<p>When “Team Docs” was established, many of our inaugural members were also seasoned Squaddies. We knew the questions people were asking in our support threads, and we had lots of practice answering them. It was natural for us to apply that experience to the docs.</p>\n<blockquote>\n<p>If someone asks a question, answer with documentation. If the documentation doesn’t exist, write the documentation, then answer the question with documentation.\nJen Luker\n<a href=\"https://twitter.com/knitcodemonkey/status/1486214423190519811\">https://twitter.com/knitcodemonkey/status/1486214423190519811</a></p>\n</blockquote>\n<p>As a “newer” project with very few answers written on blogs or Stack Overflow, we knew that the only public place people were able to find answers was in our Discord channel. Team Docs had the advantage of knowing exactly what our users were asking. We could use this to steer our documentation decisions, to add or update content, and to prioritize.</p>\n<p>We created crudely-categorized, monthly tallys of the general topics our users were asking about to point us to areas of existing documentation that could be improved. We also had a supply of raw content already written, and unsuspecting future docs contributors to get us started!</p>\n<p>One regular task we have now incorporated into Team Docs is to go through support threads and be a little bolder about asking, “What could we have put in the docs that would have helped you out with this?” or “Where in the docs would you have expected to find this?” and to even suggest that thread participants (question askers and answerers alike) are welcome to make issues and PRs to the docs repo… partly to save <em>us</em> from recreating what’s already in the thread, but also to encourage and onboard new contributors.</p>\n<h2 id=\"rewriting-in-public\">(Re)Writing in Public</h2>\n<p>Since we were the only game in town, our docs were not only <strong>our</strong> single source of truth; they were <strong>the</strong> single source of truth.</p>\n<p>Although we knew our docs needed restructuring, they also needed to keep up with constantly evolving features that come with early version product changes. We didn’t feel that we could split our resources writing a second “idealized” set of docs from scratch behind the scenes while at the same time maintaining the only docs that existed for our community. They needed to work <strong>now</strong></p>\n<p>We decided to edit existing content in place, guided by two key questions inspired by our Support Squad background:</p>\n<ul>\n<li>\n<p>Is this content <strong>correct</strong>?</p>\n</li>\n<li>\n<p>Is this content <strong>helpful</strong>?</p>\n</li>\n</ul>\n<p>Maybe our existing explanation on how page routing works in Astro was a little underwhelming. But if it was <strong>correct</strong> and if it gave the reader some immediate <strong>help</strong> to get them going or unstuck, it was serving its purpose until we could prioritize rewriting.</p>\n<h2 id=\"how-can-i-help-if-i-have-some-time-today\">”How can I help, if I have some time today?”</h2>\n<p>Now that we have a full-fledged Team Docs, I attempt to “wrangle” their efforts and energies by <strong>explicitly demonstrating how any member of the community can contribute</strong>.</p>\n<p>Regularly, I post messages in our Astro Discord #docs that answer what I (tongue-in-cheekly) assume to be everyone’s burning question, <strong>“How can I help, if I have some time today?”</strong></p>\n<p>These answers might include anything (because, docs really does require a bit of <em>everything</em>) as I attempt to push the boundaries of how we think of “docs,” and who is a “docs person.”</p>\n<p>These “answers” are concrete, pointed tasks that I validate by explicitly asking for them.</p>\n<p>Lots of people want to “help” but might feel overwhelmed about where to start, or unsure whether their contribution will be useful. They might not have a lot of time or energy, and might not realize just how valuable the smallest contribution can be, especially when my own typo fix might <strong>still</strong> sitting in a PR!</p>\n<p>Just some of the tasks I’ve highlighted include:</p>\n<ul>\n<li>\n<p>reviewing particular PRs with a quick description of what it involves</p>\n</li>\n<li>\n<p>writing new content, in response to an existing issue</p>\n</li>\n<li>\n<p>testing a particular code sample or set of instructions</p>\n</li>\n<li>\n<p>fixes to the site or styling improvements</p>\n</li>\n<li>\n<p>researching something that needs to be written</p>\n</li>\n<li>\n<p>translating a particular word or phrase, if not an entire page</p>\n</li>\n<li>\n<p>brainstorming a list of “common error messages” for our new Troubleshooting page</p>\n</li>\n<li>\n<p>labeling issues and PRs, even if you don’t do anything with/about them</p>\n</li>\n</ul>\n<p>… all the way down to simply stating a preference between two link colours! No contribution is too small!</p>\n<p>And then when people do step up, we celebrate their efforts. We have added a “FacePile” to our main docs landing page showing the GitHub avatars of every contributor to the docs repo. We regularly show off our docs progress in our Discord Showcase channel, because our docs site <em>is</em> a showcase of our community members’ efforts!</p>\n<h2 id=\"aspirations\">Aspirations</h2>\n<p>I do have some specific goals moving forward, and I hope that by building a solid community foundation around our docs site, we will be in a sustainable position to achieve them. It is easier for me, as docs lead, to step back and let the system chug along if I know that our regular docs maintenance process is well-established, and works even without me on the critical path.</p>\n<p>I have even seen one of our lead translators from our i18n group start addressing their crew with their own delightful, “How can I help?” posts in the Discord. We aim to provide our community docs members with clear, consistent messages so they can feel confident contributing to the docs. Modeling these tasks, routines, and ceremonies publicly also means that budding community leaders can feel confident stepping into leadership roles.</p>\n<p>This early investment in community-driven docs now frees me up to spend some focused time writing our first introductory tutorial from scratch, which is as good an ulterior motive as it gets. My background in education and curriculum writing, and my current involvement in projects like #DevEdBookClub on Twitter can bring some relevant theory and practice not only to the tasks of planning, prioritizing, and steering the efforts of our contributors, but also to creating some fresh content influenced by common industry models and practices.</p>\n<p>I am also working to formalize our communication channels between Support Squad and Team Docs, with written contributor guides for each role so they know how they can be supporting <em>each other</em> in their interconnected efforts.</p>\n<p>We also want to give our docs a thorough “Every Page is Page One” treatment. I have started to emphasize to Team Docs that, no matter how much of a page turner it might be, few people will read our docs site like a book, cover to cover. Furthermore, you can’t be guaranteed that they will arrive to the docs site on the landing page. All pages have to be welcoming to new arrivals. Now that our content is <strong>correct</strong> and <strong>helpful</strong>, it needs to also be <strong>discoverable</strong> and <strong>navigable</strong>.</p>\n<h2 id=\"docs-are-never-done\">Docs are never done</h2>\n<p>The docs are never done is a true, and also potentially overwhelming statement. It can be all the more overwhelming, and intimidating, when this all plays out publicly, in real-time. As we are trying to systematically improve the site as a whole with a unified approach, we are also constantly responding to internal demands and external feedback.</p>\n<p>We have opted for a community approach to our docs that does its best to work with and for our community: to encourage contributions from people who might never have thought of themselves as contributors, and to provide a structure that allows them to feel comfortable, and even celebrated, while doing so.</p>\n<p>Astro has attracted and kept users despite its still-beta status because of its strong commitment to cultivating a vibrant, healthy community. Happy people overlook a surprising number of bugs, missteps and limitations, especially when they can see that someone is working to address them.</p>\n<p>We bring that same community vibe to our docs, and provide an easy way for anyone to jump in themselves, and <em>become</em> that someone who is working to address them!</p>",{headings:1014,localImagePaths:1036,remoteImagePaths:1037,frontmatter:1038,imagePaths:1044},[1015,1018,1021,1024,1027,1030,1033],{depth:75,slug:1016,text:1017},"community-driven","Community-Driven",{depth:75,slug:1019,text:1020},"pr-process","PR Process",{depth:75,slug:1022,text:1023},"support-as-docs","Support as Docs",{depth:75,slug:1025,text:1026},"rewriting-in-public","(Re)Writing in Public",{depth:75,slug:1028,text:1029},"how-can-i-help-if-i-have-some-time-today","”How can I help, if I have some time today?”",{depth:75,slug:1031,text:1032},"aspirations","Aspirations",{depth:75,slug:1034,text:1035},"docs-are-never-done","Docs are never done",[],[],{title:1000,authors:1039,date:1040,pubDate:1041,excerpt:1006,tags:1042,alt:1043},[166],["Date","2022-11-04T00:00:00.000Z"],["Date","2022-11-04T00:00:00.000Z"],[928,9,959],"6 stacked achievement badges, showing Astro repo stats like \"PR Perfectionist: reviewed 30 PRs\", \"Galactic Librarian: 30 Docs PRs\", \"Astronomer: Opened a PR in 3 Astro Repos\" and \"Little Green Bug: Opened an Issue.\"",[],"blog/create-astro-layout",{id:1045,data:1047,body:1058,filePath:1059,digest:1060,rendered:1061},{title:1048,description:1049,editUrl:23,head:1050,template:42,sidebar:1051,pagefind:23,draft:14,authors:1053,date:1054,excerpt:1055,tags:1056},"Creating an Astro layout - screencast and transcript","A video walkthrough of creating your first Astro layout.",[],{hidden:14,attrs:1052},{},[166],["Date","2022-01-20T00:00:00.000Z"],"This is a screencast and transcript of refactoring one of the basic Astro examples to create an initial BaseLayout component.",[1057,928],"videos","Trying out some new technology, and since I can't fit the entire transcript in the YouTube video description, here it is all on this page.\n<div class=\"video-container\">\n<iframe src=\"https://www.youtube.com/embed/9bVuIBD70wc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\nTranscript:\n\n0:01  \nHere, we're going to take a look at creating an astro layout component. So I'm just gonna open my project up in Gitpod and get it arranged the way I want.\n\n0:15  \nThe intro to any Astro project is going to be at source/pages/index.astro. So let's jump in there and take a look at what this looks like.\n\n0:27  \nAny Astro page is going to be separated into two sections: we've got this code fence block section at the top, and then we've got our HTML rendering part at the bottom. So what I want to do is look down and see that the second part of an Astro page file will render to a complete HTML document. You can see it starts with open HTML, and finishes with a closing HTML tag. To make that a little easier to see, I'm just going to clean up some of these code comments, and I'm going to collapse some of these tags so we can just get a sense of the structure and see what's going on with this rendering here. Collapsing... collapsing... navigating through... just so we can see that essentially what we have within HTML tags is a head and a body. \n\n1:29  \nAnd in our body, we've got main, we've got header, we've got some components. And I'm going to add a little bit of text, just to separate that out, because maybe we're not sure what this Tour component is doing and how that's different from the header. So now, I can refresh my browser preview here in Gitpod. \n\n1:51  \nI'm just going to organize things the way I like to see them, I can have a couple of panes going, and I can make my browser preview kind of small on the right, because I just want to see at a glance what's going on here and I want more space for my code. \n\n2:08  \nSo now we can see that yes, we do have some text on the page, let's do the same with the frontmatter. Let's delete some of these code comments where they're guiding us for the places to put our JavaScript and TypeScript. And at the very top of the page is where an Astro File expects to receive its component imports, whether they're Astro components, or React components or Svelte components. \n\n2:41  \nAnd now we are ready to make our first layout. So we're going to go back to source, create a layouts folder. And we'll create the file BaseLayout.astro. It's empty, but it exists. So before we forget, let's go back into index.astro, and import BaseLayout. And we're going to import it exactly the same way we import our other components... noting that with all these Astro components and framework components that do get imported into an Astro File, you DO need to include the file extension. \n\n3:27  \nSo a quick refresh shows we didn't break anything. We also didn't really do anything, but at least we're importing a file that exists. Now, let's choose some stuff to go into that BaseLayout folder. And I'm thinking, what we don't want to have to copy each time we make a new Astro page is HTML and head. So let's start there. \n\n3:53  \nWe're going to cut it out of index. And we'll clean it up a bit and move it into our base layout. Right now BaseLayout.astro is providing HTML and head, so we can take that closing tag out of our index file. And our index right now is just responsible for rendering the body tag. To use the layout component that we imported, we are going to wrap the content here in open and close BaseLayout tags. Alright, so we can see the body, the main, the header (let's just just format this out)... this is what the index page is responsible for rendering, so let's refresh and we get ...an error: \"Title is not defined.\"\n\n4:48  \nAll right, well, let's take a look at that because we have certainly defined a title here. The problem is that the index.astro file isn't using that title. The title is being used in BaseLayout.astro. So what we're going to have to do is pass that title information into our layout. And we're just going to do that via props, title equals title. Excellent. Refresh.\n\n5:21  \nAnd we still get the error, because although we have SENT the information, we haven't properly RECEIVED the information in our layout component. So now we're going to need a code fence. And we're going to need to import that title property from Astro.props. Perfect. That is going to receive the title just fine. And then BaseLayout will be able to use that title to create the title tag in our head. So we refresh, and there's no error... but there's also nothing else on the page. Okay, so what's going on here? \n\n6:06  \nWell, if we look at what our BaseLayout is actually rendering, (and that *is* what's getting rendered to index, because we've wrapped everything in BaseLayout), all that we're sending to index is the HTML tag and a head. \n\n6:21  \nWe need somewhere to SLOT IN the content that's actually being provided at index.astro. And in Astro, we do that via a self closing tag called slot. And now as soon as the layout knows where to slot in the information that's wrapped in the other page, we have our original page back up again, looks exactly the same. \n\n6:36  \nNow I'm just going to pop this out in Gitpod into a full tab browser preview because sometimes the simple browser in Gitpod might not have all the same interactivity as the full page preview does. So I just want to show you that those buttons, the counters are in fact working. \n\n7:11  \nIn fact, the page looks identical to the page we started with, because all we did was pull out the head and enclosed HTML tags. And we're now rendering them instead via a layout. Alright, so then the whole point of having a layout is to be able to make another page that's going to use the same thing. So to create a second page in our project, let's take a look at what index is rendering and figure out what we're going to need to throw in page two to also render a full document. \n\n8:01  \nThe first thing we should do is make sure we're importing the layout. I'm going to start a code fence and I'm going to put a layout, our BaseLayout in there. And let's take one of the counters, let's take the Svelte counter, and we will also import that into page two. So we can use that to get some test render. And we know that our layout expects a page title. So let's give this page a title: \"Page Two.\" \n\n8:32  \nNow we're ready to actually render some HTML. So we're going to start again with BaseLayout component, passing the title information, open and close tags to wrap whatever now we decided to render on page two. And we said we wanted to render a counter on page two. So here's our Svelte counter. And framework components *do* need a client directive. I'm just going to choose Load, we're not going to wait till the page is visible on the page. This is just a very small page anyway.\n\n9:14  \nWe'll put a bit of text in here. So right now we've got a paragraph tag, and we've got a Svelte counter rendered. We go back to index and and look at what we wrapped here. Notice that we do need the body tag; the body was rendered in index. Our layout is not taking care of that. So we are going to put our body and we're going to put our main tags on page two. I'm pretty sure this default project, its CSS does make use of the main tag. So just to keep things consistent, let's make sure we've also got main in here and then we need to close out main, close out body. Okay, structurally, we should have the same thing that we had for our index page. So I'm going to go up and navigate manually to page two in my little preview here. And in fact, yes, so we have a paragraph rendered, and we have a counter rendered. Now you can't see in this preview, but if you look at the top of the page, it does actually specify that the title is page two. So that's working as well. Excellent. \n\n10:44  \nNow, if we go back and compare to the index site, though, our index had a header, and our second page does not. Now you might not want every page to say welcome to Astro. But you may very well want the same header on all your pages. So we can, again, refactor and we can pull the header into the layout. But by doing so this time, we have to make sure that we're also bringing into layout the main and the body tags. \n\n11:19  \nSo let's go into the layout and after our head, that's where we're going to insert the body, main and header. And then after our slot, we'll close off the main and close off the body. The slot can go wherever you want that wrapped content to be. \n\n11:48  \nNow, if we go back to index, obviously, we don't want those closing tags duplicated, so we'll get rid of them. Now our index component is looking pretty minimal, quite easy to read. (I'm not dealing with all the indentation and formatting right now.) But now when we go to page two, same thing, we don't want our page rendering the body and main tags. Our layout is taking care of that. So refresh the index page, again, looks identical. \n\n12:18  \nAnd that's what we're going for: we are not designing, we are not creating anything new here. We are just exploring how to use refactoring to take out some stuff from the pages and have them instead rendered via an Astro layout component. \n\n12:39  \nNow if we can have two pages, we can have three pages. So now let's create page three. And let's make it super minimal. Let's see the bare minimum we need to create a new page and what it looks like when there is nothing on a page. \n\n13:01  \nWe will need the layout. And we will need to give it a title. But I'm going to remove everything wrapped in the layout in the BaseLayout ta. I'm going to remove the paragraph and the counter. I'm going to manually navigate to page three. And what do we have? We have our header. But notice that we DO have our header and we DO have a page and it works... even with nothing inside the BaseLayout open and close tags so your slot can be empty. But this gives you an idea of what your layout looks like with nothing there. This is what the layout is bringing to the table. \n\n13:47  \nSo we created a couple of new pages. But most importantly, we recreated that index page and didn't really change anything. It looks exactly to the eye the way it did before. But now it's being rendered using an Astro layout component.\n\nTranscribed by https://otter.ai","src/content/docs/blog/create-astro-layout.md","6efa5ba38464af2d",{html:1062,metadata:1063},"<p>Trying out some new technology, and since I can’t fit the entire transcript in the YouTube video description, here it is all on this page.</p>\n<div class=\"video-container\">\n<iframe src=\"https://www.youtube.com/embed/9bVuIBD70wc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\nTranscript:\n<p>0:01<br>\nHere, we’re going to take a look at creating an astro layout component. So I’m just gonna open my project up in Gitpod and get it arranged the way I want.</p>\n<p>0:15<br>\nThe intro to any Astro project is going to be at source/pages/index.astro. So let’s jump in there and take a look at what this looks like.</p>\n<p>0:27<br>\nAny Astro page is going to be separated into two sections: we’ve got this code fence block section at the top, and then we’ve got our HTML rendering part at the bottom. So what I want to do is look down and see that the second part of an Astro page file will render to a complete HTML document. You can see it starts with open HTML, and finishes with a closing HTML tag. To make that a little easier to see, I’m just going to clean up some of these code comments, and I’m going to collapse some of these tags so we can just get a sense of the structure and see what’s going on with this rendering here. Collapsing… collapsing… navigating through… just so we can see that essentially what we have within HTML tags is a head and a body.</p>\n<p>1:29<br>\nAnd in our body, we’ve got main, we’ve got header, we’ve got some components. And I’m going to add a little bit of text, just to separate that out, because maybe we’re not sure what this Tour component is doing and how that’s different from the header. So now, I can refresh my browser preview here in Gitpod.</p>\n<p>1:51<br>\nI’m just going to organize things the way I like to see them, I can have a couple of panes going, and I can make my browser preview kind of small on the right, because I just want to see at a glance what’s going on here and I want more space for my code.</p>\n<p>2:08<br>\nSo now we can see that yes, we do have some text on the page, let’s do the same with the frontmatter. Let’s delete some of these code comments where they’re guiding us for the places to put our JavaScript and TypeScript. And at the very top of the page is where an Astro File expects to receive its component imports, whether they’re Astro components, or React components or Svelte components.</p>\n<p>2:41<br>\nAnd now we are ready to make our first layout. So we’re going to go back to source, create a layouts folder. And we’ll create the file BaseLayout.astro. It’s empty, but it exists. So before we forget, let’s go back into index.astro, and import BaseLayout. And we’re going to import it exactly the same way we import our other components… noting that with all these Astro components and framework components that do get imported into an Astro File, you DO need to include the file extension.</p>\n<p>3:27<br>\nSo a quick refresh shows we didn’t break anything. We also didn’t really do anything, but at least we’re importing a file that exists. Now, let’s choose some stuff to go into that BaseLayout folder. And I’m thinking, what we don’t want to have to copy each time we make a new Astro page is HTML and head. So let’s start there.</p>\n<p>3:53<br>\nWe’re going to cut it out of index. And we’ll clean it up a bit and move it into our base layout. Right now BaseLayout.astro is providing HTML and head, so we can take that closing tag out of our index file. And our index right now is just responsible for rendering the body tag. To use the layout component that we imported, we are going to wrap the content here in open and close BaseLayout tags. Alright, so we can see the body, the main, the header (let’s just just format this out)… this is what the index page is responsible for rendering, so let’s refresh and we get …an error: “Title is not defined.”</p>\n<p>4:48<br>\nAll right, well, let’s take a look at that because we have certainly defined a title here. The problem is that the index.astro file isn’t using that title. The title is being used in BaseLayout.astro. So what we’re going to have to do is pass that title information into our layout. And we’re just going to do that via props, title equals title. Excellent. Refresh.</p>\n<p>5:21<br>\nAnd we still get the error, because although we have SENT the information, we haven’t properly RECEIVED the information in our layout component. So now we’re going to need a code fence. And we’re going to need to import that title property from Astro.props. Perfect. That is going to receive the title just fine. And then BaseLayout will be able to use that title to create the title tag in our head. So we refresh, and there’s no error… but there’s also nothing else on the page. Okay, so what’s going on here?</p>\n<p>6:06<br>\nWell, if we look at what our BaseLayout is actually rendering, (and that <em>is</em> what’s getting rendered to index, because we’ve wrapped everything in BaseLayout), all that we’re sending to index is the HTML tag and a head.</p>\n<p>6:21<br>\nWe need somewhere to SLOT IN the content that’s actually being provided at index.astro. And in Astro, we do that via a self closing tag called slot. And now as soon as the layout knows where to slot in the information that’s wrapped in the other page, we have our original page back up again, looks exactly the same.</p>\n<p>6:36<br>\nNow I’m just going to pop this out in Gitpod into a full tab browser preview because sometimes the simple browser in Gitpod might not have all the same interactivity as the full page preview does. So I just want to show you that those buttons, the counters are in fact working.</p>\n<p>7:11<br>\nIn fact, the page looks identical to the page we started with, because all we did was pull out the head and enclosed HTML tags. And we’re now rendering them instead via a layout. Alright, so then the whole point of having a layout is to be able to make another page that’s going to use the same thing. So to create a second page in our project, let’s take a look at what index is rendering and figure out what we’re going to need to throw in page two to also render a full document.</p>\n<p>8:01<br>\nThe first thing we should do is make sure we’re importing the layout. I’m going to start a code fence and I’m going to put a layout, our BaseLayout in there. And let’s take one of the counters, let’s take the Svelte counter, and we will also import that into page two. So we can use that to get some test render. And we know that our layout expects a page title. So let’s give this page a title: “Page Two.”</p>\n<p>8:32<br>\nNow we’re ready to actually render some HTML. So we’re going to start again with BaseLayout component, passing the title information, open and close tags to wrap whatever now we decided to render on page two. And we said we wanted to render a counter on page two. So here’s our Svelte counter. And framework components <em>do</em> need a client directive. I’m just going to choose Load, we’re not going to wait till the page is visible on the page. This is just a very small page anyway.</p>\n<p>9:14<br>\nWe’ll put a bit of text in here. So right now we’ve got a paragraph tag, and we’ve got a Svelte counter rendered. We go back to index and and look at what we wrapped here. Notice that we do need the body tag; the body was rendered in index. Our layout is not taking care of that. So we are going to put our body and we’re going to put our main tags on page two. I’m pretty sure this default project, its CSS does make use of the main tag. So just to keep things consistent, let’s make sure we’ve also got main in here and then we need to close out main, close out body. Okay, structurally, we should have the same thing that we had for our index page. So I’m going to go up and navigate manually to page two in my little preview here. And in fact, yes, so we have a paragraph rendered, and we have a counter rendered. Now you can’t see in this preview, but if you look at the top of the page, it does actually specify that the title is page two. So that’s working as well. Excellent.</p>\n<p>10:44<br>\nNow, if we go back and compare to the index site, though, our index had a header, and our second page does not. Now you might not want every page to say welcome to Astro. But you may very well want the same header on all your pages. So we can, again, refactor and we can pull the header into the layout. But by doing so this time, we have to make sure that we’re also bringing into layout the main and the body tags.</p>\n<p>11:19<br>\nSo let’s go into the layout and after our head, that’s where we’re going to insert the body, main and header. And then after our slot, we’ll close off the main and close off the body. The slot can go wherever you want that wrapped content to be.</p>\n<p>11:48<br>\nNow, if we go back to index, obviously, we don’t want those closing tags duplicated, so we’ll get rid of them. Now our index component is looking pretty minimal, quite easy to read. (I’m not dealing with all the indentation and formatting right now.) But now when we go to page two, same thing, we don’t want our page rendering the body and main tags. Our layout is taking care of that. So refresh the index page, again, looks identical.</p>\n<p>12:18<br>\nAnd that’s what we’re going for: we are not designing, we are not creating anything new here. We are just exploring how to use refactoring to take out some stuff from the pages and have them instead rendered via an Astro layout component.</p>\n<p>12:39<br>\nNow if we can have two pages, we can have three pages. So now let’s create page three. And let’s make it super minimal. Let’s see the bare minimum we need to create a new page and what it looks like when there is nothing on a page.</p>\n<p>13:01<br>\nWe will need the layout. And we will need to give it a title. But I’m going to remove everything wrapped in the layout in the BaseLayout ta. I’m going to remove the paragraph and the counter. I’m going to manually navigate to page three. And what do we have? We have our header. But notice that we DO have our header and we DO have a page and it works… even with nothing inside the BaseLayout open and close tags so your slot can be empty. But this gives you an idea of what your layout looks like with nothing there. This is what the layout is bringing to the table.</p>\n<p>13:47<br>\nSo we created a couple of new pages. But most importantly, we recreated that index page and didn’t really change anything. It looks exactly to the eye the way it did before. But now it’s being rendered using an Astro layout component.</p>\n<p>Transcribed by <a href=\"https://otter.ai\">https://otter.ai</a></p>",{headings:1064,localImagePaths:1065,remoteImagePaths:1066,frontmatter:1067,imagePaths:1071},[],[],[],{title:1048,description:1049,date:1068,authors:1069,excerpt:1055,tags:1070},["Date","2022-01-20T00:00:00.000Z"],[166],[1057,928],[],"blog/documenting-the-docs",{id:1072,data:1074,body:1083,filePath:1084,digest:1085,rendered:1086},{title:1075,editUrl:23,head:1076,template:42,sidebar:1077,pagefind:23,draft:14,authors:1079,date:1080,excerpt:1081,tags:1082},"Doc'ing the Docs!",[],{hidden:14,attrs:1078},{},[166],["Date","2022-04-06T00:00:00.000Z"],"A brief history of what's been going on in the Astro docs.",[928,9,959],"Since the docs are about to get a lot more eyes on them after the Astro Beta Lauch Week, I thought I'd take a moment to \"doc the docs\" for those who might want a window into our recent progress.\n\nPeople have very kindly been referring to \"the new docs\" or \"a re-writing of the docs\" but, docs are *always* evolving... and at least in the case of a pre-v1 beta product, potentially outdated as soon as they're published! It sometimes feels like they'll never be caught up enough to qualify as \"new.\" But they are \"actively maintained,\" and sometimes, that's the best you can hope for. 😅\n\nCalling them \"new\" might also set up the expectation that we think we're \"done\" and, nothing could be further from the truth! We're just getting started...\n\nWith new users joining the Astro community, and current members upgrading from previous versions, it was important to us all that the docs get some love and a paint job to help everyone get off to a solid start. \n\n## Where We Started\nAs new features get added and others become deprecated, open source docs often (if you're lucky!) get **patched**. Over time, one single page can lose its \"single page-iness.\" It can sound like it was written by a dozen different people in a dozen different places. (Spoiler alert: it probably was.) \n\nIt can end up being a confusing mix of general overview information too vague to be useful and highly-specific examples that solved one community member's problem that one single time... whether or not they were even *intended* to work in the first place! (\"Here we find the elusive \"documented undocumented feature in its native habitat...\") \n\nThings can end up added on a page because \"other things like it are on this page\" and not because that's where a new or confused reader would go to find them. The scope of the page can creep, or content can end up duplicated (or even worse, not *exactly* duplicated) across multiple pages. \n\nStep one for me with the Astro docs was to smooth out these rough edges.\n\n## Where We Are\nWe feel like we've mostly hit phase one of our goals: in addition to some technical reference docs now being auto-generated and updated, every page in the \"Learn\" sidebar has been read through and vetted for accuracy... typos, last-minute URL changes, and *entirely brand new configurations as of last week* aside. Oh, and by the way, Astro does SSR now? \n\nPages have been edited, and in some cases rearranged or combined with other pages so that **each page clearly tells you about a thing**. (And if we did it correctly, that thing is the page title!) \n\nIt doesn't tell you *everything* about a thing. I can't even guarantee it tells you *most things* about a thing. I know there are things about those things that you really want to know that it doesn't (yet) tell you. But what it does tell you, it tells you *pretty* well. \n\nI'd *like* to think that it probably tells you well enough about the thing that, if something's not right there, you'll **know** that it's... just not in the docs! So, you hop into the [Astro Discord](https://astro.build/chat) and you ask about the thing there. Then, we make notes about what support questions get asked, to remind us of the things we haven't yet put in the docs.\n\n## Support-Team-Docs!\nOur eager team, with a full community of support behind us, has been working steadily for months to make the Astro docs a clean, reliable resource to get you started with Astro v1. We know it's not perfect, and we do have plans for more, and more *types* of content going forward. It's never going to be \"done\"... but that's just the reality of supporting developers. And, that's what docs are: support.\n\nAstro is known for (notorious for??) its committment to community. We have long had a dedicated \"Support Squad\" whose members each receive individual notifications for every new support question posted in our Discord. Recently, we also added a \"Team Docs\" role that can similarly summon members with a mere mention. Both of these opt-in roles are open to any member of the community who feels like they don't already get enough notifications. \n\nWe are all eager and enthusiastic to help you through any issues and get you back to building your site! And, we hope you'll help us help you!\n\n## Go, You!\nIf you find a typo, a link to a page that we've moved, or the term `renderer` when it should be an `integration` now, you can let us know, or you can [edit the page on GitHub](/posts/contribute-open-source-docs-edit-page-on-github/) yourself! One of the most rewarding aspects of working closely with the docs team this year has been seeing the number of small edits submitted by \"first-time contributors.\" \n\nIf you feel a topic hasn't been covered in docs, or an example is confusing, come chat in our `#docs` channel, or file a [GitHub Issue](https://github.com/withastro/docs/issues) in the docs repository. (Maybe if you have the time, do a quick check to see if someone has already mentioned something similar, or whether there's an active [pull request](https://github.com/withastro/docs/pulls) related to your comment first... but do get involved!)\n\n## Launching into the Future\n\nI'm excited for the future possibilities with our docs, and I'm personally hoping to get the chance to bring bit of my own teaching background and style into some dedicated walk-through guides and tutorials for onboarding new astronauts. \n\nAstro, and the entire Astro community, is so user-friendly that we want our docs to be every bit as welcoming and supportive to developers of all experience levels. We know we can get you building with Astro, and we can't wait to show you how!\n\nThanks for hanging in there as we made it to a v1 Docs beta, too. Stick around, and see where we go next! 🚀","src/content/docs/blog/documenting-the-docs.md","4a7605862df9b4c5",{html:1087,metadata:1088},"<p>Since the docs are about to get a lot more eyes on them after the Astro Beta Lauch Week, I thought I’d take a moment to “doc the docs” for those who might want a window into our recent progress.</p>\n<p>People have very kindly been referring to “the new docs” or “a re-writing of the docs” but, docs are <em>always</em> evolving… and at least in the case of a pre-v1 beta product, potentially outdated as soon as they’re published! It sometimes feels like they’ll never be caught up enough to qualify as “new.” But they are “actively maintained,” and sometimes, that’s the best you can hope for. 😅</p>\n<p>Calling them “new” might also set up the expectation that we think we’re “done” and, nothing could be further from the truth! We’re just getting started…</p>\n<p>With new users joining the Astro community, and current members upgrading from previous versions, it was important to us all that the docs get some love and a paint job to help everyone get off to a solid start.</p>\n<h2 id=\"where-we-started\">Where We Started</h2>\n<p>As new features get added and others become deprecated, open source docs often (if you’re lucky!) get <strong>patched</strong>. Over time, one single page can lose its “single page-iness.” It can sound like it was written by a dozen different people in a dozen different places. (Spoiler alert: it probably was.)</p>\n<p>It can end up being a confusing mix of general overview information too vague to be useful and highly-specific examples that solved one community member’s problem that one single time… whether or not they were even <em>intended</em> to work in the first place! (“Here we find the elusive “documented undocumented feature in its native habitat…”)</p>\n<p>Things can end up added on a page because “other things like it are on this page” and not because that’s where a new or confused reader would go to find them. The scope of the page can creep, or content can end up duplicated (or even worse, not <em>exactly</em> duplicated) across multiple pages.</p>\n<p>Step one for me with the Astro docs was to smooth out these rough edges.</p>\n<h2 id=\"where-we-are\">Where We Are</h2>\n<p>We feel like we’ve mostly hit phase one of our goals: in addition to some technical reference docs now being auto-generated and updated, every page in the “Learn” sidebar has been read through and vetted for accuracy… typos, last-minute URL changes, and <em>entirely brand new configurations as of last week</em> aside. Oh, and by the way, Astro does SSR now?</p>\n<p>Pages have been edited, and in some cases rearranged or combined with other pages so that <strong>each page clearly tells you about a thing</strong>. (And if we did it correctly, that thing is the page title!)</p>\n<p>It doesn’t tell you <em>everything</em> about a thing. I can’t even guarantee it tells you <em>most things</em> about a thing. I know there are things about those things that you really want to know that it doesn’t (yet) tell you. But what it does tell you, it tells you <em>pretty</em> well.</p>\n<p>I’d <em>like</em> to think that it probably tells you well enough about the thing that, if something’s not right there, you’ll <strong>know</strong> that it’s… just not in the docs! So, you hop into the <a href=\"https://astro.build/chat\">Astro Discord</a> and you ask about the thing there. Then, we make notes about what support questions get asked, to remind us of the things we haven’t yet put in the docs.</p>\n<h2 id=\"support-team-docs\">Support-Team-Docs!</h2>\n<p>Our eager team, with a full community of support behind us, has been working steadily for months to make the Astro docs a clean, reliable resource to get you started with Astro v1. We know it’s not perfect, and we do have plans for more, and more <em>types</em> of content going forward. It’s never going to be “done”… but that’s just the reality of supporting developers. And, that’s what docs are: support.</p>\n<p>Astro is known for (notorious for??) its committment to community. We have long had a dedicated “Support Squad” whose members each receive individual notifications for every new support question posted in our Discord. Recently, we also added a “Team Docs” role that can similarly summon members with a mere mention. Both of these opt-in roles are open to any member of the community who feels like they don’t already get enough notifications.</p>\n<p>We are all eager and enthusiastic to help you through any issues and get you back to building your site! And, we hope you’ll help us help you!</p>\n<h2 id=\"go-you\">Go, You!</h2>\n<p>If you find a typo, a link to a page that we’ve moved, or the term <code dir=\"auto\">renderer</code> when it should be an <code dir=\"auto\">integration</code> now, you can let us know, or you can <a href=\"/posts/contribute-open-source-docs-edit-page-on-github/\">edit the page on GitHub</a> yourself! One of the most rewarding aspects of working closely with the docs team this year has been seeing the number of small edits submitted by “first-time contributors.”</p>\n<p>If you feel a topic hasn’t been covered in docs, or an example is confusing, come chat in our <code dir=\"auto\">#docs</code> channel, or file a <a href=\"https://github.com/withastro/docs/issues\">GitHub Issue</a> in the docs repository. (Maybe if you have the time, do a quick check to see if someone has already mentioned something similar, or whether there’s an active <a href=\"https://github.com/withastro/docs/pulls\">pull request</a> related to your comment first… but do get involved!)</p>\n<h2 id=\"launching-into-the-future\">Launching into the Future</h2>\n<p>I’m excited for the future possibilities with our docs, and I’m personally hoping to get the chance to bring bit of my own teaching background and style into some dedicated walk-through guides and tutorials for onboarding new astronauts.</p>\n<p>Astro, and the entire Astro community, is so user-friendly that we want our docs to be every bit as welcoming and supportive to developers of all experience levels. We know we can get you building with Astro, and we can’t wait to show you how!</p>\n<p>Thanks for hanging in there as we made it to a v1 Docs beta, too. Stick around, and see where we go next! 🚀</p>",{headings:1089,localImagePaths:1105,remoteImagePaths:1106,frontmatter:1107,imagePaths:1113},[1090,1093,1096,1099,1102],{depth:75,slug:1091,text:1092},"where-we-started","Where We Started",{depth:75,slug:1094,text:1095},"where-we-are","Where We Are",{depth:75,slug:1097,text:1098},"support-team-docs","Support-Team-Docs!",{depth:75,slug:1100,text:1101},"go-you","Go, You!",{depth:75,slug:1103,text:1104},"launching-into-the-future","Launching into the Future",[],[],{title:1075,authors:1108,date:1109,pubDate:1110,excerpt:1081,tags:1111,alt:1112},[166],["Date","2022-04-06T00:00:00.000Z"],"2022-04-06",[928,9,959],"An experimental preview of Astro Docs, showing GitHub avatars of every contributor to the repository. These Docs are brought to you by all these helpful people. Join us on GitHub!",[],"blog/idx-first-impressions",{id:1114,data:1116,body:1127,filePath:1128,digest:1129,rendered:1130},{title:1117,editUrl:23,head:1118,template:42,sidebar:1119,pagefind:23,draft:14,authors:1121,date:1122,excerpt:1123,tags:1124},"IDX: my first impressions",[],{hidden:14,attrs:1120},{},[166],["Date","2024-12-01T00:00:00.000Z"],"\n\"I learned to code on a Chromebook in online editors. My very first Astro project was a forked CodeSandbox of an Astro v0.12 (!) starter template.\n\nI have spent the last two years building several websites and maintaining the Astro documentation on Gitpod. \n\nTwo months ago, I switched to [IDX](https://idx.dev/) as my exclusive coding environment *(and you're not going to believe what happened next...)*\"\n",[1125,1126,959],"no local dev environment","community","I learned to code on a Chromebook in online editors. My very first Astro project was a forked CodeSandbox of an Astro v0.12 (!) starter template.\n\nI have spent the last two years building several websites and maintaining the Astro documentation on Gitpod. \n\nTwo months ago, I switched to [IDX](https://idx.dev/) as my exclusive coding environment *(and you're not going to believe what happened next...)*\n\n\nEven though I now have a Linux desktop in my office (slash laundry room), I prefer to use online IDEs.\n\nSure, some of this is a holdover from working on a seven year old Chromebook that would freeze and crash randomly. In that case, I could jump into Gitpod on my Android tablet with keyboard and **not lose a keystroke**. The workspace would still be actively running and my state was preserved. \n\nIn fact, using an online IDE I can be logged in on multiple devices at the same time, using one for my editor and another for my browser preview. I can be working on my desktop, and when Joe tells me it's espresso time, I can open the Chromebook on the couch if I still want to get a few things out of my head before committing.\n\nSince the announcement that Gitpod's hosted offering is ending and they are focusing on self-hosted and enterprise users, I decided to switch to IDX full-time to see whether it would be a suitable option for me. I have a Google account (a deal breaker for some) and use Android mobile devices, so using a Google-hosted project is not a problem for me. I decided the best way was to jump in, and I removed the \"open in Gitpod\" Chrome extension so I wouldn't be tempted. I was going to figure out how (and whether!) IDX would work.\n\nLet's get one thing out of the way first: IDX is *sloooow*.\n\nStarting up a workspace can take 30 seconds. Initializing a brand new workspace for the first time can take a minute. When you make a change to your Astro website, the browser preview will update in 12-18 seconds. In comparison, the same tasks on Gitpod typically take about half of that time. So, I'm used to slow, and this feels slow even to *me*!\n\nBut for me, it's worth the wait.\n\nOnce I got my footing in IDX and started working in a few repos, I was pleased to find that the sluggishness of the browser preview doesn't extend to the familiar code editor, which is nearly identical to VS Code. Keystrokes don't drop or lag, and every tab and menu item is instantly responsive.\n\nI have access to the same plugins I did with Gitpod through Open VSX, including the [official Astro VS Code extension](https://marketplace.visualstudio.com/items?itemName=astro-build.astro-vscode), and our [Houston theme](https://marketplace.visualstudio.com/items?itemName=astro-build.houston). I also now have the [GitHub Pull Requests extension](https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github) installed to manage all of our Astro docs contributions. Signing in to GitHub from IDX has always worked flawlessly, and the work flow is familiar.\n\nAnd I am happy to confirm that IDX works well on my 14\" Samsung tablet in Android mobile Chrome, too. Even though it's my third device when I'm at home, there are some trips where I only take my tablet, and it's important that I can continue to access and work on GitHub repositories while travelling.\n\nOf course, every piece of software has its quirks. I wouldn't say it has any more or less than Gitpod... just different ones. \n\nBoth Gitpod and IDX create \"workspaces\" that show up in your dashboard. A new workspace is created for each repository that you edit. I have already given feedback in the IDX community forums that it would be nice to be able to create an overall settings profile vs. setting up profiles for each new workspace. I find that most of my preferences are about *how I work* (show all whitespace, configure word wrap, move the main panel to the right), and not *what is going on in this particular project*. Gitpod allows me to set global preferences that apply to all workspaces by default.\n\nGitpod also allowed me to open the same repository in multiple workspaces at the same time. This meant I could work, mess things up, then just abandon the workspace and start over fresh with a new workspace. In fact, it was *intended* to work this way. Gitpod considers workspaces to be ephemeral so you're always going back to start over from your source regularly. They even warn against keeping any one workspace for too long. (Sync? What is that?) \n\nIDX's strict, \"We know you already have a workspace for this repo, so this is the one you get!\" policy seemed more limiting at first. But now I'm finding that I enjoy my dashboard *actually* being workspaces that correspond to the projects I'm working on. It's not a random mess of single-use, arbitrarily named items. I'm finding I have become more organized, and more disciplined, with better repo maintenance habits.\n\nPerhaps because of this difference, IDX handles simultaneous changes upstream and downstream *much* better than my Gitpod workspaces, which always seemed to throw errors and require git commands in the terminal to resolve. It's a small difference, but when the whole point of open source repos is to work collaboratively, having IDX handle this aspect seamlessly makes a huge difference. It feels like it's working *with* my workflow, not against it.\n\nSo, while I *hope* IDX initialization and browser preview gets faster, I have no complaints with reliability. Not everyone can handle opening a workspace, and *then* going to make a quick coffee (not the reverse). And I wouldn't blame you if you were one of those people! \n\nBut, [docs are never done](/blog/community-driven-astro-docs/#docs-are-never-done) so I'm in this for the long haul! Not only do I personally prefer the flexibility of a cloud development experience to setting up, maintaining, and troubleshooting a local machine, and the ability to seamlessly pick up where I left off on another device. I also think it's important for someone on our team to be using the same tools that many in our community will be using.\n\nAn entire generation grew up with Chromebooks in schools. Some only have access to tablets and mobile devices. When I started learning to code, I couldn't justify buying a new laptop for a hobby I wasn't even sure was going to go anywhere. (Spoiler alert, it did!)\n\nMy primary goal in leading Astro's documentation is empowerment. My purpose is to equip our community with the knowledge and resources they need to build amazing websites of their own.\n\nOnline development environments like IDX open up web development to so many more people, and I am proud to use (and abuse!) them. I *want* to push them to their limits, and provide informed, helpful user feedback so they'll get better. Because if *I* can build Astro sites in a browser tab, then anyone can!","src/content/docs/blog/idx-first-impressions.md","c6c7734c2f63c95e",{html:1131,metadata:1132},"<p>I learned to code on a Chromebook in online editors. My very first Astro project was a forked CodeSandbox of an Astro v0.12 (!) starter template.</p>\n<p>I have spent the last two years building several websites and maintaining the Astro documentation on Gitpod.</p>\n<p>Two months ago, I switched to <a href=\"https://idx.dev/\">IDX</a> as my exclusive coding environment <em>(and you’re not going to believe what happened next…)</em></p>\n<p>Even though I now have a Linux desktop in my office (slash laundry room), I prefer to use online IDEs.</p>\n<p>Sure, some of this is a holdover from working on a seven year old Chromebook that would freeze and crash randomly. In that case, I could jump into Gitpod on my Android tablet with keyboard and <strong>not lose a keystroke</strong>. The workspace would still be actively running and my state was preserved.</p>\n<p>In fact, using an online IDE I can be logged in on multiple devices at the same time, using one for my editor and another for my browser preview. I can be working on my desktop, and when Joe tells me it’s espresso time, I can open the Chromebook on the couch if I still want to get a few things out of my head before committing.</p>\n<p>Since the announcement that Gitpod’s hosted offering is ending and they are focusing on self-hosted and enterprise users, I decided to switch to IDX full-time to see whether it would be a suitable option for me. I have a Google account (a deal breaker for some) and use Android mobile devices, so using a Google-hosted project is not a problem for me. I decided the best way was to jump in, and I removed the “open in Gitpod” Chrome extension so I wouldn’t be tempted. I was going to figure out how (and whether!) IDX would work.</p>\n<p>Let’s get one thing out of the way first: IDX is <em>sloooow</em>.</p>\n<p>Starting up a workspace can take 30 seconds. Initializing a brand new workspace for the first time can take a minute. When you make a change to your Astro website, the browser preview will update in 12-18 seconds. In comparison, the same tasks on Gitpod typically take about half of that time. So, I’m used to slow, and this feels slow even to <em>me</em>!</p>\n<p>But for me, it’s worth the wait.</p>\n<p>Once I got my footing in IDX and started working in a few repos, I was pleased to find that the sluggishness of the browser preview doesn’t extend to the familiar code editor, which is nearly identical to VS Code. Keystrokes don’t drop or lag, and every tab and menu item is instantly responsive.</p>\n<p>I have access to the same plugins I did with Gitpod through Open VSX, including the <a href=\"https://marketplace.visualstudio.com/items?itemName=astro-build.astro-vscode\">official Astro VS Code extension</a>, and our <a href=\"https://marketplace.visualstudio.com/items?itemName=astro-build.houston\">Houston theme</a>. I also now have the <a href=\"https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github\">GitHub Pull Requests extension</a> installed to manage all of our Astro docs contributions. Signing in to GitHub from IDX has always worked flawlessly, and the work flow is familiar.</p>\n<p>And I am happy to confirm that IDX works well on my 14” Samsung tablet in Android mobile Chrome, too. Even though it’s my third device when I’m at home, there are some trips where I only take my tablet, and it’s important that I can continue to access and work on GitHub repositories while travelling.</p>\n<p>Of course, every piece of software has its quirks. I wouldn’t say it has any more or less than Gitpod… just different ones.</p>\n<p>Both Gitpod and IDX create “workspaces” that show up in your dashboard. A new workspace is created for each repository that you edit. I have already given feedback in the IDX community forums that it would be nice to be able to create an overall settings profile vs. setting up profiles for each new workspace. I find that most of my preferences are about <em>how I work</em> (show all whitespace, configure word wrap, move the main panel to the right), and not <em>what is going on in this particular project</em>. Gitpod allows me to set global preferences that apply to all workspaces by default.</p>\n<p>Gitpod also allowed me to open the same repository in multiple workspaces at the same time. This meant I could work, mess things up, then just abandon the workspace and start over fresh with a new workspace. In fact, it was <em>intended</em> to work this way. Gitpod considers workspaces to be ephemeral so you’re always going back to start over from your source regularly. They even warn against keeping any one workspace for too long. (Sync? What is that?)</p>\n<p>IDX’s strict, “We know you already have a workspace for this repo, so this is the one you get!” policy seemed more limiting at first. But now I’m finding that I enjoy my dashboard <em>actually</em> being workspaces that correspond to the projects I’m working on. It’s not a random mess of single-use, arbitrarily named items. I’m finding I have become more organized, and more disciplined, with better repo maintenance habits.</p>\n<p>Perhaps because of this difference, IDX handles simultaneous changes upstream and downstream <em>much</em> better than my Gitpod workspaces, which always seemed to throw errors and require git commands in the terminal to resolve. It’s a small difference, but when the whole point of open source repos is to work collaboratively, having IDX handle this aspect seamlessly makes a huge difference. It feels like it’s working <em>with</em> my workflow, not against it.</p>\n<p>So, while I <em>hope</em> IDX initialization and browser preview gets faster, I have no complaints with reliability. Not everyone can handle opening a workspace, and <em>then</em> going to make a quick coffee (not the reverse). And I wouldn’t blame you if you were one of those people!</p>\n<p>But, <a href=\"/blog/community-driven-astro-docs/#docs-are-never-done\">docs are never done</a> so I’m in this for the long haul! Not only do I personally prefer the flexibility of a cloud development experience to setting up, maintaining, and troubleshooting a local machine, and the ability to seamlessly pick up where I left off on another device. I also think it’s important for someone on our team to be using the same tools that many in our community will be using.</p>\n<p>An entire generation grew up with Chromebooks in schools. Some only have access to tablets and mobile devices. When I started learning to code, I couldn’t justify buying a new laptop for a hobby I wasn’t even sure was going to go anywhere. (Spoiler alert, it did!)</p>\n<p>My primary goal in leading Astro’s documentation is empowerment. My purpose is to equip our community with the knowledge and resources they need to build amazing websites of their own.</p>\n<p>Online development environments like IDX open up web development to so many more people, and I am proud to use (and abuse!) them. I <em>want</em> to push them to their limits, and provide informed, helpful user feedback so they’ll get better. Because if <em>I</em> can build Astro sites in a browser tab, then anyone can!</p>",{headings:1133,localImagePaths:1134,remoteImagePaths:1135,frontmatter:1136,imagePaths:1141},[],[],[],{title:1117,authors:1137,date:1138,pubDate:1139,excerpt:1123,tags:1140},[166],["Date","2024-12-01T00:00:00.000Z"],"2024-12-01",[1125,1126,959],[],"blog/non-code-contributions",{id:1142,data:1144,body:1153,filePath:1154,digest:1155,rendered:1156},{title:1145,editUrl:23,head:1146,template:42,sidebar:1147,pagefind:23,draft:14,authors:1149,date:1150,excerpt:1151,tags:1152,featured:23},"The value of non-code contributions to open source",[],{hidden:14,attrs:1148},{},[166],["Date","2023-05-20T00:00:00.000Z"],"One of the most rewarding parts about leading Astro Docs is welcoming non-code contributors to open source! We still have work to do, but the open source community is slowly starting to realize (and capitalize on!) the value of writers, translators, designers, testers, content creators, speakers, community support members.",[9,959],"## The value of non-code contributions\n\nI've heard people speak dismissively of PRs that fix a typo or update a broken link. But, maybe that speaks to attitudes towards docs in general, and we won't get into that...\n\nBut, if you are a project maintainer who cares about helping and encouraging others to *use* your work, attention to these little details conveys a big message to your community. Typos are distracting. Broken links are frustrating!\n\nInstallation instructions that aren't clear mean some people aren't installing your package. And, it can project an image of sloppiness that reflects on your code, even if that's not the case! Great design elements in your product add polish, and a carefully-designed logo and marketing website adds brand awareness. Testing your product, or participating in user experience testing, can expose uncaught weaknesses and highlight areas for improvement.\n\nWhen the community translates your docs, you gain a wider audience. When someone speaks about your product at a conference or writes a guide to using your project, new people learn about your work and how it can solve their problems. \n\nWhen people who don't contribute code actively participate in your online community spaces, other members get help and feel supported while they code. And then *they* might choose to contribute back. Sometimes, by offering more community support, and sometimes in the form of code itself... that they learned from your non-code contributing community peeps!\n\n## Supporting non-code contributors\n\nIt's especially important to be supportive of non-code contributors who may *already* feel under-valued or less-than because they are \"only\" contributing to docs, design, support, testing or product awareness and advocacy. They might also think that devs \"just know\" how to navigate all the intricacies of GitHub, and so asking for help is further branding them as non-code peeps. (Spoiler alert: knowing how to submit a PR on GitHub is *not* a skill automatically conferred by knowing how to sling bits!)\n\n## **New contributor !== code newbie:**\n\nContributing to open source, knowing the process of submitting PRs or the conventions of your project, can be overwhelming or intimidating for *anyone* who's never done it before, regardless of coding ability.\n\nThat's why non-code contributions can be great onboarding experiences for your future code contributors! There is little practical difference when submitting a PR and navigating the GitHub process between code and non-code contributions. A non-code contribution can be a gentle way for a first-time contributor to figure out the actual act of contributing before *also* worrying about how their code will be received or judged by a project maintainer.","src/content/docs/blog/non-code-contributions.md","f1913b6700ff4335",{html:1157,metadata:1158},"<h2 id=\"the-value-of-non-code-contributions\">The value of non-code contributions</h2>\n<p>I’ve heard people speak dismissively of PRs that fix a typo or update a broken link. But, maybe that speaks to attitudes towards docs in general, and we won’t get into that…</p>\n<p>But, if you are a project maintainer who cares about helping and encouraging others to <em>use</em> your work, attention to these little details conveys a big message to your community. Typos are distracting. Broken links are frustrating!</p>\n<p>Installation instructions that aren’t clear mean some people aren’t installing your package. And, it can project an image of sloppiness that reflects on your code, even if that’s not the case! Great design elements in your product add polish, and a carefully-designed logo and marketing website adds brand awareness. Testing your product, or participating in user experience testing, can expose uncaught weaknesses and highlight areas for improvement.</p>\n<p>When the community translates your docs, you gain a wider audience. When someone speaks about your product at a conference or writes a guide to using your project, new people learn about your work and how it can solve their problems.</p>\n<p>When people who don’t contribute code actively participate in your online community spaces, other members get help and feel supported while they code. And then <em>they</em> might choose to contribute back. Sometimes, by offering more community support, and sometimes in the form of code itself… that they learned from your non-code contributing community peeps!</p>\n<h2 id=\"supporting-non-code-contributors\">Supporting non-code contributors</h2>\n<p>It’s especially important to be supportive of non-code contributors who may <em>already</em> feel under-valued or less-than because they are “only” contributing to docs, design, support, testing or product awareness and advocacy. They might also think that devs “just know” how to navigate all the intricacies of GitHub, and so asking for help is further branding them as non-code peeps. (Spoiler alert: knowing how to submit a PR on GitHub is <em>not</em> a skill automatically conferred by knowing how to sling bits!)</p>\n<h2 id=\"new-contributor--code-newbie\"><strong>New contributor !== code newbie:</strong></h2>\n<p>Contributing to open source, knowing the process of submitting PRs or the conventions of your project, can be overwhelming or intimidating for <em>anyone</em> who’s never done it before, regardless of coding ability.</p>\n<p>That’s why non-code contributions can be great onboarding experiences for your future code contributors! There is little practical difference when submitting a PR and navigating the GitHub process between code and non-code contributions. A non-code contribution can be a gentle way for a first-time contributor to figure out the actual act of contributing before <em>also</em> worrying about how their code will be received or judged by a project maintainer.</p>",{headings:1159,localImagePaths:1169,remoteImagePaths:1170,frontmatter:1171,imagePaths:1177},[1160,1163,1166],{depth:75,slug:1161,text:1162},"the-value-of-non-code-contributions","The value of non-code contributions",{depth:75,slug:1164,text:1165},"supporting-non-code-contributors","Supporting non-code contributors",{depth:75,slug:1167,text:1168},"new-contributor--code-newbie","New contributor !== code newbie:",[],[],{title:1145,authors:1172,date:1173,pubDate:1174,excerpt:1151,alt:1175,tags:1176,featured:23},[166],["Date","2023-05-20T00:00:00.000Z"],"2023-05-20","Screenshot from Hacktoberfest 2022 page describing low-code and no-code contributions that would count for credit in writing, design and advocacy.",[9,959],[],"blog/reads-2024-10-06",{id:1178,data:1180,body:1192,filePath:1193,digest:1194,rendered:1195},{title:1181,description:1182,editUrl:23,head:1183,template:42,sidebar:1184,pagefind:23,draft:14,authors:1186,date:1187,excerpt:1188,tags:1189},"Reads - October 6, 2024","The things I've been reading recently!",[],{hidden:14,attrs:1185},{},[166],["Date","2024-10-06T00:00:00.000Z"],"Community building advice from FeverBee, sidebar navigation advice from Tom Johnson for large documentation sites, and more!",[1190,1126,959,1191],"reads","information architecture","Here are some things I've recently been reading and enjoyed/learned from!\n\n- [Why 95% Of Your Community Visitors Don’t Participate (And What You Should Do About It!)](https://www.feverbee.com/lurkersandlearners/) and [Stop Undervaluing Community Engagement Skills! – Communities Die Without Them](https://www.feverbee.com/engagementskills/) by Richard Mulligan of FeverBee.\n- [Building navigation for your documentation site: 5 best practices in design](https://idratherbewriting.com/files/doc-navigation-wtd/design-principles-for-doc-navigation/) by Tom Johnson at I'd Rather Be Writing.\n- [Designing Navigation for Content-Heavy Sites](https://tri.be/blog/designing-navigation-for-content-heavy-sites/) by Kyle at Modern Tribe. (He eats hot dogs.)\n- [Information Architecture for Navigation](https://abbycovert.com/writing/information-architecture-for-navigation/) by sensemaker Abby Covert.\n\nI may come back and expand upon these, or I may follow up in later posts. There are no rules! This is my first \"Reads!\"","src/content/docs/blog/reads-2024-10-06.md","459058a82763192d",{html:1196,metadata:1197},"<p>Here are some things I’ve recently been reading and enjoyed/learned from!</p>\n<ul>\n<li><a href=\"https://www.feverbee.com/lurkersandlearners/\">Why 95% Of Your Community Visitors Don’t Participate (And What You Should Do About It!)</a> and <a href=\"https://www.feverbee.com/engagementskills/\">Stop Undervaluing Community Engagement Skills! – Communities Die Without Them</a> by Richard Mulligan of FeverBee.</li>\n<li><a href=\"https://idratherbewriting.com/files/doc-navigation-wtd/design-principles-for-doc-navigation/\">Building navigation for your documentation site: 5 best practices in design</a> by Tom Johnson at I’d Rather Be Writing.</li>\n<li><a href=\"https://tri.be/blog/designing-navigation-for-content-heavy-sites/\">Designing Navigation for Content-Heavy Sites</a> by Kyle at Modern Tribe. (He eats hot dogs.)</li>\n<li><a href=\"https://abbycovert.com/writing/information-architecture-for-navigation/\">Information Architecture for Navigation</a> by sensemaker Abby Covert.</li>\n</ul>\n<p>I may come back and expand upon these, or I may follow up in later posts. There are no rules! This is my first “Reads!”</p>",{headings:1198,localImagePaths:1199,remoteImagePaths:1200,frontmatter:1201,imagePaths:1205},[],[],[],{title:1181,description:1182,authors:1202,date:1203,excerpt:1188,tags:1204},[166],["Date","2024-10-06T00:00:00.000Z"],[1190,1126,959,1191],[],"blog/stop-writing-start-helping",{id:1206,data:1208,body:1217,filePath:1218,assetImports:1219,digest:1239,rendered:1240},{title:1209,editUrl:23,head:1210,template:42,sidebar:1211,pagefind:23,draft:14,authors:1213,date:1214,excerpt:1215,tags:1216,featured:23},"Stop writing docs. Start helping!",[],{hidden:14,attrs:1212},{},[166],["Date","2023-10-05T00:00:00.000Z"],"Good docs can be the difference between a happy, successful user of your project and ... a happy, successful user of *someone else's* project. But documentation is often a task left to people who don't feel comfortable writing it. This talk presented at ViteConf 2023 presents a new way to think about \"writing good docs\" and some action items that will immediately improve any existing documentation... without doing any writing at all!",[9,959],"*(approximate transcript below, in \"speaker notes\" formatting rather than properly written, with some slides sprinkled in and [resources and references](#references-and-resources) at the end)*\n\nI'm going to ask a question and we'll get back to the answer a little later.\n\n\"Are your docs... good?\"\n\nWhether your current docs are...\n- a README\n- a few markdown files\n- a Discord server\n- a CHANGELOG\n- the code itself\n- an entire website\n- ... or nothing at all!\n\n... they can *always* get better!\n\nNot what you wanted to hear, right? This actually sounds pretty overwhelming... OR... is it a COMFORTING fact that \"docs are never done\"... so don't expect them to be! You'll never get there! You CAN'T get there.\n\n**You don't have to WORRY about getting there.**\n\n![ A version of the Drake/woman two square meme with two blue jays, one disliking the statement Docs Are Never Done with the second jay looking intrigued at the same sentence.]( ../../../assets/docsneverdone.png)\n\nWith docs, you CANNOT, you must not, let \"the perfect\" be the enemy of:\n- the good.\n- the good *enough*.\n- the #NWTWWHB. (Not worse than what we had before)\n\nMy name is Sarah, and I’m the docs lead at Astro.\n\nI hope in just a few minutes' time, you'll see how achievable \"better\" docs are, even without:\n\n- ... a technical writer\n- ... a team of volunteers\n- ... writing experience\n- ... a lot of time\n\nWhether you're:\n\n- ... crafting your very first README\n- ... adding the changeset for your next PR\n- ... preparing a guide for using a new feature\n- ... starting to think about redesigning your entire documentation site (hint: Starlight!)\n \n  \nI'm going to make your docs better, I'm going to make YOU a better, more confident docs writer, without doing much WRITING at all!\n\n![A small sparrow standing on a bridge railing amid seeds with an upturned, confused head position.]( ../../../assets/whyhavedocs.png)\n\nWhy do projects have documentation? Why do *you* have docs, if you do, for your project?\n\nYou might have said, \"to document an API\" or \"to show how to use a feature\" or \"explain what the project is.\"\n\nI would argue, the sole purpose of documentation, the only reason it exists, is to be helpful.\n\n- **internal docs:** help with cross-team collaboration and onboarding\n- **external docs:** help people understand, evaluate and use your project\n- **open source docs:** help people contribute to your project\n\n![Three blue jays standing in a row, each labelled as a different kind of docs: internal, external, open source]( ../../../assets/typesofdocs.png)\n\nDocumentation even helps **you** as you're building, making design decisions, learning, and leaving yourself notes.\n\nDocumentation is... a source of truth, docs is support, docs is record-keeping, docs is even marketing, promotion and community building ... \n\n![A small structure covered in grafitti with crows on top listing all the things docs is from the previous sentence.]( ../../../assets/docsis.png)\n\n... but ultimately docs **exist** to *help*.\n\nRemember when I asked at the beginning, \"Are your docs 'good'?\" How did that make you feel? Was that an easy question to answer?\n\nWhat if I ask instead, \"Are your docs *helpful*\"?\n\nFor many people, I think that second question feels different.\n\n![Two blue jays, one looking drab and disgruntled under the word good. The second blue jay has wings outstretched as if showing off under the word helpful]( ../../../assets/goodhelpful.png)\n\nChanging the question you ask will immediately put you on the path to \"better\" docs... more helpful docs!\n\nNotice that this ALSO changed the task of making docs from primarily a *writing* task to a *helping* task! \n\nAnd, YOU ARE the foremost expert on your project, so you are the BEST person to help! \n\n## \"Are your docs helpful?\" \n\n![\"\"]( ../../../assets/areyourdocshelpful.png)\n\nSo how do we answer this question?\n\nWe begin to answer it by first understanding that it's really a collection of questions, that start with the phrase:\n\nIs this helping someone...\n- get started with my project\n- figure out what my project is or does?\n- evaluate whether it's right for their needs? (so you get the *right* users in the first place!)\n- accomplish their OWN goals using MY project (e.g. add authentication to password protect some pages)\n- troubleshoot something in their project that's not working as expected\n- use my project to the fullest\n- avoid common pitfalls\n- keep up with the latest changes in my project, so they can successfully update *their* project\n\nEvaluating whether your docs are\n- HELPFUL\n- helpful TO SOMEONE\n- helpful to someone FOR SOMETHING\n\n... will get you further, faster, than any other single docs intervention.\n\n![\"\"]( ../../../assets/docsmustbehelpfulto.png)\n\n![\"\"]( ../../../assets/tosomeoneforsomething.png)\n\nYour docs can only be helpful **to someone** and that someone... \n\nHelpful TO SomeONE WHO IS:\n\n- Human\n- (With needs/wants/desires/hopes/dreams)\n- In a particular mood\n\n\nWHO HAS:\n\n- Context\n- Goals/purpose\n- Motivations, expectations\n\n\nWITH A CERTAIN EXPERIENCE LEVEL WITH:\n\n- Code\n- The industry\n- Your project\n\n\nWITH VARYING\n\n- Language proficiencies\n- Bad experiences (\"burned before\")\n- Pre- or (mis) conceptions\n\n\nAND ONLY LIMITED\n\n- Attention\n- Patience\n- Time \n- Energy\n- Resources (internet speed/cap, hardware)\n\nThey also need to help someone **do something**:\n\n- Learn\n- Conceptualize\n- Evaluate\n- Achieve\n- Build\n- Fix\n- Test\n- Upgrade\n- Improve\n- Experiment\n- Convince (themselves, someone else)\n- Solve a business problem or technical challlenge\n\nBut, docs should ultimately be helpful at getting people OUT of docs, and back into (using) your project.\n\n![An eagle flying away over water]( ../../../assets/outofdocs.png)\n\n\nNow, let's look at some characteristics of **helpful documentation**:\n\n## CLEAR AND CORRECT\n\n> If your docs are wrong, they are not helpful.\n\nIf docs are factually wrong, if they're misleading, if they're outdated, if they're technically correct but so confusing you'd never know it... they are not correct. They are WRONG. \n\nYou might even have some existing documentation that . . . isn’t really helping anyone do anything! Instead, it's more words on the screen making it harder to see the helpful content!\n\n Action Items:\n\n- Read every statement in your docs for ACCURACY\n- Or, if you're starting fresh, ONLY WRITE TRUE STATEMENTS\n- Go through each part of your docs and identify WHO this helps, and WHAT it helps them do\n- Less is more: both in content AND in style!\n- Use clear, simple language: No one ever complained, \"Gee, these docs are just [too easy to read](https://vimeo.com/238673931#t=2045s)!\"\n\n![Screenshot of Ashley Bischoff giving a talk called 1Up Your Writing with Plain Language at Fronteers Conference 2017 and a slide that reads Because no one has ever complained that somethign was too easy to read.]( ../../../assets/tooeasytoread.png)\n\nIf you're not sure whether something in your docs is entirely clear and correct, and you can't immediately see how to make it better... REMOVE IT: \n\n> *\"No documentation means I go look somewhere else for information. Incorrect documentation means I waste my time.\"* - Mason Egger\n\nIncorrect docs reduce credibility. They can make people frustrated enough to stop using your project and choose another.\n\nIf your users can't be successful, then they do NOT use your project; they DON'T spread word of mouth (at least, not the good kind), they don't create items themselves that showcase your project. And they don't contribute back and improve your project.\n\n![Two ducks swimming, one with a cursing emoji face over its head representing incorrect docs. The second is a duckling looking up sweetly representing the friendlier reaction when you have incomplete docs, as if asking \"Could you add...?\"]( ../../../assets/incorrectincomplete.png)\n\n\nIf it's not clear, and correct... delete it! I am giving you permission! It wasn't helping you anyway! It was frustrating people trying to use your project and potentially generating ill will and bad vibes!\n\nIf you're worried you might have deleted something important, it's fine. It's the internet! Someone will tell you.\n\n![An XKCD cartoon where someone is on the computer, saying they can't come to bed yet because someone is wrong on the internet]( ../../../assets/wrongoninternet.png)\n\nCHECK IN: Congratulations! You've made your docs better and you haven't written a single thing!\n\nWe're going to take things one step further and make your docs even more helpful:\n\n## Navigable and Discoverable\n\n\n- Can people move around your documentation and find what they need?\n\n- Are things where people expect to look? If they first look in the wrong spot, can they easily GET to the right spot?\n\nThese concepts relate to Information Architecture, and you can get into things like \"signposts\", \"escape hatches/off ramps\". These are all the structural things we add to our documentation to help people quickly and easily situate themselves and move around.\n\nWhen someone lands in your your docs, can they get where they need to go before they lose hope? And remember that a lot of people will enter your documentation via a web search, and not necessarily \"[on page one](https://everypageispageone.com/).\" So *every* page you have needs to pull their own weight. This is *not* just a task for a landing page.\n\nThe good news though, if there's only one page, your reader can't be on the wrong page.\n\n![A book cover titled Every Page is Page One next to the thinking, pointing at brain meme]( ../../../assets/pageone.png)\n\nI'm serious! If you don't know how to structure your content, there is nothing wrong with one huge README to start! Even if your readers have to look around, at least they'll know they're on the right page!\n\nIf the only reason docs exist is to be HELPFUL, to SOMEONE, trying to DO SOMETHING, then the first step in organizing your content is thinking about how to get your readers to the material that actually helps them accomplish the task they came for. e.g.:\n\n- If they are coming to quickly look up a reference value, like a property name or config option, make sure they don't get stuck in an onboarding tutorial!\n- If they want to learn about what needs your project solves so they can decide whether to use it, don't make them get stuck in implementation details before they even know what it is or does!\n\nHere's where a framework like [Diataxis](https://diataxis.fr) can be helpful: by identifying parts of your documentation by **content type** and **reader goal**, you can logically group sections of your docs and start to provide a helpful structure.\n\nBut the key thing is, if someone is not reading your docs like a book, top-to-bottom, first-page to last-page, do you have a plan for how will they discover and navigate to the clear, correct information they need?\n\nAction item:\n\n- go to literally any random point in your documentation, and imagine you are a reader who is not in the right place to get the info you need for a particular goal. Think about how your docs could direct them there, quickly and accurately.\n- Is this solved by a TOC? a search widget? a \"How to read these docs\" page? an internal link?\n- If you have multiple pages or files, do the titles accurately represent the content? Does your content live under the title you'd expect?\n\nSo, at this point, I've now basically said: Don't lie (and, delete any lies), and don't hide stuff (if you have to, throw everything on a single page. Good news, CTRL+F works for everyone!).\n\nThis is, I think, STILL an achievable bar for docs that help your readers without any new writing!\n\nIf every statement in your docs is true, and people can find, read and understand what they mean... Congratulations! You have Minimum Viable Docs! (*whispers If you have to, you can stop now*)\n\n![A sparrow on a wooden boardwalk with the title Minimum Viable Docs - Clear and Correct (no lies), Discoverable and Navigable (no hiding)]( ../../../assets/mvd.png)\n\nBut, of *course*, there *are* characteristics of well-written docs, and there are also some pretty common anti-patterns.\n\nThere's no shortage of talks on \"how to write good documenation\" that go into specifics, and I DO recommend you check out some great ones if you want to get better at writing! But that can get overwhelming and we already know that WRITING is secondary to HELPING.\n\n![A collage of images of various resource; talks, books, podcasts that are linked from ths post.]( ../../../assets/resources.png)\n\n- It might feel like there's a scary Docs Police waiting to criticize you and that there are a lot of potential failure pitfalls.\n- Instead of thinking of these as things to worry about getting wrong, think of them as things that you DON'T have to worry about; things NOT TO DO because they are NOT YOUR JOB as a helper. \n- These things \"thou shalt not do\" actually REMOVE pressure and responsibility, and are guard rails to keep you focused on a productive path towards helping.\n\n\n![A screenshot of a pulll request suggested edit made by Sarah. The original was a very long, excited description about installing Bun, and the suggested change for docs is simply: Use the following command to install Bun, with the added note Booo... Sarah is boring!]( ../../../assets/boo.png)\n\nSo, I absolutely love this social media post, because it perfectly demonstrates everything we've been talking about here.\n\nIt’s CLEAR, and CORRECT. If you’re looking for the command to install Bun, these are the words you will search for! It introduces exactly what’s coming next, and it’s not hidden in a bunch of other words.\n\nThis edit is NOT me saying, \"BAD AUTHOR, BAD DOCS!\"\n\nThis edit is me freeing the pull request submitter from the responsibility to:\n\n- write something clever\n- motivate the reader\n- get all the punctuation correct in longer, multi-clause sentences\n- have 10 times as many words to proofread and spellcheck\n\nMy edit reminds you to focus on \"helping\" instead of \"writing.\"\n\nSimilarly, many other \"Docs Don'ts\" are actually \"don't worry abouts!\"\n\nIf less is more, then here are some things you can remove or stop doing that reduce clutter and confusion in your docs. \n\n![\"\"]( ../../../assets/we.png)\n\n1. Don't use \"we\", because you're not sitting there with your potentially frustrated reader\n    - This frees you from the extra work of checking that all your we/us/our/let's all agree. You know what's super easy to check? You and your.\n    - Using \"you\" also naturally puts the emphasis on your reader, and what they are doing. It guides you to thinking about helping THEM. (What might THEIR set up look like? instead of writing \"our\" which can trick you into thinking about your OWN context or situation that your reader might not share.)\n    - Often, these instructions work without any \"you\" at all, and become even clearer.\n\n![\"\"]( ../../../assets/should.png)\n\n2. Don't use \"should\" - Should implies uncertainty, and your readers are looking to YOU for what to do. If your reader really MUST do something, just say that.\n    - Again, sounds like a rule we just made up! But I guarantee you that we are freeing you from feedback from a confused reader!\n    - \"You should create a new folder for your blog posts.\" Do I... have to do this? What happens if I don't, and how bad is that? What else could I do?\n    - Not only do your sentences get clearer, but your reader stays laser-focused on the task at hand without any doubt. -> Create a new folder for your blog posts.\n    - I am giving you permission to avoid writing, and just tell someone directly what to do! Even when more things are possible, if you WANT them to do this to have a successful outcome, just say it that way. THIS FREES YOU from the responsibility of describing every possible path when you, the expert in your own project, already have a recommendation and know the happy path. You can help. Don't write. Just help.\n\nACTION ITEMS:\n\n- Don't stress out about writing rules, but embrace them as telling you things that aren't your responsibility!\n- Pick one or two (I suggest \"we\" and \"should\"), or just read through your docs looking for things that aren't your responsibility, and remove them!\n\nIn conclusion, think of yourself as a HELPER. Someone who just happens to be helping in writing.\n- helpers don't need to entertain or write beautiful stories\n- they need to make CLEAR, CORRECT information available. Ideally in such a way that readers can DISCOVER, and NAVIGATE it. (CTRL+F is your friend!)\n\nAnd The best help is CONTEXTUAL: it is FOR someone who is trying to DO something specific.\n- this person may also not be in the greatest state to RECIEVE help, but they are in your docs because they need it.\n- don't overwhelm. Less is always more.\n- You can probably improve your docs RIGHT NOW by *deleting*, not writing more!\n    - delete words like \"should\"; delete outdated or unmaintained docs, even if you can't yet replace them; delete entire pages if you are afraid people won't find them, and put everything on one page if you need to!\n\n![A shiny black and purple grackle amid the words Don't write, help: clear & correct; discoverable; navigable; contextual; for someone; to do something; less is more]( ../../../assets/dontwritehelp.png)\n\nYou can have great docs even if you aren't a great writer. Because in many cases, maybe even most of the time, the less you write, the more you help.\n\n<!-- Everything in docs must be true, but, not everything that is true belongs in docs... in part because not every true statement is *helpful*.\n\nIncomplete documentation is not a crime, it's an invitation. Invite your readers to help you help them, and tell you what's missing. It is not your responsibility to \n\n If you can't imagine a situation in which someone might need this information to accomplish a specific task, then why is it there? -->\n\n## References and Resources\n\n- [Diataxis](https://diataxis.fr)\n- [Talk - Mason Egger: Write Docs Devs Love: Ten Tips To Level Up Your Tech Writing](https://www.youtube.com/watch?v=9WobKoE9OPI)\n- [Talk - Ashley Bischoff: “1Up Your Writing with Plain Language” at Fronteers Conference 2017](https://vimeo.com/238673931#t=2045s)\n- [Book - Docs for Developers](https://docsfordevelopers.com/)\n- [Book - Write Useful Books](https://writeusefulbooks.com/)\n- [Book - Every Page is Page One](https://xmlpress.net/publications/eppo/)\n- [Audio - Making Documentation Developers Love](https://www.youtube.com/watch?v=YW4IfoJM30g)","src/content/docs/blog/stop-writing-start-helping.md",[1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238],"../../../assets/docsneverdone.png","../../../assets/whyhavedocs.png","../../../assets/typesofdocs.png","../../../assets/docsis.png","../../../assets/goodhelpful.png","../../../assets/areyourdocshelpful.png","../../../assets/docsmustbehelpfulto.png","../../../assets/tosomeoneforsomething.png","../../../assets/outofdocs.png","../../../assets/tooeasytoread.png","../../../assets/incorrectincomplete.png","../../../assets/wrongoninternet.png","../../../assets/pageone.png","../../../assets/mvd.png","../../../assets/resources.png","../../../assets/boo.png","../../../assets/we.png","../../../assets/should.png","../../../assets/dontwritehelp.png","c866d43cd7445a80",{html:1241,metadata:1242},"<p><em>(approximate transcript below, in “speaker notes” formatting rather than properly written, with some slides sprinkled in and <a href=\"#references-and-resources\">resources and references</a> at the end)</em></p>\n<p>I’m going to ask a question and we’ll get back to the answer a little later.</p>\n<p>“Are your docs… good?”</p>\n<p>Whether your current docs are…</p>\n<ul>\n<li>a README</li>\n<li>a few markdown files</li>\n<li>a Discord server</li>\n<li>a CHANGELOG</li>\n<li>the code itself</li>\n<li>an entire website</li>\n<li>… or nothing at all!</li>\n</ul>\n<p>… they can <em>always</em> get better!</p>\n<p>Not what you wanted to hear, right? This actually sounds pretty overwhelming… OR… is it a COMFORTING fact that “docs are never done”… so don’t expect them to be! You’ll never get there! You CAN’T get there.</p>\n<p><strong>You don’t have to WORRY about getting there.</strong></p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/docsneverdone.png&#x22;,&#x22;alt&#x22;:&#x22; A version of the Drake/woman two square meme with two blue jays, one disliking the statement Docs Are Never Done with the second jay looking intrigued at the same sentence.&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>With docs, you CANNOT, you must not, let “the perfect” be the enemy of:</p>\n<ul>\n<li>the good.</li>\n<li>the good <em>enough</em>.</li>\n<li>the #NWTWWHB. (Not worse than what we had before)</li>\n</ul>\n<p>My name is Sarah, and I’m the docs lead at Astro.</p>\n<p>I hope in just a few minutes’ time, you’ll see how achievable “better” docs are, even without:</p>\n<ul>\n<li>… a technical writer</li>\n<li>… a team of volunteers</li>\n<li>… writing experience</li>\n<li>… a lot of time</li>\n</ul>\n<p>Whether you’re:</p>\n<ul>\n<li>\n<p>… crafting your very first README</p>\n</li>\n<li>\n<p>… adding the changeset for your next PR</p>\n</li>\n<li>\n<p>… preparing a guide for using a new feature</p>\n</li>\n<li>\n<p>… starting to think about redesigning your entire documentation site (hint: Starlight!)</p>\n</li>\n</ul>\n<p>I’m going to make your docs better, I’m going to make YOU a better, more confident docs writer, without doing much WRITING at all!</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/whyhavedocs.png&#x22;,&#x22;alt&#x22;:&#x22;A small sparrow standing on a bridge railing amid seeds with an upturned, confused head position.&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>Why do projects have documentation? Why do <em>you</em> have docs, if you do, for your project?</p>\n<p>You might have said, “to document an API” or “to show how to use a feature” or “explain what the project is.”</p>\n<p>I would argue, the sole purpose of documentation, the only reason it exists, is to be helpful.</p>\n<ul>\n<li><strong>internal docs:</strong> help with cross-team collaboration and onboarding</li>\n<li><strong>external docs:</strong> help people understand, evaluate and use your project</li>\n<li><strong>open source docs:</strong> help people contribute to your project</li>\n</ul>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/typesofdocs.png&#x22;,&#x22;alt&#x22;:&#x22;Three blue jays standing in a row, each labelled as a different kind of docs: internal, external, open source&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>Documentation even helps <strong>you</strong> as you’re building, making design decisions, learning, and leaving yourself notes.</p>\n<p>Documentation is… a source of truth, docs is support, docs is record-keeping, docs is even marketing, promotion and community building …</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/docsis.png&#x22;,&#x22;alt&#x22;:&#x22;A small structure covered in grafitti with crows on top listing all the things docs is from the previous sentence.&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>… but ultimately docs <strong>exist</strong> to <em>help</em>.</p>\n<p>Remember when I asked at the beginning, “Are your docs ‘good’?” How did that make you feel? Was that an easy question to answer?</p>\n<p>What if I ask instead, “Are your docs <em>helpful</em>”?</p>\n<p>For many people, I think that second question feels different.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/goodhelpful.png&#x22;,&#x22;alt&#x22;:&#x22;Two blue jays, one looking drab and disgruntled under the word good. The second blue jay has wings outstretched as if showing off under the word helpful&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>Changing the question you ask will immediately put you on the path to “better” docs… more helpful docs!</p>\n<p>Notice that this ALSO changed the task of making docs from primarily a <em>writing</em> task to a <em>helping</em> task!</p>\n<p>And, YOU ARE the foremost expert on your project, so you are the BEST person to help!</p>\n<h2 id=\"are-your-docs-helpful\">”Are your docs helpful?”</h2>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/areyourdocshelpful.png&#x22;,&#x22;alt&#x22;:&#x22;\\&#x22;\\&#x22;&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>So how do we answer this question?</p>\n<p>We begin to answer it by first understanding that it’s really a collection of questions, that start with the phrase:</p>\n<p>Is this helping someone…</p>\n<ul>\n<li>get started with my project</li>\n<li>figure out what my project is or does?</li>\n<li>evaluate whether it’s right for their needs? (so you get the <em>right</em> users in the first place!)</li>\n<li>accomplish their OWN goals using MY project (e.g. add authentication to password protect some pages)</li>\n<li>troubleshoot something in their project that’s not working as expected</li>\n<li>use my project to the fullest</li>\n<li>avoid common pitfalls</li>\n<li>keep up with the latest changes in my project, so they can successfully update <em>their</em> project</li>\n</ul>\n<p>Evaluating whether your docs are</p>\n<ul>\n<li>HELPFUL</li>\n<li>helpful TO SOMEONE</li>\n<li>helpful to someone FOR SOMETHING</li>\n</ul>\n<p>… will get you further, faster, than any other single docs intervention.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/docsmustbehelpfulto.png&#x22;,&#x22;alt&#x22;:&#x22;\\&#x22;\\&#x22;&#x22;,&#x22;index&#x22;:0}\"></p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/tosomeoneforsomething.png&#x22;,&#x22;alt&#x22;:&#x22;\\&#x22;\\&#x22;&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>Your docs can only be helpful <strong>to someone</strong> and that someone…</p>\n<p>Helpful TO SomeONE WHO IS:</p>\n<ul>\n<li>Human</li>\n<li>(With needs/wants/desires/hopes/dreams)</li>\n<li>In a particular mood</li>\n</ul>\n<p>WHO HAS:</p>\n<ul>\n<li>Context</li>\n<li>Goals/purpose</li>\n<li>Motivations, expectations</li>\n</ul>\n<p>WITH A CERTAIN EXPERIENCE LEVEL WITH:</p>\n<ul>\n<li>Code</li>\n<li>The industry</li>\n<li>Your project</li>\n</ul>\n<p>WITH VARYING</p>\n<ul>\n<li>Language proficiencies</li>\n<li>Bad experiences (“burned before”)</li>\n<li>Pre- or (mis) conceptions</li>\n</ul>\n<p>AND ONLY LIMITED</p>\n<ul>\n<li>Attention</li>\n<li>Patience</li>\n<li>Time</li>\n<li>Energy</li>\n<li>Resources (internet speed/cap, hardware)</li>\n</ul>\n<p>They also need to help someone <strong>do something</strong>:</p>\n<ul>\n<li>Learn</li>\n<li>Conceptualize</li>\n<li>Evaluate</li>\n<li>Achieve</li>\n<li>Build</li>\n<li>Fix</li>\n<li>Test</li>\n<li>Upgrade</li>\n<li>Improve</li>\n<li>Experiment</li>\n<li>Convince (themselves, someone else)</li>\n<li>Solve a business problem or technical challlenge</li>\n</ul>\n<p>But, docs should ultimately be helpful at getting people OUT of docs, and back into (using) your project.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/outofdocs.png&#x22;,&#x22;alt&#x22;:&#x22;An eagle flying away over water&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>Now, let’s look at some characteristics of <strong>helpful documentation</strong>:</p>\n<h2 id=\"clear-and-correct\">CLEAR AND CORRECT</h2>\n<blockquote>\n<p>If your docs are wrong, they are not helpful.</p>\n</blockquote>\n<p>If docs are factually wrong, if they’re misleading, if they’re outdated, if they’re technically correct but so confusing you’d never know it… they are not correct. They are WRONG.</p>\n<p>You might even have some existing documentation that … isn’t really helping anyone do anything! Instead, it’s more words on the screen making it harder to see the helpful content!</p>\n<p>Action Items:</p>\n<ul>\n<li>Read every statement in your docs for ACCURACY</li>\n<li>Or, if you’re starting fresh, ONLY WRITE TRUE STATEMENTS</li>\n<li>Go through each part of your docs and identify WHO this helps, and WHAT it helps them do</li>\n<li>Less is more: both in content AND in style!</li>\n<li>Use clear, simple language: No one ever complained, “Gee, these docs are just <a href=\"https://vimeo.com/238673931#t=2045s\">too easy to read</a>!”</li>\n</ul>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/tooeasytoread.png&#x22;,&#x22;alt&#x22;:&#x22;Screenshot of Ashley Bischoff giving a talk called 1Up Your Writing with Plain Language at Fronteers Conference 2017 and a slide that reads Because no one has ever complained that somethign was too easy to read.&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>If you’re not sure whether something in your docs is entirely clear and correct, and you can’t immediately see how to make it better… REMOVE IT:</p>\n<blockquote>\n<p><em>“No documentation means I go look somewhere else for information. Incorrect documentation means I waste my time.”</em> - Mason Egger</p>\n</blockquote>\n<p>Incorrect docs reduce credibility. They can make people frustrated enough to stop using your project and choose another.</p>\n<p>If your users can’t be successful, then they do NOT use your project; they DON’T spread word of mouth (at least, not the good kind), they don’t create items themselves that showcase your project. And they don’t contribute back and improve your project.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/incorrectincomplete.png&#x22;,&#x22;alt&#x22;:&#x22;Two ducks swimming, one with a cursing emoji face over its head representing incorrect docs. The second is a duckling looking up sweetly representing the friendlier reaction when you have incomplete docs, as if asking \\&#x22;Could you add...?\\&#x22;&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>If it’s not clear, and correct… delete it! I am giving you permission! It wasn’t helping you anyway! It was frustrating people trying to use your project and potentially generating ill will and bad vibes!</p>\n<p>If you’re worried you might have deleted something important, it’s fine. It’s the internet! Someone will tell you.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/wrongoninternet.png&#x22;,&#x22;alt&#x22;:&#x22;An XKCD cartoon where someone is on the computer, saying they can&#x27;t come to bed yet because someone is wrong on the internet&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>CHECK IN: Congratulations! You’ve made your docs better and you haven’t written a single thing!</p>\n<p>We’re going to take things one step further and make your docs even more helpful:</p>\n<h2 id=\"navigable-and-discoverable\">Navigable and Discoverable</h2>\n<ul>\n<li>\n<p>Can people move around your documentation and find what they need?</p>\n</li>\n<li>\n<p>Are things where people expect to look? If they first look in the wrong spot, can they easily GET to the right spot?</p>\n</li>\n</ul>\n<p>These concepts relate to Information Architecture, and you can get into things like “signposts”, “escape hatches/off ramps”. These are all the structural things we add to our documentation to help people quickly and easily situate themselves and move around.</p>\n<p>When someone lands in your your docs, can they get where they need to go before they lose hope? And remember that a lot of people will enter your documentation via a web search, and not necessarily “<a href=\"https://everypageispageone.com/\">on page one</a>.” So <em>every</em> page you have needs to pull their own weight. This is <em>not</em> just a task for a landing page.</p>\n<p>The good news though, if there’s only one page, your reader can’t be on the wrong page.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/pageone.png&#x22;,&#x22;alt&#x22;:&#x22;A book cover titled Every Page is Page One next to the thinking, pointing at brain meme&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>I’m serious! If you don’t know how to structure your content, there is nothing wrong with one huge README to start! Even if your readers have to look around, at least they’ll know they’re on the right page!</p>\n<p>If the only reason docs exist is to be HELPFUL, to SOMEONE, trying to DO SOMETHING, then the first step in organizing your content is thinking about how to get your readers to the material that actually helps them accomplish the task they came for. e.g.:</p>\n<ul>\n<li>If they are coming to quickly look up a reference value, like a property name or config option, make sure they don’t get stuck in an onboarding tutorial!</li>\n<li>If they want to learn about what needs your project solves so they can decide whether to use it, don’t make them get stuck in implementation details before they even know what it is or does!</li>\n</ul>\n<p>Here’s where a framework like <a href=\"https://diataxis.fr\">Diataxis</a> can be helpful: by identifying parts of your documentation by <strong>content type</strong> and <strong>reader goal</strong>, you can logically group sections of your docs and start to provide a helpful structure.</p>\n<p>But the key thing is, if someone is not reading your docs like a book, top-to-bottom, first-page to last-page, do you have a plan for how will they discover and navigate to the clear, correct information they need?</p>\n<p>Action item:</p>\n<ul>\n<li>go to literally any random point in your documentation, and imagine you are a reader who is not in the right place to get the info you need for a particular goal. Think about how your docs could direct them there, quickly and accurately.</li>\n<li>Is this solved by a TOC? a search widget? a “How to read these docs” page? an internal link?</li>\n<li>If you have multiple pages or files, do the titles accurately represent the content? Does your content live under the title you’d expect?</li>\n</ul>\n<p>So, at this point, I’ve now basically said: Don’t lie (and, delete any lies), and don’t hide stuff (if you have to, throw everything on a single page. Good news, CTRL+F works for everyone!).</p>\n<p>This is, I think, STILL an achievable bar for docs that help your readers without any new writing!</p>\n<p>If every statement in your docs is true, and people can find, read and understand what they mean… Congratulations! You have Minimum Viable Docs! (<em>whispers If you have to, you can stop now</em>)</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/mvd.png&#x22;,&#x22;alt&#x22;:&#x22;A sparrow on a wooden boardwalk with the title Minimum Viable Docs - Clear and Correct (no lies), Discoverable and Navigable (no hiding)&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>But, of <em>course</em>, there <em>are</em> characteristics of well-written docs, and there are also some pretty common anti-patterns.</p>\n<p>There’s no shortage of talks on “how to write good documenation” that go into specifics, and I DO recommend you check out some great ones if you want to get better at writing! But that can get overwhelming and we already know that WRITING is secondary to HELPING.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/resources.png&#x22;,&#x22;alt&#x22;:&#x22;A collage of images of various resource; talks, books, podcasts that are linked from ths post.&#x22;,&#x22;index&#x22;:0}\"></p>\n<ul>\n<li>It might feel like there’s a scary Docs Police waiting to criticize you and that there are a lot of potential failure pitfalls.</li>\n<li>Instead of thinking of these as things to worry about getting wrong, think of them as things that you DON’T have to worry about; things NOT TO DO because they are NOT YOUR JOB as a helper.</li>\n<li>These things “thou shalt not do” actually REMOVE pressure and responsibility, and are guard rails to keep you focused on a productive path towards helping.</li>\n</ul>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/boo.png&#x22;,&#x22;alt&#x22;:&#x22;A screenshot of a pulll request suggested edit made by Sarah. The original was a very long, excited description about installing Bun, and the suggested change for docs is simply: Use the following command to install Bun, with the added note Booo... Sarah is boring!&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>So, I absolutely love this social media post, because it perfectly demonstrates everything we’ve been talking about here.</p>\n<p>It’s CLEAR, and CORRECT. If you’re looking for the command to install Bun, these are the words you will search for! It introduces exactly what’s coming next, and it’s not hidden in a bunch of other words.</p>\n<p>This edit is NOT me saying, “BAD AUTHOR, BAD DOCS!”</p>\n<p>This edit is me freeing the pull request submitter from the responsibility to:</p>\n<ul>\n<li>write something clever</li>\n<li>motivate the reader</li>\n<li>get all the punctuation correct in longer, multi-clause sentences</li>\n<li>have 10 times as many words to proofread and spellcheck</li>\n</ul>\n<p>My edit reminds you to focus on “helping” instead of “writing.”</p>\n<p>Similarly, many other “Docs Don’ts” are actually “don’t worry abouts!”</p>\n<p>If less is more, then here are some things you can remove or stop doing that reduce clutter and confusion in your docs.</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/we.png&#x22;,&#x22;alt&#x22;:&#x22;\\&#x22;\\&#x22;&#x22;,&#x22;index&#x22;:0}\"></p>\n<ol>\n<li>Don’t use “we”, because you’re not sitting there with your potentially frustrated reader\n<ul>\n<li>This frees you from the extra work of checking that all your we/us/our/let’s all agree. You know what’s super easy to check? You and your.</li>\n<li>Using “you” also naturally puts the emphasis on your reader, and what they are doing. It guides you to thinking about helping THEM. (What might THEIR set up look like? instead of writing “our” which can trick you into thinking about your OWN context or situation that your reader might not share.)</li>\n<li>Often, these instructions work without any “you” at all, and become even clearer.</li>\n</ul>\n</li>\n</ol>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/should.png&#x22;,&#x22;alt&#x22;:&#x22;\\&#x22;\\&#x22;&#x22;,&#x22;index&#x22;:0}\"></p>\n<ol start=\"2\">\n<li>Don’t use “should” - Should implies uncertainty, and your readers are looking to YOU for what to do. If your reader really MUST do something, just say that.\n<ul>\n<li>Again, sounds like a rule we just made up! But I guarantee you that we are freeing you from feedback from a confused reader!</li>\n<li>“You should create a new folder for your blog posts.” Do I… have to do this? What happens if I don’t, and how bad is that? What else could I do?</li>\n<li>Not only do your sentences get clearer, but your reader stays laser-focused on the task at hand without any doubt. -> Create a new folder for your blog posts.</li>\n<li>I am giving you permission to avoid writing, and just tell someone directly what to do! Even when more things are possible, if you WANT them to do this to have a successful outcome, just say it that way. THIS FREES YOU from the responsibility of describing every possible path when you, the expert in your own project, already have a recommendation and know the happy path. You can help. Don’t write. Just help.</li>\n</ul>\n</li>\n</ol>\n<p>ACTION ITEMS:</p>\n<ul>\n<li>Don’t stress out about writing rules, but embrace them as telling you things that aren’t your responsibility!</li>\n<li>Pick one or two (I suggest “we” and “should”), or just read through your docs looking for things that aren’t your responsibility, and remove them!</li>\n</ul>\n<p>In conclusion, think of yourself as a HELPER. Someone who just happens to be helping in writing.</p>\n<ul>\n<li>helpers don’t need to entertain or write beautiful stories</li>\n<li>they need to make CLEAR, CORRECT information available. Ideally in such a way that readers can DISCOVER, and NAVIGATE it. (CTRL+F is your friend!)</li>\n</ul>\n<p>And The best help is CONTEXTUAL: it is FOR someone who is trying to DO something specific.</p>\n<ul>\n<li>this person may also not be in the greatest state to RECIEVE help, but they are in your docs because they need it.</li>\n<li>don’t overwhelm. Less is always more.</li>\n<li>You can probably improve your docs RIGHT NOW by <em>deleting</em>, not writing more!\n<ul>\n<li>delete words like “should”; delete outdated or unmaintained docs, even if you can’t yet replace them; delete entire pages if you are afraid people won’t find them, and put everything on one page if you need to!</li>\n</ul>\n</li>\n</ul>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../assets/dontwritehelp.png&#x22;,&#x22;alt&#x22;:&#x22;A shiny black and purple grackle amid the words Don&#x27;t write, help: clear &#x26; correct; discoverable; navigable; contextual; for someone; to do something; less is more&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>You can have great docs even if you aren’t a great writer. Because in many cases, maybe even most of the time, the less you write, the more you help.</p>\n<!-- Everything in docs must be true, but, not everything that is true belongs in docs... in part because not every true statement is *helpful*.\n\nIncomplete documentation is not a crime, it's an invitation. Invite your readers to help you help them, and tell you what's missing. It is not your responsibility to \n\n If you can't imagine a situation in which someone might need this information to accomplish a specific task, then why is it there? -->\n<h2 id=\"references-and-resources\">References and Resources</h2>\n<ul>\n<li><a href=\"https://diataxis.fr\">Diataxis</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=9WobKoE9OPI\">Talk - Mason Egger: Write Docs Devs Love: Ten Tips To Level Up Your Tech Writing</a></li>\n<li><a href=\"https://vimeo.com/238673931#t=2045s\">Talk - Ashley Bischoff: “1Up Your Writing with Plain Language” at Fronteers Conference 2017</a></li>\n<li><a href=\"https://docsfordevelopers.com/\">Book - Docs for Developers</a></li>\n<li><a href=\"https://writeusefulbooks.com/\">Book - Write Useful Books</a></li>\n<li><a href=\"https://xmlpress.net/publications/eppo/\">Book - Every Page is Page One</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=YW4IfoJM30g\">Audio - Making Documentation Developers Love</a></li>\n</ul>",{headings:1243,localImagePaths:1256,remoteImagePaths:1257,frontmatter:1258,imagePaths:1265},[1244,1247,1250,1253],{depth:75,slug:1245,text:1246},"are-your-docs-helpful","”Are your docs helpful?”",{depth:75,slug:1248,text:1249},"clear-and-correct","CLEAR AND CORRECT",{depth:75,slug:1251,text:1252},"navigable-and-discoverable","Navigable and Discoverable",{depth:75,slug:1254,text:1255},"references-and-resources","References and Resources",[1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238],[],{title:1209,authors:1259,date:1260,pubDate:1261,excerpt:1215,img:1262,alt:1263,tags:1264,featured:23},[166],["Date","2023-10-05T00:00:00.000Z"],"2023-10-05","../../../assets/helpfuldocs.png","A blue jay sitting on a branch with head tilted asking the question Are your docs helpful?",[9,959],[1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238],"blog/thinking-in-astro-from-react",{id:1266,data:1268,body:1279,filePath:1280,digest:1281,rendered:1282},{title:1269,description:1270,editUrl:23,head:1271,template:42,sidebar:1272,pagefind:23,draft:14,authors:1274,date:1275,excerpt:1276,tags:1277},"Thinking in Astro, Coming from React","Differences in an Astro MPA project from a React Router app.",[],{hidden:14,attrs:1273},{},[166],["Date","2021-11-12T00:00:00.000Z"],"Astro sites allow you to *use* React, but they *aren't* React, themselves. Understanding the differences between React and Astro can help you get started more quickly, so here are some thoughts on how to think like an Astro-naut!",[1278,928],"react","When I first built basic websites, back in nineteen-ninety... *mumble mumble*, I figured out enough HTML to make a static page, then link to another page. My first site for the small tutoring company I worked for didn't even contain css, let alone JavaScript. Just html elements. (But, it did have a table!)\n\n## Back in my day...\n\nHTML elements, content organized on separate pages, links between them... this was my early introduction to \"web development,\" such as it was back then. By the time I owned my own tutoring company in 2002, I built a website that included font families, sizes and colours! (Still tables, though.) By 2005, I had discovered places online to look for tiny scripts (`<script language=\"javascript\">`) that you could include in your HTML for some basic interactivity. But, the underlying structure was *the page.* You have an index page, where the browser assumes you want to \"start\" unless told otherwise, but other content, for the most part, lives on other pages.\n\n## Where we went...\n\nFast forward to learning React in 2020, and (my) introduction to thinking about *rendering an app to a page*.\n\nSites built with React, yes, *do* have that entry HTML index page. But, it doesn't really feel like a first-class citizen. Nothing is really \"on\" (or, maybe nothing really \"lives in?\") that page in the same way it used to \"back in my day.\" A React's index.html page is a container -- a single \"root\" element -- for all the good stuff. It's not even just a single `<div id=\"root\"></div>`, it's generally a single `<App />` rendered in that single `<div>`. That's a lot of \"single\" thinking! It's easy to picture your React site or app as \"a single thing\" where you can point to the top of the tree.\n\n## Where we're going...\n\nI find the easiest way to start \"thinking in Astro\" is to go back to the days of the page. Because in Astro, yes you (must) have an index.html page, but you can *also* have an about.html page and contact.html page... and these exist *independently of each other*, as equals. You can (and probably will!) make use of an Astro layout so that they share some common features. But, you are building *each page* separately, and adding those common elements *to it*, not starting from a common, shared entry point.\n\nSo if you're just starting out with Astro and wondering, \"Where does my \"app\" go?\"... it... doesn't? \n\n## How it changes...\n\nMaybe you have a React Router project (like the first version of my sBird app!) and use \"routes\" to render different content to the screen under different url paths. Well, get ready to create yourself some individual page files! (I'll be detailing how I did this for my bird app in an upcoming series of blog posts.)\n\nMaybe you have a Gatsby blog, and like me, you diligently went through the tutorial on dynamically creating new pages using Gatsby’s Filesystem Route API so that each .md or .mdx blog post has its own page. Well, get ready to... do nothing! Astro respects the almighty page, and *assumes* that you've got pages, and posts and that you'd like them each to have their own page. As long as you put your files in the expected source folders, That. Just. Happens.\n\n## Back... to the future!\n\nThere's obviously so much more to say about Astro, how it works, and the tasks it's trying to help you achieve. And, perhaps most importantly, **where and how React fits in and co-exists with Astro** (...because it totally does! My site is actually *all* kinds of React components all over the place!)\n\nAnd, I promise, Astro is not \"stuck in the past\"! But, as you experiment with and learn more about Astro, especially if you're coming from React, and trying to fit your existing React into your Astro site, I find that it can help to try \"thinking in Astro\"... and party like it's 1999!\n\n![The musician Prince on stage singing, Tonight I'm gonna party like it's 1999.](https://media.publit.io/file/RJD/200.gif)","src/content/docs/blog/thinking-in-astro-from-react.md","9fd5a4aacce3f0d2",{html:1283,metadata:1284},"<p>When I first built basic websites, back in nineteen-ninety… <em>mumble mumble</em>, I figured out enough HTML to make a static page, then link to another page. My first site for the small tutoring company I worked for didn’t even contain css, let alone JavaScript. Just html elements. (But, it did have a table!)</p>\n<h2 id=\"back-in-my-day\">Back in my day…</h2>\n<p>HTML elements, content organized on separate pages, links between them… this was my early introduction to “web development,” such as it was back then. By the time I owned my own tutoring company in 2002, I built a website that included font families, sizes and colours! (Still tables, though.) By 2005, I had discovered places online to look for tiny scripts (<code dir=\"auto\">&#x3C;script language=\"javascript\"></code>) that you could include in your HTML for some basic interactivity. But, the underlying structure was <em>the page.</em> You have an index page, where the browser assumes you want to “start” unless told otherwise, but other content, for the most part, lives on other pages.</p>\n<h2 id=\"where-we-went\">Where we went…</h2>\n<p>Fast forward to learning React in 2020, and (my) introduction to thinking about <em>rendering an app to a page</em>.</p>\n<p>Sites built with React, yes, <em>do</em> have that entry HTML index page. But, it doesn’t really feel like a first-class citizen. Nothing is really “on” (or, maybe nothing really “lives in?”) that page in the same way it used to “back in my day.” A React’s index.html page is a container — a single “root” element — for all the good stuff. It’s not even just a single <code dir=\"auto\">&#x3C;div id=\"root\">&#x3C;/div></code>, it’s generally a single <code dir=\"auto\">&#x3C;App /></code> rendered in that single <code dir=\"auto\">&#x3C;div></code>. That’s a lot of “single” thinking! It’s easy to picture your React site or app as “a single thing” where you can point to the top of the tree.</p>\n<h2 id=\"where-were-going\">Where we’re going…</h2>\n<p>I find the easiest way to start “thinking in Astro” is to go back to the days of the page. Because in Astro, yes you (must) have an index.html page, but you can <em>also</em> have an about.html page and contact.html page… and these exist <em>independently of each other</em>, as equals. You can (and probably will!) make use of an Astro layout so that they share some common features. But, you are building <em>each page</em> separately, and adding those common elements <em>to it</em>, not starting from a common, shared entry point.</p>\n<p>So if you’re just starting out with Astro and wondering, “Where does my “app” go?”… it… doesn’t?</p>\n<h2 id=\"how-it-changes\">How it changes…</h2>\n<p>Maybe you have a React Router project (like the first version of my sBird app!) and use “routes” to render different content to the screen under different url paths. Well, get ready to create yourself some individual page files! (I’ll be detailing how I did this for my bird app in an upcoming series of blog posts.)</p>\n<p>Maybe you have a Gatsby blog, and like me, you diligently went through the tutorial on dynamically creating new pages using Gatsby’s Filesystem Route API so that each .md or .mdx blog post has its own page. Well, get ready to… do nothing! Astro respects the almighty page, and <em>assumes</em> that you’ve got pages, and posts and that you’d like them each to have their own page. As long as you put your files in the expected source folders, That. Just. Happens.</p>\n<h2 id=\"back-to-the-future\">Back… to the future!</h2>\n<p>There’s obviously so much more to say about Astro, how it works, and the tasks it’s trying to help you achieve. And, perhaps most importantly, <strong>where and how React fits in and co-exists with Astro</strong> (…because it totally does! My site is actually <em>all</em> kinds of React components all over the place!)</p>\n<p>And, I promise, Astro is not “stuck in the past”! But, as you experiment with and learn more about Astro, especially if you’re coming from React, and trying to fit your existing React into your Astro site, I find that it can help to try “thinking in Astro”… and party like it’s 1999!</p>\n<p><img src=\"https://media.publit.io/file/RJD/200.gif\" alt=\"The musician Prince on stage singing, Tonight I&#x27;m gonna party like it&#x27;s 1999.\"></p>",{headings:1285,localImagePaths:1301,remoteImagePaths:1302,frontmatter:1303,imagePaths:1307},[1286,1289,1292,1295,1298],{depth:75,slug:1287,text:1288},"back-in-my-day","Back in my day…",{depth:75,slug:1290,text:1291},"where-we-went","Where we went…",{depth:75,slug:1293,text:1294},"where-were-going","Where we’re going…",{depth:75,slug:1296,text:1297},"how-it-changes","How it changes…",{depth:75,slug:1299,text:1300},"back-to-the-future","Back… to the future!",[],[],{title:1269,description:1270,authors:1304,date:1305,excerpt:1276,tags:1306},[166],["Date","2021-11-12T00:00:00.000Z"],[1278,928],[],"blog/xelement-bird-1",{id:1308,data:1310,body:1321,filePath:1322,digest:1323,rendered:1324},{title:1311,description:1312,editUrl:23,head:1313,template:42,sidebar:1314,pagefind:23,draft:14,authors:1316,date:1317,excerpt:1318,tags:1319},"React to XElement in Astro: sBird to xBird","Rewriting a React Router app as an Astro XElement app.",[],{hidden:14,attrs:1315},{},[166],["Date","2022-03-07T00:00:00.000Z"],"aFuzzyBear and I have started a community, build-in-public project where we take my React-in-Astro sBird app and recreate all the same functionality using XElement, natively in Astro! The first video is now up on YouTube.",[1057,928,1320],"xelement","Last weekend, aFuzzyBear and I spent 3hrs on live-chat in the Astro Discord while other community members joined in. I've started editing the footage and will be uploading it in smaller pieces.\n\nThis first video is an introduction to our project, to Astro and to XElement.\n\nSee the demo and our up-to-the-moment progress at https://xelement-bird.netlify.app\n\n## About XElement\nXElement is an Astro-native solution to providing interactive web elements without the need for script tags or any other JavaScript framework components (React, Preact, Vue, Svelte, Solid...)\n\nnpm package - https://www.npmjs.com/package/astro-xelement\n\nXElement Docs - https://xelement-docs.vercel.app\n\n## This video:\n\n0:00 - Introduction to Astro and this project\n\n1:17 - What is \"sBird\"?\n\n2:59 - Building in React vs Astro vs React-in-Astro\n\n6:06 - Partial Hydration in Astro\n\n12:14 - How XElement accomplishes interactivity natively in Astro\n\n15:00 - XElement component demonstration\n\nSince I can't fit the entire transcript in the YouTube video description, here it is all on this page.\n\n<iframe src=\"https://www.youtube.com/embed/0-aH18YH2SQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nTranscript:\n\naFuzzyBear  0:00  \nWhat we're going to do is just have a quick overview of the bird app that is written in React, then we will introduce XElement. And then we're going to get working on \"xbird\", which is the reverse engineering of XElement and sBird. \n\nRight. So what do we know about Astro? Astro is a static site generator that focuses on basically sending zero JavaScript, well as little JavaScript to the client as possible. And it does some fantastic things in terms of its progressive hydration when it comes to using other frameworks like React, Svelte, Vue, Preact, Solid, etc. \n\nAnd XElement is Astro's first and only web component framework that at the present moment allows you to create dynamic HTML elements from a very simple and intuitive interface. It sends pure JavaScript down the wire to the client, there is no renders, no partial hydrations... nothing required like that. It is as vanilla, as close to vanilla, as you can get. So that is the introduction. And let's get demonstrating sBird. Sarah, do you want to talk about sBird?\n\nSarah Rainsberger  1:23  \nSure. So sBird is my little bird app. It uses the eBird API and eBird is a global bird organization where birders around the world submit reports of the birds they've observed, a big citizen science project. \n\nThis bit of the app we're looking at right now is specifically to see what rare or unusual birds people have recorded in a particular area. So that's what this shows here. So I make an API call, and I can see sightings that are pending review. So like that Sandhill Crane, these are sightings people have reported, but I have them classified as pending: they haven't been reviewed yet. So if you're waiting, you're like, \"Did they look at my bird report yet...?\" This is where I go to check. \n\nAnd then, there are birds recently confirmed. So I know when my sighting was actually confirmed. And then so down below, I have other sections that Fuzzy is showing that are doing other things. This is a section if I want to see which birds have been reported at all in the last 30 days. These are things that I use when I'm out reporting birds. I want to know whether something is rare. I want to know, “Has anybody else seen an Icelandic gull lately in this area? Is that really what this could be?” And other things like that. \n\nSo these are the kinds of things that I built for myself using React because that's what I learned. And then when I learned Astro, I could put this entire React app in an Astro page on my website. And now we're going to try to see if we can get rid of the React and build the same functionality in XElement. That's today's task.\n\nUnknown Speaker  3:25  \nYep. And I just want to ask you a couple of questions. How did you find using Astro and a third party component like React? Like, what was your experience when you came to building this React part that we are just about to explore the code for?\n\nSarah Rainsberger  3:44  \nWell, so one change I had to make was because I built the thing originally in React before I even knew about Astro. And so of course, that was a single page application. So you're looking at routes, things like that. \n\nSo the first thing was when I came to Astro, I sort of had to make some decisions about whether I am going to try to replicate an SPA inside of an Astro page, which I sort of did at first. And then I was like, \"Well, let's take advantage of Astros routing!\" And so then I broke my app apart, and I had different React pieces on different Astro pages. \n\nBut then I would get into issues when I wanted to share some state like a default location. I wanted someone to be able to set a default location. And then Astro had the quite major upgrade to version 0.21. So I had to rebuild the site, anyway, because there were a bunch of things at this point that sort of needed some fine tuning to upgrade. And so at that point, I just actually threw them back all onto one page. And, what you're seeing now is actually a subset of what the original app was. \n\nSo that was one issue. And I think we hear that a lot in the Discord, trying to wrangle state and context, things that you're used to when you basically start from an App.js file. But in Astro because everything is split onto different pages naturally, we look to the Astro SPA plugin or XElement, other things like that. The second thing is, if you look in my code, on the sBird page, for the version we have here, this (`client:load`) works. But there have been some issues with React where I have had to use client:only=\"react\" to get the app to run properly.\n\naFuzzyBear  6:06  \nSo I just want to quickly say, for those who are not familiar with the client load directives that Astro uses, this is how Astro gets around their partial hydration. I'm just going to bring up their page, their documentation is getting a lot better, I have to say. Thank you, Sarah. And just for those who don't know, Sarah, is working as well on the docs for Astro at the present moment. \n\nSo yeah, the concept of partial hydration and Astro is that it is not your single page application like Sarah has just mentioned, where everything is within a JSX file. And life inside a JSX file is life inside JavaScript. But Astro and these new concepts like partial hydration, which describes Islands Architecture, takes your interactive elements, and they become one off components. \n\nBecause approximately 80% of your application is static, that being the static HTML content that React is constantly rendering, along with the additional JavaScript functionality. So Astro takes the concept of islands and really drives home this ethos, where within this picture, (here is a brilliant picture that kind of emphasizes it), you have several small applications, whereas in the past, this used to be one giant application. And React would render all these small parts together. Whereas with Astro, it only renders out the static parts that do not ever really change. There's no real need for dynamism over the top of it. And the stuff that doesn't need any dynamic components or interactions for instance, a sidebar, or a header array at the top, a little table of contents on the right hand side… So these things here are small applications that are embedded on to the actual page itself. And Astro then goes one step further to make only some components interactive on the client. \n\nThere are several ways of doing this, like Sarah mentioned there is the client:load directive, which is currently what's implemented on sBird at the moment, which loads the components when the DOM has finished and the JavaScript is ready, then starts to hydrate all the static parts of your page and starts to make them interactive. And client:idle is pretty much the same thing. But this happens when the thread is free, the main thread comes free. client:visible is a very cool and extremely powerful hydration selector where it uses the intersection observer to see whether or not the element itself has become visible onto the viewport and if it has, then it starts interaction. Likewise, we've the client:media hydration query. So, on certain viewports, on certain view sizes, you could have certain islands that only hydrate that interactivity on a given media query. \n\nAnd then, if all else fails, and you're struggling with getting your UI framework to work, it's normally because a lot of the UI frameworks have hooks that require access to the DOM straight away. For instance, the React plugin ecosystem is built around the React model. This assumes that when React loads, that the document is there, etc. So there is no pre concept of islands or multi page architecture when it comes to a lot of the React ecosystem. But Astro provides you with ways to get around those gotchas and client:only is a very good one, if you're struggling with your application, regardless of what framework, try the client only. \n\nAnd, and a typical question we normally get in support and the community channels, especially for those new to Astro, is that you can't hydrate Astro components. And this page, and I highly recommend checking out the partial hydration page on Astro docs, explains it well, because Astro components are HTML components. And, really, there is no server runtime. And they're straight up HTML. So a string of HTML and, and like it says here, in order for you to make it interactive, you're going to need to convert it into a framework of your choice. And what if there is a case where, like me, you don't like these frameworks? \n\nNow, this is where I'm going to introduce XElement. Because, personally speaking, when I came into Astroland, I was happy with the fact that I didn't need to write a lot in my cage, in a JSX file. So the less Reacty I could get my site to be, the happier as a developer I am. And that's just my own preference. And that's what inspired XElement to come into fruition. \n\nMe and an excellent maintainer and contributor to the community, Jonathan Neal, we got together and we basically came up with a way that we could incorporate XElement into Astro to allow you to have that client side runtime, and interactivity and deliver it without the use of having a UI framework as a middleman in this case. These frameworks really do empower Astro to create fantastic, fantastic experiences, however, for those who just don't like using UI frameworks, there is something else out there now. \n\nBefore this, in Astro if you wanted to use any sort of client side interactivity, you would use a good old fashioned script tag, right where it would be placed, unbundled using Astro's magic. And attached to the page, right. There's no need for any client side hydration with us because it literally just fires once the script is ready. And this inspired XElement to take this one step further, because as you can see here, let me see if I can zoom in. Just to show this point. \n\nThere's one heading element along with the button. Now this button we wanted action on it, we just want it when it clicks, we just want to change the text from “not clicked” to “clicked.” Right. Now, the standard approach would be to just go script document query selector. Second add event listener on to it to specify the event listener, and then retargeting the h1, we get the enter text, and then we're just changing that to click. It's a bit verbose, especially as a developer when you're constantly having to do this for more than one component. And this is where XElement comes in. \n\nSo we've actually got a page set for us right now to demonstrate some XElement components. Thank you, Sarah. And now this page is all components using JavaScript on the client side, created within Astro without using any UI framework. And let's break them down. This one here, as you probably noticed, is a type and text as third party script that we're calling, which basically just takes a string and just prints it out on the screen as if it's being typed out right in front of us. Quite cool, really is. And we've also got everyone's counter, where we just increase the count, and decrease the count.\n\nAnd we've got a flashy little animation going on here. We've got a couple of animations. And we had a SURPRISE, and I ruined it, we'll try it again. And so this text is designed to move to the right after a certain period. And this is all using the web animation API. The web animation API is actually incorporated into XElement and makes this whole thing a lot easier for you. And if we do click this text, we get confetti. And it only fires once, if you notice, right. So you can control event behavior and propagation and the likes to give you that fine-grained control over your element's interactions. Start Stop control animation. At the bottom, we have a request animation and frame clock, which is just basically updating the time, every millisecond. So every 60 frames per second, this thing is going off quite nicely. \n\nAnd none of these are interfering with each other. So for instance, if one was to break, the rest of this page will still keep working. Next up, we're going to be asking for data from an API call. And here, we're just doing a suspenseful action where we just have a loading, you can see that there is a little loading state there, right? Let's just do this. Again. Quick data loading brought back the data. Now this is a client side fetch request that is going off. And then we're just populating the DOM once we get the data. And all of this all works at native JavaScript speed. And we have Astro to thank for that right now. That is the introduction. Let's get cracking. Do you think Sarah?\n\nSarah Rainsberger  18:26  \nYeah, let's do it.","src/content/docs/blog/xelement-bird-1.md","bb8777b7d5e95c2d",{html:1325,metadata:1326},"<p>Last weekend, aFuzzyBear and I spent 3hrs on live-chat in the Astro Discord while other community members joined in. I’ve started editing the footage and will be uploading it in smaller pieces.</p>\n<p>This first video is an introduction to our project, to Astro and to XElement.</p>\n<p>See the demo and our up-to-the-moment progress at <a href=\"https://xelement-bird.netlify.app\">https://xelement-bird.netlify.app</a></p>\n<h2 id=\"about-xelement\">About XElement</h2>\n<p>XElement is an Astro-native solution to providing interactive web elements without the need for script tags or any other JavaScript framework components (React, Preact, Vue, Svelte, Solid…)</p>\n<p>npm package - <a href=\"https://www.npmjs.com/package/astro-xelement\">https://www.npmjs.com/package/astro-xelement</a></p>\n<p>XElement Docs - <a href=\"https://xelement-docs.vercel.app\">https://xelement-docs.vercel.app</a></p>\n<h2 id=\"this-video\">This video:</h2>\n<p>0:00 - Introduction to Astro and this project</p>\n<p>1:17 - What is “sBird”?</p>\n<p>2:59 - Building in React vs Astro vs React-in-Astro</p>\n<p>6:06 - Partial Hydration in Astro</p>\n<p>12:14 - How XElement accomplishes interactivity natively in Astro</p>\n<p>15:00 - XElement component demonstration</p>\n<p>Since I can’t fit the entire transcript in the YouTube video description, here it is all on this page.</p>\n<iframe src=\"https://www.youtube.com/embed/0-aH18YH2SQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>Transcript:</p>\n<p>aFuzzyBear  0:00<br>\nWhat we’re going to do is just have a quick overview of the bird app that is written in React, then we will introduce XElement. And then we’re going to get working on “xbird”, which is the reverse engineering of XElement and sBird.</p>\n<p>Right. So what do we know about Astro? Astro is a static site generator that focuses on basically sending zero JavaScript, well as little JavaScript to the client as possible. And it does some fantastic things in terms of its progressive hydration when it comes to using other frameworks like React, Svelte, Vue, Preact, Solid, etc.</p>\n<p>And XElement is Astro’s first and only web component framework that at the present moment allows you to create dynamic HTML elements from a very simple and intuitive interface. It sends pure JavaScript down the wire to the client, there is no renders, no partial hydrations… nothing required like that. It is as vanilla, as close to vanilla, as you can get. So that is the introduction. And let’s get demonstrating sBird. Sarah, do you want to talk about sBird?</p>\n<p>Sarah Rainsberger  1:23<br>\nSure. So sBird is my little bird app. It uses the eBird API and eBird is a global bird organization where birders around the world submit reports of the birds they’ve observed, a big citizen science project.</p>\n<p>This bit of the app we’re looking at right now is specifically to see what rare or unusual birds people have recorded in a particular area. So that’s what this shows here. So I make an API call, and I can see sightings that are pending review. So like that Sandhill Crane, these are sightings people have reported, but I have them classified as pending: they haven’t been reviewed yet. So if you’re waiting, you’re like, “Did they look at my bird report yet…?” This is where I go to check.</p>\n<p>And then, there are birds recently confirmed. So I know when my sighting was actually confirmed. And then so down below, I have other sections that Fuzzy is showing that are doing other things. This is a section if I want to see which birds have been reported at all in the last 30 days. These are things that I use when I’m out reporting birds. I want to know whether something is rare. I want to know, “Has anybody else seen an Icelandic gull lately in this area? Is that really what this could be?” And other things like that.</p>\n<p>So these are the kinds of things that I built for myself using React because that’s what I learned. And then when I learned Astro, I could put this entire React app in an Astro page on my website. And now we’re going to try to see if we can get rid of the React and build the same functionality in XElement. That’s today’s task.</p>\n<p>Unknown Speaker  3:25<br>\nYep. And I just want to ask you a couple of questions. How did you find using Astro and a third party component like React? Like, what was your experience when you came to building this React part that we are just about to explore the code for?</p>\n<p>Sarah Rainsberger  3:44<br>\nWell, so one change I had to make was because I built the thing originally in React before I even knew about Astro. And so of course, that was a single page application. So you’re looking at routes, things like that.</p>\n<p>So the first thing was when I came to Astro, I sort of had to make some decisions about whether I am going to try to replicate an SPA inside of an Astro page, which I sort of did at first. And then I was like, “Well, let’s take advantage of Astros routing!” And so then I broke my app apart, and I had different React pieces on different Astro pages.</p>\n<p>But then I would get into issues when I wanted to share some state like a default location. I wanted someone to be able to set a default location. And then Astro had the quite major upgrade to version 0.21. So I had to rebuild the site, anyway, because there were a bunch of things at this point that sort of needed some fine tuning to upgrade. And so at that point, I just actually threw them back all onto one page. And, what you’re seeing now is actually a subset of what the original app was.</p>\n<p>So that was one issue. And I think we hear that a lot in the Discord, trying to wrangle state and context, things that you’re used to when you basically start from an App.js file. But in Astro because everything is split onto different pages naturally, we look to the Astro SPA plugin or XElement, other things like that. The second thing is, if you look in my code, on the sBird page, for the version we have here, this (<code dir=\"auto\">client:load</code>) works. But there have been some issues with React where I have had to use client:only=“react” to get the app to run properly.</p>\n<p>aFuzzyBear  6:06<br>\nSo I just want to quickly say, for those who are not familiar with the client load directives that Astro uses, this is how Astro gets around their partial hydration. I’m just going to bring up their page, their documentation is getting a lot better, I have to say. Thank you, Sarah. And just for those who don’t know, Sarah, is working as well on the docs for Astro at the present moment.</p>\n<p>So yeah, the concept of partial hydration and Astro is that it is not your single page application like Sarah has just mentioned, where everything is within a JSX file. And life inside a JSX file is life inside JavaScript. But Astro and these new concepts like partial hydration, which describes Islands Architecture, takes your interactive elements, and they become one off components.</p>\n<p>Because approximately 80% of your application is static, that being the static HTML content that React is constantly rendering, along with the additional JavaScript functionality. So Astro takes the concept of islands and really drives home this ethos, where within this picture, (here is a brilliant picture that kind of emphasizes it), you have several small applications, whereas in the past, this used to be one giant application. And React would render all these small parts together. Whereas with Astro, it only renders out the static parts that do not ever really change. There’s no real need for dynamism over the top of it. And the stuff that doesn’t need any dynamic components or interactions for instance, a sidebar, or a header array at the top, a little table of contents on the right hand side… So these things here are small applications that are embedded on to the actual page itself. And Astro then goes one step further to make only some components interactive on the client.</p>\n<p>There are several ways of doing this, like Sarah mentioned there is the client:load directive, which is currently what’s implemented on sBird at the moment, which loads the components when the DOM has finished and the JavaScript is ready, then starts to hydrate all the static parts of your page and starts to make them interactive. And client:idle is pretty much the same thing. But this happens when the thread is free, the main thread comes free. client:visible is a very cool and extremely powerful hydration selector where it uses the intersection observer to see whether or not the element itself has become visible onto the viewport and if it has, then it starts interaction. Likewise, we’ve the client:media hydration query. So, on certain viewports, on certain view sizes, you could have certain islands that only hydrate that interactivity on a given media query.</p>\n<p>And then, if all else fails, and you’re struggling with getting your UI framework to work, it’s normally because a lot of the UI frameworks have hooks that require access to the DOM straight away. For instance, the React plugin ecosystem is built around the React model. This assumes that when React loads, that the document is there, etc. So there is no pre concept of islands or multi page architecture when it comes to a lot of the React ecosystem. But Astro provides you with ways to get around those gotchas and client:only is a very good one, if you’re struggling with your application, regardless of what framework, try the client only.</p>\n<p>And, and a typical question we normally get in support and the community channels, especially for those new to Astro, is that you can’t hydrate Astro components. And this page, and I highly recommend checking out the partial hydration page on Astro docs, explains it well, because Astro components are HTML components. And, really, there is no server runtime. And they’re straight up HTML. So a string of HTML and, and like it says here, in order for you to make it interactive, you’re going to need to convert it into a framework of your choice. And what if there is a case where, like me, you don’t like these frameworks?</p>\n<p>Now, this is where I’m going to introduce XElement. Because, personally speaking, when I came into Astroland, I was happy with the fact that I didn’t need to write a lot in my cage, in a JSX file. So the less Reacty I could get my site to be, the happier as a developer I am. And that’s just my own preference. And that’s what inspired XElement to come into fruition.</p>\n<p>Me and an excellent maintainer and contributor to the community, Jonathan Neal, we got together and we basically came up with a way that we could incorporate XElement into Astro to allow you to have that client side runtime, and interactivity and deliver it without the use of having a UI framework as a middleman in this case. These frameworks really do empower Astro to create fantastic, fantastic experiences, however, for those who just don’t like using UI frameworks, there is something else out there now.</p>\n<p>Before this, in Astro if you wanted to use any sort of client side interactivity, you would use a good old fashioned script tag, right where it would be placed, unbundled using Astro’s magic. And attached to the page, right. There’s no need for any client side hydration with us because it literally just fires once the script is ready. And this inspired XElement to take this one step further, because as you can see here, let me see if I can zoom in. Just to show this point.</p>\n<p>There’s one heading element along with the button. Now this button we wanted action on it, we just want it when it clicks, we just want to change the text from “not clicked” to “clicked.” Right. Now, the standard approach would be to just go script document query selector. Second add event listener on to it to specify the event listener, and then retargeting the h1, we get the enter text, and then we’re just changing that to click. It’s a bit verbose, especially as a developer when you’re constantly having to do this for more than one component. And this is where XElement comes in.</p>\n<p>So we’ve actually got a page set for us right now to demonstrate some XElement components. Thank you, Sarah. And now this page is all components using JavaScript on the client side, created within Astro without using any UI framework. And let’s break them down. This one here, as you probably noticed, is a type and text as third party script that we’re calling, which basically just takes a string and just prints it out on the screen as if it’s being typed out right in front of us. Quite cool, really is. And we’ve also got everyone’s counter, where we just increase the count, and decrease the count.</p>\n<p>And we’ve got a flashy little animation going on here. We’ve got a couple of animations. And we had a SURPRISE, and I ruined it, we’ll try it again. And so this text is designed to move to the right after a certain period. And this is all using the web animation API. The web animation API is actually incorporated into XElement and makes this whole thing a lot easier for you. And if we do click this text, we get confetti. And it only fires once, if you notice, right. So you can control event behavior and propagation and the likes to give you that fine-grained control over your element’s interactions. Start Stop control animation. At the bottom, we have a request animation and frame clock, which is just basically updating the time, every millisecond. So every 60 frames per second, this thing is going off quite nicely.</p>\n<p>And none of these are interfering with each other. So for instance, if one was to break, the rest of this page will still keep working. Next up, we’re going to be asking for data from an API call. And here, we’re just doing a suspenseful action where we just have a loading, you can see that there is a little loading state there, right? Let’s just do this. Again. Quick data loading brought back the data. Now this is a client side fetch request that is going off. And then we’re just populating the DOM once we get the data. And all of this all works at native JavaScript speed. And we have Astro to thank for that right now. That is the introduction. Let’s get cracking. Do you think Sarah?</p>\n<p>Sarah Rainsberger  18:26<br>\nYeah, let’s do it.</p>",{headings:1327,localImagePaths:1334,remoteImagePaths:1335,frontmatter:1336,imagePaths:1340},[1328,1331],{depth:75,slug:1329,text:1330},"about-xelement","About XElement",{depth:75,slug:1332,text:1333},"this-video","This video:",[],[],{title:1311,description:1312,authors:1337,date:1338,excerpt:1318,tags:1339},[166],["Date","2022-03-07T00:00:00.000Z"],[1057,928,1320],[],"guides/contribute-to-open-source-via-edit-this-page",{id:1341,data:1343,body:1348,filePath:1349,digest:1350,deferredRender:23},{title:951,description:1344,editUrl:23,head:1345,template:42,sidebar:1346,pagefind:23,draft:14},"If there's an \"edit this page on GitHub\" link, then you're only a few clicks away from contributing to Open Source and helping out a project!",[],{hidden:14,attrs:1347},{},"With open source projects, not only can you *see* the code, you can help *edit and maintain* the code, too!\n\nHere's an example of how you can contribute to [Astro's documentation](https://docs.astro.build), right from your browser!\n\n## Prerequisites\n\nTo contribute to the Astro Docs, you must have a [GitHub](https://github.com) account.\n\n## Edit the current page\n\nOn every page of the Astro documentation, there is a pencil icon and a link to \"Edit page\".\n\nClick this link! Your browser will navigate to the Astro Docs source repository on GitHub, taking you directly to the file for the page you're viewing. \n\nTo make a contribution to this file, select the pencil icon to edit. If you are not logged in, you will be prompted to log in to GitHub. \n\n![GitHub page, wit the pencil icon for editing the page highlighted, and hover text: You must be logged in to make or propose changes.](https://lh3.googleusercontent.com/pw/AM-JKLWVjV1esyJ6ytzpgiCBX204uQoDfINTRCUqX1GN936Rd5MkPr4aZrkwuWORHWF9NggpJ4YIUu1ptidj2jjak2J8kW8Mj_k0tCuN79Vo0RY8jNPjviK26fKNoRmM-HsLmfz4INflxaGbuzh9e4j7YF_M_w=w2132-h1009-no?)\n\nIf you *are* logged in, the pencil icon will take you to edit this file in your fork of this project. \n\n(If this is your first time editing a project, a \"fork\" (cloned copy) of this project will automatically be created in your own GitHub account. Yay! You now own a copy of the Astro docs!)\n\n![GitHub page, wit the pencil icon for editing the page highlighted, and hover text:Edit this file in your fork of the project.](https://lh3.googleusercontent.com/pw/AM-JKLWipslaN8fxh8j2IdCnyfyJhiv_6zVd-EuvkNVyxrZR5lTJr5S5_jwUFKyB24qXVRIW2vtdCK_mAprpaIV4EIuDvUzqFGoceXqTwqDCtfDT7U6gSCm2PP6InF6x7wQScP_Eyx1-jwMtoYeP-PQkq-OyPQ=w2132-h1009-no?)\n\n\n## Propose Changes\n\nAfter clicking the pencil icon to edit that file, you will be greeted by a banner reminding you that you do not have permission to make changes *directly* to the file. Instead, you will make changes in your *own* copy of the document, then submit a pull request (a request to contribute) to the original project.\n\nIn edit mode, you can toggle between typing Markdown source code and previewing those changes on the page.\n\n![Editing a page in GitHub, with a banner highlighted that reads: You're making changes in a project that you don't have write access to. Submitting a change will write it to a new branch in your fork so you can send a pull request.](https://lh3.googleusercontent.com/pw/AM-JKLXJqnQSZ1S1A0N7DGLLMlmGH0hM0Et9cmzqMOLa8TsE_2YAdt2JL7FB-vV4KMFCmZ7-fhV0WT-q2N77YWo8TEYqS_yuGzX3BPPY-UOl94JGmisEbxoGyKC_eIHKElAkvuaSxCvHq5NTJbi1QG1O8XTFOA=w2132-h1223-no?)\n\nOnce you have made changes, use the \"Propose Changes\" button at the bottom of the page to submit your new version of the page to the Open Source project for consideration.\n\nBe sure to include a short but descriptive title of what you changed, and optionally, a longer description. This could be a more thorough explanation of what you changed, or why you believe the change was necessary or appropriate. \n\n![The Propose Changes text entry submission box, with space to enter a title and a description.](https://lh3.googleusercontent.com/pw/AM-JKLXWu82RfWuzpY1OYplqYyQTPpr3eFNJhs9JIunoRHsUBNtCXv6a87ZvVZk93zCRgvYgudH4SErQrqgzGYsoVR7JKhED2P1uR709clbLmM1J_4lVSTVoWt164V5HHkeKf-Xt_Z2FAOO2jL-w4FRN_1MlGQ=w1849-h805-no?)\n\nAfter \"proposing changes,\" you'll still have two more steps to go (and two more chances to back out!) in order to create a pull request. So there's absolutely no risk in going this far!\n\n## Create a pull request\n\nNext, you'll be taken to a page that performs a check to make sure that your changes are able to be merged, without conflict, into the open source repository. (Because many people contribute to open source projects at the same time, your proposal might conflict with someone else's work.)\n\nIt's at this point that you'll click the submit button to \"create a pull request\" (PR)... but this is only the button that takes you to *another* page where you'll have a chance to edit your PRs title and description before *actually* sending your proposed changes to the original repository. \n\nIt's totally safe to click here! You've still got one more chance to back out!\n\n![Message: Able to merge. These branches can be automatically merged. Followed by a submit button to Create Pull Request.](https://lh3.googleusercontent.com/pw/AM-JKLVNBeNY81MqF9gzK-_kfFX5we3Kk8SyMYHSujsi1wGyvAR0_pyHRZQrTXk4XppHA9jiwTupp8yMXyd6inn4TB3-wPltW7uXs12uGBtaZeuvcZX4m2eeyJ3jZNNhQF0qwGPDtP7EYpcBqF_mj_rZBQ327Q=w1747-h195-no?)\n\nThe next page you'll reach will again confirm that your changes can be merged without creating a conflict, and will allow you to adjust your title and description as necessary. (This screenshot shows a pull request to one of my own repositories this time, instead of the Astro docs.)\n\n![The Open a Pull Request page on GitHub. A more advanced editor for creating a more elaborate description, and then a final create pull request button at the bottom.](https://lh3.googleusercontent.com/pw/AM-JKLXinD_jpQl7ciFjpI2yN8E-lJPgpcTbPOu7O89Bm9CC85AL0cC9udngyowgur5QFzAJV0-UVibRylt8RGTP9EZKtxx6ZbnkagBZCObaKJ2-N-PLrNg6CVEQy4UnYXnW2OxhYd7cW-OmINk1RIGPO9KwtQ=w1747-h836-no?authuser=0)\n\n:::caution\n**When you click \"Create a pull request\" on this screen, now you *actually* create a pull request! This one counts!**\n:::\n\nHere, you can leave a comment in Markdown, and also preview your comment. So, if you'd like to add a more descriptive or elaborate description of your changes here using standard Markdown lists, formatting, code blocks... you can also upload images or gifs, such as before and after screenshots.\n\n:::tip[Allow edits by maintainers]\nPlease leave this checkbox (selected by default) checked!\n\nThis helps project maintainers accept your pull request even if it is not *perfect*. Otherwise, if the maintainer cannot accept your changes *exactly* as you've proposed them, they will need to ask you to make changes and resubmit, or will be forced to deny your proposed changes entirely.\n:::\n\nOnce you are satisfied with the content of your pull request, click the button to submit (for realz!) and you'll be taken to a confirmation screen that shows your \"open\" pull request, in the original repository.\n\n## Success!\n\n![A GitHub page for a completed pull request, showing its status as open, options for closing it or adding another comment, as well as a button to unsubscribe from further notifications about this request.](https://lh3.googleusercontent.com/pw/AM-JKLVm_4gUSrAdry7tFHPm2qiWnXNHS_x4LoYOLRRDnbXIYlg31Ia4uVOxynamMfysRFj1M9c8PI01AlrVi1vhmJmMaQ5-WpP2DG_zJnJ7yX_O0e_CBL1Ciydd42ojuO4nNOeF7k2qqsqu3x-Epzl2-J3JoA=w1806-h1229-no?authuser=0)\n\nCongratulations! Your contribution has left your hands! Your pull request joins all the other pull requests (the total number is shown in the upper left of the screen with) to that project. \n\n## Follow up activity\n\nYou can still edit your PR description, update the content of your proposed changes, add a follow up comment, or decide to close the pull request at any time by revisiting this page.\n\nYou can't \"delete\" a pull request, but you can \"close\" it to let the maintainers of the project know that you are withdrawing your proposed changes. The pull request continues to exist, (and can even be re-opened with the press of a button!) but closed PRs are typically hidden out of sight behind a default filter that only shows \"open\" (in progress) pull requests.\n\nAlso be aware that you will be automatically subscribed to receive notifications for any activity on this pull request. You can customize your notification preferences, but by default, you will receive a GitHub notification (based on your account's notification settings) when there is any activity on your request.\n\n## Continuing to Contribute\n\nYour GitHub profile will now contain local copies, that live in *your* own account, of the repositories to which you submitted changes. This means, you can easily revisit them at any time and contribute again and again!\n\n![A GitHub profile page showing the user's repositories. Under each local repository, it reads Forked from... the original project](https://lh3.googleusercontent.com/pw/AM-JKLVtcxnpUc5qai86ZKw32mIiHV6FpZMVqqUEtvsagHAXMskeohdGKB-QWJYfp42U-Mud9BBUJmuMTn9iIMq8vnw9SoAsL7VXUFgv4Kykf1DNIt9Rb_7A4dSizI1krJsn2rRXl-OfLAYN80fpZcleeRtqIw=w1828-h694-no?authuser=0)\n\nYou can continue to edit files on GitHub, or you can open these repositories however you prefer to work on them: locally on your machine, in an online development environment or code editor like Gitpod or StackBlitz, or by using the handy `.` (period key) shortcut while on GitHub to open a `github.dev` Codespace for a VS Code editing experience.\n\n### ⚠️ Avoid merge conflicts!\n\nDuring the course of submitting your pull request, GitHub checked *multiple times* to make sure your changes could be merged into the original repository without any conflicts. Remember, the open source project probably has several people contributing to it, and it is changing all the time! (Even if you only work on your local copy every now and then.)\n\nBefore you begin editing this fork again, you should always ***fetch upstream*** so that your project incorporates any new changes since the last time you contributed. This ensures that any new changes you propose are compatible with the most up-to-date, *current version* of the project.\n\n![The main page of a forked, local repository showing This branch is 11 commits behind as well as Contribute and Fetch upstream options](https://lh3.googleusercontent.com/pw/AM-JKLXlr6bZkeal-1mmFhUgME_5LEmxsCICrfEo5ppodxVJ5MqYNC3DbKeuwhkeIhG2UD_DnM_New6XkQLuFzK8EJf5IXS5w8QGPuczxRa7UXvAJX0C4Yt6UponzpNrKpE4rufZdGONlgbyI9Eeo3KUoeYHyg=w1534-h449-no?)\n\nNavigating into one of your repositories should show you if your forked copy of the project is *behind* (i.e. not caught up with changes to) the original. There will also be an option to \"fetch upstream\" which will add all the new changes, and project commit history of the original project to your own.\n\n**Always do fetch upstream first, before starting to make changes to your local copy!**\n\nThere is even a [handy GitHub app called \"Pull\"](https://github.com/apps/pull) that you can authorize to run automatically to perform this action at regular intervals. This avoids you going a long time without fetching and keeps you up generally up to date on any changes in the original project that could conflicting with what's in your local copy. You should still fetch manually right before each work session though, to catch any up-to-the-minute changes before you begin editing.\n\nAny changes you make here in your fork are *only* local changes, contained in *your* repository. So feel free to experiment! You don't have to send your changes back every time you make them... or, ever! You can work independently for as long as you want and make as many commits *to your own project* as you like. (Just remember to fetch upstream each time you begin again, to keep up-to-date with any upstream changes.)\n\nWhen you *do* have new changes commited to your local fork of the project that you want to contribute back via a new pull request, go back to your repository's main page. Instead of \"fetching upstream,\" this time you can \"Contribute\" back to the original project. (These options are next to each other on the page.)\n\n\"Contribute\" will start the process for a brand new pull request, first by checking for merge conflicts, and then by allowing you to provide a good title and description for your changes. Your pull request, once opened, is attached to the original project for review, and the cycle begins again!\n\n**Thank you for contributing to open source!**","src/content/docs/guides/contribute-to-open-source-via-edit-this-page.mdx","baf8c6b3943e386a","guides/create-new-astro-project-in-gitpod",{id:1351,data:1353,body:1359,filePath:1360,digest:1361,deferredRender:23},{title:1354,description:1355,editUrl:23,head:1356,template:42,sidebar:1357,pagefind:23,draft:14},"Create a new Astro project with Gitpod","A guide to starting a new Astro project using GitHub and Gitpod.",[],{hidden:14,attrs:1358},{},"Although you can open any of Astro's official starter templates in a few different cloud environments at [astro.new](https://astro.new), the best way to get started with a new Astro project in Gitpod is to start from an existing repository of your own.\n\nUse the instructions below every time you want to make a new Astro (or [Starlight](https://starlight.astro.build)) website!\n\n## Create a repository\n\n1. Create a new, blank repository on GitHub, GitLab or BitBucket. Do not add any files when creating this repo, such as a README or a `.gitignore`. You will need a blank repository with no existing content.\n\n## Open your repository in Gitpod\n\n2. Open that new repository in Gitpod using one of the following methods:\n    - Install [Gitpod's browser extension](https://www.gitpod.io/docs/browser-extension) or [Gitpod's browser bookmarklet](https://www.gitpod.io/docs/browser-bookmarklet) to add an \"Open in Gitpod\" button right on your GitHub/GitLab repository page.\n        \n    - Prefix your GitHub/GitLab repository's full URL with `gitpod.io/#` and enter that URL into a browser window, for example:\n    \n    ```html ins=\"gitpod.io/#\"\n    gitpod.io/#https://github.com/[username]/new-astro-project\n    ```\n\n## Run the Astro CLI wizard\n\n3. When your repository finishes opening in Gitpod's editor, launch the Astro CLI wizard in the terminal with the following command.This will guide you through setting up a new project. \n\n    ```bash\n    npm create astro@latest\n    ```\n\n    :::tip\n    To start a new project from an existing Astro theme or template, use [the template flag](https://docs.astro.build/en/install/auto/#starter-templates) as shown in Astro docs.\n    \n    For example, to open a new Starlight project, type:\n    \n    ```bash\n    npm create astro@latest -- --template starlight\n    ```\n    :::\n      \n4. Follow the instructions and when asked where to install the project, type `./` (Do not add a folder name. This will create your project at the root of your repository.)\n      \n5. The final set of instructions will tell you to how start the dev server with the command `npm run dev`. Your workspace is now ready for coding!\n\n## (Optional) Add a `.gitpod.yml` file\n\n6. Add a `.gitpod.yml` file to the root of your project to automatically run commands every time you re-open your Astro project. My file installs dependencies, starts the dev server and opens a preview of my site in another browser tab every time my project launches:\n\n      ```yaml title=\".gitpod.yml\"\n      tasks:\n        - init: npm install\n          command: npm run dev\n\n      ports:\n        - port: 4321\n          onOpen: open-browser\n      ```\n\n## Commit and publish your changes\n\n7. After working on your site, you can commit your changes to local version control, and eventually back to your source repository (or throw them away!) via the Source Control menu item in the left navigation. The first time you commit back to your online repository, you will need to type the following commands manually into the terminal.\n\n    ```bash\n    git remote add origin https://github.com/[username]/new-astro-project.git\n    git branch -M main\n    git push -u origin main\n    ```\n\n    Any subsequent commits can be done using the Source Control commit button, which will then become a \"publish\" button in order to sent your changes back to your online repository. Both steps are necessary to update your project at GitHub or GitLab.\n    \n    Any changes you make are saved to this \"Workspace\" which is a particular instance of your repository. This workspace will save its own state, even between starting/stopping the workspace, but will only push back to your online source code when you choose to commit and sync.\n\n## Edit your existing project\n\n8. To revisit your project and work on **this** exact version of your code, re-open the workspace from your Gitpod dashboard. To go back and start fresh from source again, re-open your repository from one of the two earlier methods.\n    \n    If you don't like what you did in a particular workspace, then just delete (or ignore) the workspace! Unused workspaces will automatically delete after 14 days of inactivity via [Gitpod's Garbage Collection](https://www.gitpod.io/docs/life-of-workspace/#garbage-collection). You can have multiple workspaces editing the same source project at the same time. They are completely independent of each other.","src/content/docs/guides/create-new-astro-project-in-gitpod.mdx","02c39b57137d9c5f","photography/art-advent-calendar",{id:1362,data:1364,body:1370,filePath:1371,digest:1372,deferredRender:23},{title:1365,description:1366,editUrl:23,head:1367,template:42,sidebar:1368,pagefind:23,draft:14},"#ArtAdventCalendar","Social media posts labelled #ArtAdventCalendar",[],{hidden:14,attrs:1369},{},"import { BlueskyPost } from 'astro-embed';\n\nThese posts can also be found with a [custom Bluesky search](https://bsky.app/search?q=from%3Asarah11918.rainsberger.ca+%23ArtAdventCalendar).\n\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldywfpaq6s2z\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldw7nn7sc227\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldtsqnfjzs2c\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldresalmbc2n\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldoxalszhk23\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldmpdvror22a\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldjvamtjy22i\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldhfebbr5s2i\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldeptnmld22u\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ldbuycsos225\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ld7ss7rzyk2w\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3ld2ovevr3s2v\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcxcktx36s2g\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcvr4fcjhk27\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcspt4ikt22h\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcqn72b4pk2u\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lco522vccc2r\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lclowlvmbc2n\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcjhe3xdgs2i\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcguntvscc2x\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcefwktw522v\" />\n<BlueskyPost id=\"https://bsky.app/profile/sarah11918.rainsberger.ca/post/3lcbjce7vg22b\" />","src/content/docs/photography/art-advent-calendar.mdx","6d83ae93620f4860","photography/silent-sunday",{id:1373,data:1375,body:1381,filePath:1382,digest:1383,deferredRender:23},{title:1376,description:1377,editUrl:23,head:1378,template:42,sidebar:1379,pagefind:23,draft:14},"#SilentSunday","Social media posts labelled #SilentSunday",[],{hidden:14,attrs:1380},{},"<script is:inline src=\"/embed.js\"></script>\n\n`#SilentSunday` is a popular Fediverse hashtag to encourage sharing images with little to no context and inject some \"quiet calm\" into social media timelines. Images should still include alt-text for accessibility, but typically posts include no text content and often no other hashtags.\n\nHere are [my Mastodon posts containing `#SilentSunday`](https://mastodon.social/search?q=%23SilentSunday+from%3Asarah11918%40mastodon.social&type=statuses).\n\n(Web components generated by [`embed-a-toot`](https://uppajung.github.io/embed-a-toot/))\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113894971333105230\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2025-01-26T21:16:46.494Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\">\n      <span class=\"post-authors-display-name\">Sarah Rainsberger</span>\n        <a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\">\n          <span class=\"at-symbol username-at-symbol\">@</span>\n          <span class=\"post-authors-fediverse-username\">sarah11918</span>\n          <span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span>\n        </a>\n    </div>\n  </header>\n  <main><p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p></main><img alt=\"A%20blue%20jay%20gracefully%20flying%20away%20from%20a%20wooden%20birdhouse%2C%20mounted%20high%20on%20a%20tree%20in%20a%20forest.%20It's%20wings%20and%20tail%20are%20fanned%20out%2C%20showing%20off%20patterns%20of%20blue%2C%20black%20and%20white.%20It%20is%20carrying%20a%20peanut%20in%20its%20beak%2C%20appearing%20pleased%20with%20its%20haul.\" src=\"https://files.mastodon.social/media_attachments/files/113/894/954/769/163/348/original/5b2650df7e78d3cb.jpg\" class=\"fediverse-attachment\" />\n  <footer>\n    <time datetime=\"2025-01-26T13:49:02.861Z\" class=\"post-time\">26 Jan 2025, 9:49</time>\n    <time hidden datetime=\"\" class=\"edit-time\">edited at </time>\n    <a href=\"https://mastodon.social/@sarah11918/113894971333105230/favourites\" title=\"favourites\" class=\"counter-favourites\">81</a>\n    <a href=\"https://mastodon.social/@sarah11918/113894971333105230/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">33</a>\n    <a href=\"https://mastodon.social/@sarah11918/113894971333105230\" title=\"replies\" class=\"counter-replies\">4</a>\n  </footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113855756618389061\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2025-01-19T15:45:36.007Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\">\n      <span class=\"post-authors-display-name\">Sarah Rainsberger</span>\n        <a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\">\n          <span class=\"at-symbol username-at-symbol\">@</span>\n          <span class=\"post-authors-fediverse-username\">sarah11918</span>\n          <span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span>\n        </a>\n    </div>\n  </header>\n  <main><p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p></main><img alt=\"A%20tiny%20yellow%20and%20grey%20bird%20(tit)%20hanging%20underneath%20a%20delicate%2C%20horizontal%20leaf%20stem.%20It's%20tiny%20feed%20are%20both%20grasping%20the%20stem%20and%20its%20round%20yellow%20belly%20and%20thin%20grey%20tail%20are%20pointed%20towards%20the%20camera.%20It's%20white%20face%20with%20black%20eye%20line%20and%20tiny%20grey%20beak%20are%20visible%20just%20under%20the%20greenish%20tree%20stem%2C%20which%20also%20has%20some%20thin%20green%20leaves.%20Spots%20of%20sunlight%20and%20blue%20sky%20are%20visible%20in%20the%20blurred%20foliage%20background.\" src=\"https://files.mastodon.social/media_attachments/files/113/855/740/133/815/632/original/5943d89f31734cba.jpg\" class=\"fediverse-attachment\"/>\n  <footer>\n    <time datetime=\"2025-01-19T15:36:13.796Z\" class=\"post-time\">19 Jan 2025, 11:36</time>\n    <time hidden datetime=\"\" class=\"edit-time\">edited at </time>\n    <a href=\"https://mastodon.social/@sarah11918/113855756618389061/favourites\" title=\"favourites\" class=\"counter-favourites\">8</a>\n    <a href=\"https://mastodon.social/@sarah11918/113855756618389061/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">1</a>\n    <a href=\"https://mastodon.social/@sarah11918/113855756618389061\" title=\"replies\" class=\"counter-replies\">0</a>\n  </footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113817593562122579\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2025-01-19T15:50:19.418Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\">\n      <span class=\"post-authors-display-name\">Sarah Rainsberger</span>\n        <a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\">\n          <span class=\"at-symbol username-at-symbol\">@</span>\n          <span class=\"post-authors-fediverse-username\">sarah11918</span>\n          <span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span>\n        </a>\n    </div>\n  </header>\n  <main><p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p></main><img alt=\"A%20crow's%20head%20peeking%20out%20from%20the%20left%20corner%20of%20the%20frame%20against%20a%20blurry%20green%20grass%20background.\" src=\"https://files.mastodon.social/media_attachments/files/113/817/578/685/650/823/original/afb473f013996fb6.jpg\" class=\"fediverse-attachment\" />\n  <footer>\n    <time datetime=\"2025-01-12T21:50:51.780Z\" class=\"post-time\">12 Jan 2025, 17:50</time>\n    <time hidden datetime=\"\" class=\"edit-time\">edited at </time>\n    <a href=\"https://mastodon.social/@sarah11918/113817593562122579/favourites\" title=\"favourites\" class=\"counter-favourites\">10</a>\n    <a href=\"https://mastodon.social/@sarah11918/113817593562122579/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">1</a>\n    <a href=\"https://mastodon.social/@sarah11918/113817593562122579\" title=\"replies\" class=\"counter-replies\">0</a>\n  </footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113777210846959549\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2025-01-05T18:41:23.266Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\">\n      <span class=\"post-authors-display-name\">Sarah Rainsberger</span>\n        <a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\">\n          <span class=\"at-symbol username-at-symbol\">@</span>\n          <span class=\"post-authors-fediverse-username\">sarah11918</span>\n          <span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span>\n        </a>\n    </div>\n  </header>\n  <main><p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p></main><a href=\"https://mastodon.social/@sarah11918/113777210846959549/\"><img alt=\"A%20male%20cardinal%20(deep%20red%2C%20medium%20sized%20bird%20with%20black%20around%20its%20beak%20and%20chin)%20perched%20on%20a%20curvy%20branch%2C%20angled%20down%20towards%20the%20ground.%20Its%20face%2C%20chest%20and%20beak%20are%20a%20bright%20orangey%20red%20while%20its%20wings%20and%20tail%20are%20a%20deeper%2C%20muted%20dark%20red.%20Its%20crest%20(hair%20feathers)%20are%20slightly%20raised%20and%20its%20bright%2C%20black%20eye%20is%20looking%20right%20at%20you.%20The%20background%20is%20a%20chaotic%20wilderness%20of%20green%20shoots%20and%20leaves%20and%20grey%2Fbrown%20stalks%2C%20deep%20in%20a%20forest%20but%20not%20too%20high%20off%20the%20ground.\" src=\"https://files.mastodon.social/media_attachments/files/113/777/195/228/697/532/original/6c47e458fadfcb16.jpg\" class=\"fediverse-attachment\" /></a>\n  <footer>\n    <a href=\"https://mastodon.social/@sarah11918/113777210846959549/\"><time datetime=\"2025-01-05T18:41:00.439Z\" class=\"post-time\">5 Jan 2025, 14:41</time></a>\n    <time hidden datetime=\"\" class=\"edit-time\">edited at </time>\n    <a href=\"https://mastodon.social/@sarah11918/113777210846959549/favourites\" title=\"favourites\" class=\"counter-favourites\">0</a>\n    <a href=\"https://mastodon.social/@sarah11918/113777210846959549/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">0</a>\n    <a href=\"https://mastodon.social/@sarah11918/113777210846959549\" title=\"replies\" class=\"counter-replies\">0</a>\n  </footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113738551426281434\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2025-01-05T18:30:18.610Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\">\n      <span class=\"post-authors-display-name\">Sarah Rainsberger</span>\n        <a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\">\n          <span class=\"at-symbol username-at-symbol\">@</span>\n          <span class=\"post-authors-fediverse-username\">sarah11918</span>\n          <span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span>\n        </a>\n    </div>\n  </header>\n  <main><p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p></main><a href=\"https://mastodon.social/@sarah11918/113738551426281434/\"><img alt=\"A%20black%20and%20white%20photograph%20of%20a%20mostly%20empty%20train%20station%2C%20indoors%20looking%20down%20an%20empty%20platform%2C%20focusing%20on%20the%20curvature%20of%20the%20roof%20in%20a%20series%20of%20arches%20overhead.%20There%20are%20a%20handful%20of%20people%20on%20the%20next%20platform%20over%2C%20and%20a%20parked%20train%20one%20or%20two%20platforms%20further%20in%20the%20distance.\" src=\"https://files.mastodon.social/media_attachments/files/113/738/534/976/223/631/original/c66cec0461a9fb62.jpg\" class=\"fediverse-attachment\" /></a>\n  <footer>\n    <a href=\"https://mastodon.social/@sarah11918/113738551426281434/\"><time datetime=\"2024-12-29T22:49:24.492Z\" class=\"post-time\">29 Dec 2024, 18:49</time></a>\n    <time hidden datetime=\"\" class=\"edit-time\">edited at </time>\n    <a href=\"https://mastodon.social/@sarah11918/113738551426281434/favourites\" title=\"favourites\" class=\"counter-favourites\">30</a>\n    <a href=\"https://mastodon.social/@sarah11918/113738551426281434/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">6</a>\n    <a href=\"https://mastodon.social/@sarah11918/113738551426281434\" title=\"replies\" class=\"counter-replies\">1</a>\n  </footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113698353488062465\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:29:45.941Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <a href=\"https://mastodon.social/@sarah11918/113698353488062465\"><img alt=\"Two%20differently%20sized%20maple%20leaves%20lying%20on%20a%20wet%2C%20wooden%20boardwalk.%20The%20smaller%20leaf%20is%20reddish%20at%20the%20edges%20and%20the%20larger%20is%20a%20paler%20beige%2Fbuff.%20Both%20are%20dotted%20with%20raindrops%20and%20the%20wooden%20floor%20is%20streaked%20dark%20with%20wet%20areas%20that%20haven't%20yet%20dried%20after%20a%20rain.\" src=\"https://files.mastodon.social/media_attachments/files/113/698/343/990/018/995/original/b96b83e8a57ed46c.jpg\" class=\"fediverse-attachment\"/></a>\n  <footer><a href=\"https://mastodon.social/@sarah11918/113698353488062465\"><time datetime=\"2024-12-22T20:26:32.631Z\" class=\"post-time\">22 Dec 2024, 16:26</time></a><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113698353488062465/favourites\" title=\"favourites\" class=\"counter-favourites\">35</a><a href=\"https://mastodon.social/@sarah11918/113698353488062465/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">9</a><a href=\"https://mastodon.social/@sarah11918/113698353488062465\" title=\"replies\" class=\"counter-replies\">1</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113658834459272381\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T16:58:18.476Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <a href=\"https://mastodon.social/@sarah11918/113658834459272381\"><img alt=\"A%20rainy%20night%20of%20old%20town%20Bratislava%20on%20a%20wet%20cobblestone%20pedestrian%20street.%20Either%20side%20of%20the%20street%20has%20older%20buildings%203%20or%204%20stories%20tall%20with%20storefronts%20on%20the%20ground%20floor%20and%20hotels%20or%20apartments%20above.%20Lights%20from%20the%20storefront%20and%20holiday%20lights%20strung%20across%20the%20street%20leave%20%22wet%22%20streaks%20of%20yellow%20and%20purplish%20lights%20on%20the%20ground.%20The%20view%20of%20the%20street%20ends%20with%20a%20pale%20yellow%20clock%20tower%20and%20dark%20spire%20against%20a%20dark%20grey%20sky.\" src=\"https://files.mastodon.social/media_attachments/files/113/658/812/212/394/307/original/79c36df6e90bb6bf.jpg\" class=\"fediverse-attachment\"/></a>\n  <footer><a href=\"https://mastodon.social/@sarah11918/113658834459272381\"><time datetime=\"2024-12-15T20:56:20.108Z\" class=\"post-time\">15 Dec 2024, 16:56</time></a><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113658834459272381/favourites\" title=\"favourites\" class=\"counter-favourites\">26</a><a href=\"https://mastodon.social/@sarah11918/113658834459272381/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">6</a><a href=\"https://mastodon.social/@sarah11918/113658834459272381\" title=\"replies\" class=\"counter-replies\">1</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113618271293372810\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:30:35.710Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a> <a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/birds\">#<span>birds</span></a> <a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/birdphotography\">#<span>birdphotography</span></a></p>\n  </main>\n  <a href=\"https://mastodon.social/@sarah11918/113618271293372810\"><img alt=\"A%20chickadee%20(a%20tiny%2C%20mostly%20grey%20bird%20with%20black%20and%20white%20face)%20flying%20horizontally%20against%20a%20blurry%20forest%20background.%20Its%20wings%20and%20tail%20feathers%20are%20entirely%20fanned%20out%2C%20with%20a%20sunbeam%20hitting%20one%20wing%20to%20reveal%20its%20delicate%2C%20translucent%20wing%20feathers.%20Because%20it%20is%20flying%20on%20an%20angle%2C%20it's%20as%20if%20you%20were%20viewing%20the%20bird%20from%20the%20top%2C%20looking%20down.%20However%2C%20its%20head%20is%20turned%20so%20you%20can%20see%20the%20right%20side%20of%20its%20face%20clearly.\" src=\"https://files.mastodon.social/media_attachments/files/113/618/261/415/254/295/original/68f0424a71b7ee87.jpeg\" class=\"fediverse-attachment\"/></a>\n  <footer><a href=\"https://mastodon.social/@sarah11918/113618271293372810\"><time datetime=\"2024-12-08T17:00:35.316Z\" class=\"post-time\">8 Dec 2024, 13:00</time></a><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113618271293372810/favourites\" title=\"favourites\" class=\"counter-favourites\">24</a><a href=\"https://mastodon.social/@sarah11918/113618271293372810/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">5</a><a href=\"https://mastodon.social/@sarah11918/113618271293372810\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113577244013538251\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:31:55.878Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20side%20angled%20view%20of%20a%20snowy%20%22row%20house%22%20of%20three%20simple%20wooden%20birdhouses%20(plain%20wood%2C%20just%20a%20small%20hole%20with%20a%20perch%20below%20it)%20with%20a%20shared%20platform%20against%20a%20snowy%2Fbare%20tree%20background.%20There%20is%20a%20pile%20of%20snow%20on%20top%2C%20cascading%20down%20to%20cover%20some%20of%20the%20front.%20Tiny%20squirrel%20faces%20are%20peeking%20out%20of%20the%20closest%20two%20of%20the%20three%20houses.\" src=\"https://files.mastodon.social/media_attachments/files/113/577/221/864/152/035/original/f490a1cd01fc65b1.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-12-01T11:06:48.706Z\" class=\"post-time\">1 Dec 2024, 7:06</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113577244013538251/favourites\" title=\"favourites\" class=\"counter-favourites\">185</a><a href=\"https://mastodon.social/@sarah11918/113577244013538251/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">80</a><a href=\"https://mastodon.social/@sarah11918/113577244013538251\" title=\"replies\" class=\"counter-replies\">4</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113539817555496714\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:34:59.028Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20quizzical%20blue%20jay%2C%20sitting%20on%20a%20branch%20amid%20green%20foliage%2C%20with%20its%20head%20tilted%20to%20the%20side%20as%20if%20wondering%20what's%20up.\" src=\"https://files.mastodon.social/media_attachments/files/113/539/810/353/751/752/original/323eef8f913a75d7.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-11-24T20:28:46.291Z\" class=\"post-time\">24 Nov 2024, 16:28</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113539817555496714/favourites\" title=\"favourites\" class=\"counter-favourites\">20</a><a href=\"https://mastodon.social/@sarah11918/113539817555496714/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">4</a><a href=\"https://mastodon.social/@sarah11918/113539817555496714\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113499047775442263\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:33:58.495Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20grassy%20hill%20with%20the%20silhouettes%20of%20three%20crows%20standing%20on%20top%20against%20a%20clear%20blue%20sky.%20A%20concrete%20wall%20covered%20in%20colourful%20graffiti%20is%20built%20into%20the%20side%20of%20the%20hill.%20Most%20of%20the%20artwork%20is%20in%20shades%20of%20purples%20and%20reds%20and%20includes%20the%20words%20in%20yellow%2C%20%22When%20life%20gives%20you%20lemons%2C%20add%20vodka.%22\" src=\"https://files.mastodon.social/media_attachments/files/113/499/026/889/986/734/original/9549413fa4fa3d21.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-11-17T15:40:28.803Z\" class=\"post-time\">17 Nov 2024, 11:40</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113499047775442263/favourites\" title=\"favourites\" class=\"counter-favourites\">12</a><a href=\"https://mastodon.social/@sarah11918/113499047775442263/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">2</a><a href=\"https://mastodon.social/@sarah11918/113499047775442263\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113419601167228132\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:37:37.465Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20blue%20jay%20standing%20in%20a%20%22bird%20house%22%20attached%20to%20a%20tree%20in%20the%20forest%20that%20is%20built%20to%20resemble%20a%20motorcycle%20bar.%20%22Members%20ONLY%3A%20Peanut%20Bar%22%20is%20stencilled%20on%20the%20front%2C%20and%20the%20%22parking%20lot%22%20is%20roped%20off.%20A%20toy%20motorcycle%20is%20parked%20outside%2C%20and%20one%20of%20the%20wooden%20blocks%20holding%20the%20rope%20has%20a%20Harley-Davidson%20logo.\" src=\"https://files.mastodon.social/media_attachments/files/113/419/575/225/124/289/original/3c9faaf439a39aee.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-11-03T14:56:09.766Z\" class=\"post-time\">3 Nov 2024, 10:56</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113419601167228132/favourites\" title=\"favourites\" class=\"counter-favourites\">25</a><a href=\"https://mastodon.social/@sarah11918/113419601167228132/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">7</a><a href=\"https://mastodon.social/@sarah11918/113419601167228132\" title=\"replies\" class=\"counter-replies\">1</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113261422647452585\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:38:34.506Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20determined%20red-breasted%20nuthatch%20coming%20in%20for%20a%20sideways%2Fhorizontal%20landing%20on%20a%20wooden%20post%20with%20birdseed%20on%20top%20of%20it.%20Wings%20are%20up%20and%20outstretched%2C%20and%20tiny%20feet%20are%20extended%20out%20front%2C%20like%20a%20ski%20jumper.%0A%0A(A%20red%20breasted%20nuthatch%20is%20a%20tiny%20bird%20with%20a%20long%20pointy%20beak%2C%20red%20underside%2C%20white%20face%20with%20black%20eye%20stripe%20and%20grey%20wings%2Fback.)\" src=\"https://files.mastodon.social/media_attachments/files/113/261/404/455/031/765/original/beaf8e8f9a9d7f5d.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-10-06T16:29:17.102Z\" class=\"post-time\">6 Oct 2024, 13:29</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113261422647452585/favourites\" title=\"favourites\" class=\"counter-favourites\">39</a><a href=\"https://mastodon.social/@sarah11918/113261422647452585/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">12</a><a href=\"https://mastodon.social/@sarah11918/113261422647452585\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113221502113593832\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:40:01.204Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20black%20capped%20chickadee%20(tiny%20bird%20with%20white%20face%20and%20belly%20and%20a%20black%20%22cap%22%20and%20throat)%20perched%20with%20its%20teeny%2C%20tiny%20feet%20wrapped%20around%20a%20delicate%20branch.%20It%20is%20looking%20up%20at%20reddish%2C%20cylindrical%20catkins%20(flowering%20shoots).\" src=\"https://files.mastodon.social/media_attachments/files/113/221/470/494/605/976/original/ea00291b39e7a489.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-09-29T15:16:58.095Z\" class=\"post-time\">29 Sept 2024, 12:16</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113221502113593832/favourites\" title=\"favourites\" class=\"counter-favourites\">58</a><a href=\"https://mastodon.social/@sarah11918/113221502113593832/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">21</a><a href=\"https://mastodon.social/@sarah11918/113221502113593832\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113182758247218103\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:41:06.379Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20blue%20jay%20flying%20low%20across%20a%20wooden%20boardwalk%20with%20wings%20fanned%20out%20and%20outstretched%20so%20that%20it%20makes%20a%20perfect%20shadow%20underneath.\" src=\"https://files.mastodon.social/media_attachments/files/113/182/749/596/016/114/original/2bcb903132fdcf70.jpg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-09-22T19:03:53.608Z\" class=\"post-time\">22 Sept 2024, 16:03</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113182758247218103/favourites\" title=\"favourites\" class=\"counter-favourites\">827</a><a href=\"https://mastodon.social/@sarah11918/113182758247218103/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">285</a><a href=\"https://mastodon.social/@sarah11918/113182758247218103\" title=\"replies\" class=\"counter-replies\">19</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113104400914956105\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:42:10.852Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20white%20throated%20Sparrow%20(tiny%20bird%20brown%20speckled%20bird%20with%20a%20grey%20head%2C%20black%20eye%2Fhead%20stripes%2C%20a%20yellow%20%22eyebrow%22%20and%2C%20you%20guessed%20it%2C%20a%20white%20throat!)%20facing%20away%20from%20you%2C%20head%20turned%20to%20the%20side%20with%20a%20calm%20look%20amid%20green%20foliage.\" src=\"https://files.mastodon.social/media_attachments/files/113/104/384/265/225/611/original/62903210a542836e.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-09-08T22:56:35.605Z\" class=\"post-time\">8 Sept 2024, 19:56</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113104400914956105/favourites\" title=\"favourites\" class=\"counter-favourites\">13</a><a href=\"https://mastodon.social/@sarah11918/113104400914956105/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">3</a><a href=\"https://mastodon.social/@sarah11918/113104400914956105\" title=\"replies\" class=\"counter-replies\">2</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113064370071290947\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:43:07.831Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20big%20fuzzy%20bumblebee%20flying%20towards%20pale%20purple%20flowers%20against%20a%20blurry%20green%20background.%20It's%20moving%20wings%20are%20blurred%2C%20but%20you%20can%20see%20legs%20and%20antennae%20clearly.%20There%20are%20bits%20of%20yellow%20pollen%20around%20it's%20face.\" src=\"https://files.mastodon.social/media_attachments/files/113/064/351/287/394/371/original/8ee6a3102e4d9280.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-09-01T21:16:13.407Z\" class=\"post-time\">1 Sept 2024, 18:16</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113064370071290947/favourites\" title=\"favourites\" class=\"counter-favourites\">6</a><a href=\"https://mastodon.social/@sarah11918/113064370071290947/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">0</a><a href=\"https://mastodon.social/@sarah11918/113064370071290947\" title=\"replies\" class=\"counter-replies\">1</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"113024353711009895\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:43:56.190Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20deep%20green%20northern%20leopard%20frog%20(I%20think!)%20sitting%20in%20clear%20water%20with%20a%20muddy%20bottom%20about%20an%20inch%20deep.%20Dozens%20of%20small%20tiny%20skinny%20fish%20(killfish%3F)%20are%20visible%20swimming%20around%20it%2C%20but%20giving%20it%20a%20wide%20berth!\" src=\"https://files.mastodon.social/media_attachments/files/113/024/318/075/816/181/original/8d51dc991cae7dd7.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-08-25T19:39:32.212Z\" class=\"post-time\">25 Aug 2024, 16:39</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/113024353711009895/favourites\" title=\"favourites\" class=\"counter-favourites\">12</a><a href=\"https://mastodon.social/@sarah11918/113024353711009895/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">1</a><a href=\"https://mastodon.social/@sarah11918/113024353711009895\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"112945453956850835\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:44:53.758Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"An%20American%20Black%20Duck%2C%20wings%20flapped%20up%20so%20you%20can%20see%20the%20band%20of%20shiny%20blue%20on%20one%20of%20its%20wings%2C%20flying%20over%20a%20mostly%20calm%20body%20of%20water.%20It's%20beak%20is%20slightly%20open%20and%20it%20looks%20almost%20like%20it's%20smiling.%20There%20is%20a%20thin%20band%20of%20entirely%20blue%20s%20y%20above%20the%20horizon.\" src=\"https://files.mastodon.social/media_attachments/files/112/945/432/600/345/777/original/b1b4b65e596f697e.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-08-11T21:14:17.497Z\" class=\"post-time\">11 Aug 2024, 18:14</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/112945453956850835/favourites\" title=\"favourites\" class=\"counter-favourites\">22</a><a href=\"https://mastodon.social/@sarah11918/112945453956850835/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">4</a><a href=\"https://mastodon.social/@sarah11918/112945453956850835\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"112905570058118196\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:45:34.130Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20monarch%20butterfly%20mid-flight%2C%20with%20both%20wings%20pointing%20down%2C%20flying%20through%20sunlit-illuminated%20green%20leaves.\" src=\"https://files.mastodon.social/media_attachments/files/112/905/565/317/749/059/original/e9e739a69a215c1b.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-08-04T20:11:17.510Z\" class=\"post-time\">4 Aug 2024, 17:11</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/112905570058118196/favourites\" title=\"favourites\" class=\"counter-favourites\">27</a><a href=\"https://mastodon.social/@sarah11918/112905570058118196/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">8</a><a href=\"https://mastodon.social/@sarah11918/112905570058118196\" title=\"replies\" class=\"counter-replies\">0</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"112866297853462520\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:46:44.203Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20chickadee%20(tiny%20bird)%20coming%20in%20for%20a%20landing%20on%20an%20outstretched%20hand%2C%20feet%20sticking%20out%20ahead%2C%20wings%20spread%20and%20beak%20open.%20In%20the%20background%2C%20a%20second%20chickadee%20is%20flying%20away.\" src=\"https://files.mastodon.social/media_attachments/files/112/866/283/243/551/851/original/84cfd563129c0309.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-07-28T21:43:51.214Z\" class=\"post-time\">28 Jul 2024, 18:43</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/112866297853462520/favourites\" title=\"favourites\" class=\"counter-favourites\">12</a><a href=\"https://mastodon.social/@sarah11918/112866297853462520/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">1</a><a href=\"https://mastodon.social/@sarah11918/112866297853462520\" title=\"replies\" class=\"counter-replies\">1</a></footer>\n</article>\n\n<article class=\"fediverse-status\" data-mastodon-host=\"mastodon.social\" data-status=\"112826751617848607\" data-created-by=\"https://github.com/UppaJung/embed-a-toot;v1.0.0;2024-12-24T17:47:42.591Z\" data-update-counters data-update-content>\n  <header>\n    <a href=\"https://mastodon.social/@sarah11918\" rel=\"external nofollow\" title=\"view profile at @sarah11918@mastodon.social\" class=\"authors-avatar-link\">\n      <picture class=\"authors-avatar\">\n        <source srcset=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" media=\"(prefers-reduced-motion: no-preference)\"/>\n        <img src=\"https://files.mastodon.social/accounts/avatars/000/011/967/original/f8789e7707cf523e.jpg\" alt=\"@sarah11918@mastodon.social avatar\" class=\"authors-avatar\"/>\n      </picture>\n    </a>\n    <div class=\"post-author\"><span class=\"post-authors-display-name\">Sarah Rainsberger</span><a href=\"https://mastodon.social/@sarah11918\" title=\"@sarah11918@mastodon.social\" rel=\"external nofollow\" class=\"post-authors-fediverse-identity\"><span class=\"at-symbol username-at-symbol\">@</span><span class=\"post-authors-fediverse-username\">sarah11918</span><span class=\"at-symbol server-at-symbol\">@</span><span class=\"post-authors-fediverse-server\">mastodon.social</span></a></div>\n  </header>\n  <main>\n    <p><a rel=\"tag\" class=\"mention hashtag\" href=\"https://mastodon.social/tags/SilentSunday\">#<span>SilentSunday</span></a></p>\n  </main>\n  <img alt=\"A%20grackle%20(medium%20sized%20bird%20with%20a%20shiny%20purple-blue%20head%2C%20bright%20yellow%20eyes%20and%20iridescent%20brownish%20body)%20perched%20on%20a%20curved%20metal%20lawn%20ornament.\" src=\"https://files.mastodon.social/media_attachments/files/112/826/751/583/337/694/original/fd7614486a1ef1e5.jpeg\" class=\"fediverse-attachment\"/>\n  <footer><time datetime=\"2024-07-21T22:06:43.551Z\" class=\"post-time\">21 Jul 2024, 19:06</time><time hidden datetime=\"\" class=\"edit-time\">edited at </time><a href=\"https://mastodon.social/@sarah11918/112826751617848607/favourites\" title=\"favourites\" class=\"counter-favourites\">13</a><a href=\"https://mastodon.social/@sarah11918/112826751617848607/reblogs\" title=\"reblogs\" class=\"counter-reblogs\">4</a><a href=\"https://mastodon.social/@sarah11918/112826751617848607\" title=\"replies\" class=\"counter-replies\">1</a></footer>\n</article>","src/content/docs/photography/silent-sunday.mdx","285918ea291ea3b2","reference/example",{id:1384,data:1386,body:1392,filePath:1393,digest:1394,rendered:1395},{title:1387,description:1388,editUrl:23,head:1389,template:42,sidebar:1390,pagefind:23,draft:14},"Example Reference","A reference page in my new Starlight docs site.",[],{hidden:14,attrs:1391},{},"Reference pages are ideal for outlining how things work in terse and clear terms.\nLess concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.\n\n## Further reading\n\n- Read [about reference](https://diataxis.fr/reference/) in the Diátaxis framework","src/content/docs/reference/example.md","f89d7b3a0a25e4d6",{html:1396,metadata:1397},"<p>Reference pages are ideal for outlining how things work in terse and clear terms.\nLess concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.</p>\n<h2 id=\"further-reading\">Further reading</h2>\n<ul>\n<li>Read <a href=\"https://diataxis.fr/reference/\">about reference</a> in the Diátaxis framework</li>\n</ul>",{headings:1398,localImagePaths:1402,remoteImagePaths:1403,frontmatter:1404,imagePaths:1405},[1399],{depth:75,slug:1400,text:1401},"further-reading","Further reading",[],[],{title:1387,description:1388},[],"blog/gitpod-astro",{id:1406,data:1408,body:1417,filePath:1418,digest:1419,rendered:1420},{title:1409,editUrl:23,head:1410,template:42,sidebar:1411,pagefind:23,draft:14,authors:1413,date:1414,excerpt:1415,tags:1416},"Developing Astro with Gitpod",[],{hidden:14,attrs:1412},{},[166],["Date","2023-10-18T00:00:00.000Z"],"From a 7 year-old Chromebook to an Android tablet to a Linux desktop... all my building with Astro is done in a cloud development environment thanks to Gitpod! No local development environment? No problem!",[9,959,928,1125],"I spend much of my day making sure people can get started and build with [Astro](https://astro.build). I am regularly working in several Astro websites: this personal site, Astro Docs, Astro Docs Docs... \n\nEven though I wrote a tutorial that includes instructions on setting up and using VS Code for your first Astro project, I don't actually have a local code editor installed on any machine I use!\n\nInstead, all of my development is done in the cloud, through [Gitpod](https://www.gitpod.io/).\n\nCloud environments aren't new. I learned web development, and built my first projects entirely in Scrimba's online platform. My React birding app was built in Replit. My first Astro websites were built and maintained entirely on CodeSandbox. Astro regularly encourages our community members to create minimal reproductions of their issues on StackBlitz to share with the team. During our weekly \"Talking and Doc'ing\" events in the Astro Discord, we often have several members jump into a shared GitHub Codespace to work on a project in real-time together.\n\nBut, Gitpod was the first full cloud developer environment that could entirely support a full workflow. I can install the Astro VS Code extension, configure start-up scripts, commit back to GitHub or, if I realize I've made a horrible mistake, just close the tab and start fresh again with a new workspace. It's now what I use every day, both personally and professionally, to maintain all the Astro sites I work on.  \n\nAlthough you can open any of Astro's official starter templates in a few different cloud environments at [astro.new](https://astro.new), the best way to get started with a new Astro project in Gitpod is to start from an existing repository of your own. Use the instructions below every time you want to make a new Astro (or [Starlight](https://starlight.astro.build)) website!\n\n## Starting a new Astro project\n\n1. Create a new, blank repository on GitHub, GitLab or BitBucket.\n\n2. Open that new repository in Gitpod using one of the following methods:\n    - install [Gitpod's browser extension](https://www.gitpod.io/docs/browser-extension) or [Gitpod's browser bookmarklet](https://www.gitpod.io/docs/browser-bookmarklet) to add an \"Open in Gitpod\" button right on your GitHub/GitLab repository page!\n        \n    - prefix your GitHub repository's full URL with `gitpod.io/#` and enter that URL into a browser window (e.g. `gitpod.io/#https://github.com/sarah11918/astro`)\n\n3. When your repository finishes opening in Gitpod's editor, type `npm create astro@latest` in the terminal window to launch the Astro CLI wizard which will guide you through setting up a new project. \n\n    (Want to start your project from an existing Astro theme or template? You can use [the template flag](https://docs.astro.build/en/install/auto/#starter-templates) as shown in Astro docs. For example, to open a new Starlight project, type `npm create astro@latest -- --template starlight`)\n      \n4. Follow the instructions and when asked where to install the project, type `./` (Do not add a folder name. This will create your project at the root of your repository.)\n      \n5. The final set of instructions will tell you to start the dev server with the command `npm run dev`. Your workspace is now ready for coding!\n\n6. Add a `.gitpod.yml` file to the root of your project to automatically run commands every time you re-open your Astro project. My file installs dependencies, starts the dev server and opens a preview of my site in another browser tab:\n\n      ```yaml title=\".gitpod.yml\"\n      tasks:\n        - init: npm install\n          command: npm run dev\n\n      ports:\n        - port: 4321\n          onOpen: open-browser\n      ```\n\n\n7. After working on your site, you can commit your changes to local version control, and eventually back to your source repository (or throw them away!) via the Source Control menu item in the left navigation. \n\n    \n    Any changes you make are saved to this \"Workspace\" which is a particular instance of your repository. This workspace will save its own state, even between starting/stopping the workspace, but will only push back to your online source code when you choose to commit and sync.\n\n    To work on **this** version of your code, re-open the workspace. To go back and start fresh from source again, re-open your repository from one of the two earlier methods.\n    \n    If you don't like what you did in a particular workspace, then just delete (or ignore) the workspace! Unused workspaces will automatically delete after 14 days of inactivity via [Gitpod's Garbage Collection](https://www.gitpod.io/docs/life-of-workspace/#garbage-collection).\n\n## Working on existing projects\n\nOf course, most of my time is spent working on existing projects. With my Gitpod browser extension, I am just one click away from opening any branch of any repository. I use this to:\n\n- Work on my personal websites\n\n- Contribute to Astro Docs, knowning that my \"fork\" is never behind or out of date\n\n- Edit Pull Requests to the Astro Docs, because I can open up any PR branch and work in my full editing environment\n\n## Work on any machine\n\nIn fact, this very article was started on a desktop machine in my office while my partner was making espresso in the kitchen. When he was ready to sit with morning espresso in front of the television for our morning routine, I opened **the same Gitpod workspace** on my laptop on the couch and kept writing.\n\nI hadn't even committed my earlier work: Gitpod's workspaces hold everything in memory so that I can pick up on a different machine at a moment's notice and never lose a keystroke. (This was quite handy when my 7 year-old Chromebook was prone to random freezing, and I'd need to jump to a different device to keep working.)\n\nI'm now back at my desk, finishing off this post.\n\nSo, I *could* install VS Code locally, I guess. But, why would I? My setup is identical, and instantaneous, on any device and in any room of the house. I have even travelled for two weeks with only an Android tablet and continued to work on Astro docs on the road that way.\n\nIt's never \"works on my machine\" with me, because in fact, it never is my machine! With Gitpod as my only development environment, it just \"works.\"","src/content/docs/blog/gitpod-astro.md","146eaf6c2098740c",{html:1421,metadata:1422},"<p>I spend much of my day making sure people can get started and build with <a href=\"https://astro.build\">Astro</a>. I am regularly working in several Astro websites: this personal site, Astro Docs, Astro Docs Docs…</p>\n<p>Even though I wrote a tutorial that includes instructions on setting up and using VS Code for your first Astro project, I don’t actually have a local code editor installed on any machine I use!</p>\n<p>Instead, all of my development is done in the cloud, through <a href=\"https://www.gitpod.io/\">Gitpod</a>.</p>\n<p>Cloud environments aren’t new. I learned web development, and built my first projects entirely in Scrimba’s online platform. My React birding app was built in Replit. My first Astro websites were built and maintained entirely on CodeSandbox. Astro regularly encourages our community members to create minimal reproductions of their issues on StackBlitz to share with the team. During our weekly “Talking and Doc’ing” events in the Astro Discord, we often have several members jump into a shared GitHub Codespace to work on a project in real-time together.</p>\n<p>But, Gitpod was the first full cloud developer environment that could entirely support a full workflow. I can install the Astro VS Code extension, configure start-up scripts, commit back to GitHub or, if I realize I’ve made a horrible mistake, just close the tab and start fresh again with a new workspace. It’s now what I use every day, both personally and professionally, to maintain all the Astro sites I work on.</p>\n<p>Although you can open any of Astro’s official starter templates in a few different cloud environments at <a href=\"https://astro.new\">astro.new</a>, the best way to get started with a new Astro project in Gitpod is to start from an existing repository of your own. Use the instructions below every time you want to make a new Astro (or <a href=\"https://starlight.astro.build\">Starlight</a>) website!</p>\n<h2 id=\"starting-a-new-astro-project\">Starting a new Astro project</h2>\n<ol>\n<li>\n<p>Create a new, blank repository on GitHub, GitLab or BitBucket.</p>\n</li>\n<li>\n<p>Open that new repository in Gitpod using one of the following methods:</p>\n<ul>\n<li>\n<p>install <a href=\"https://www.gitpod.io/docs/browser-extension\">Gitpod’s browser extension</a> or <a href=\"https://www.gitpod.io/docs/browser-bookmarklet\">Gitpod’s browser bookmarklet</a> to add an “Open in Gitpod” button right on your GitHub/GitLab repository page!</p>\n</li>\n<li>\n<p>prefix your GitHub repository’s full URL with <code dir=\"auto\">gitpod.io/#</code> and enter that URL into a browser window (e.g. <code dir=\"auto\">gitpod.io/#https://github.com/sarah11918/astro</code>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>When your repository finishes opening in Gitpod’s editor, type <code dir=\"auto\">npm create astro@latest</code> in the terminal window to launch the Astro CLI wizard which will guide you through setting up a new project.</p>\n<p>(Want to start your project from an existing Astro theme or template? You can use <a href=\"https://docs.astro.build/en/install/auto/#starter-templates\">the template flag</a> as shown in Astro docs. For example, to open a new Starlight project, type <code dir=\"auto\">npm create astro@latest -- --template starlight</code>)</p>\n</li>\n<li>\n<p>Follow the instructions and when asked where to install the project, type <code dir=\"auto\">./</code> (Do not add a folder name. This will create your project at the root of your repository.)</p>\n</li>\n<li>\n<p>The final set of instructions will tell you to start the dev server with the command <code dir=\"auto\">npm run dev</code>. Your workspace is now ready for coding!</p>\n</li>\n<li>\n<p>Add a <code dir=\"auto\">.gitpod.yml</code> file to the root of your project to automatically run commands every time you re-open your Astro project. My file installs dependencies, starts the dev server and opens a preview of my site in another browser tab:</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.tm3va.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">.gitpod.yml</span></figcaption><pre data-language=\"yaml\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">tasks</span><span style=\"--0:#D6DEEB;--1:#403F53\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">- </span><span style=\"--0:#7FDBCA;--1:#111111\">init</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3B61B0\">npm install</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#111111\">command</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3B61B0\">npm run dev</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">ports</span><span style=\"--0:#D6DEEB;--1:#403F53\">:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">- </span><span style=\"--0:#7FDBCA;--1:#111111\">port</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#F78C6C;--1:#AA0982\">4321</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#7FDBCA;--1:#111111\">onOpen</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3B61B0\">open-browser</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"tasks:  - init: npm install    command: npm run devports:  - port: 4321    onOpen: open-browser\"><div></div></button></div></figure></div>\n</li>\n<li>\n<p>After working on your site, you can commit your changes to local version control, and eventually back to your source repository (or throw them away!) via the Source Control menu item in the left navigation.</p>\n<p>Any changes you make are saved to this “Workspace” which is a particular instance of your repository. This workspace will save its own state, even between starting/stopping the workspace, but will only push back to your online source code when you choose to commit and sync.</p>\n<p>To work on <strong>this</strong> version of your code, re-open the workspace. To go back and start fresh from source again, re-open your repository from one of the two earlier methods.</p>\n<p>If you don’t like what you did in a particular workspace, then just delete (or ignore) the workspace! Unused workspaces will automatically delete after 14 days of inactivity via <a href=\"https://www.gitpod.io/docs/life-of-workspace/#garbage-collection\">Gitpod’s Garbage Collection</a>.</p>\n</li>\n</ol>\n<h2 id=\"working-on-existing-projects\">Working on existing projects</h2>\n<p>Of course, most of my time is spent working on existing projects. With my Gitpod browser extension, I am just one click away from opening any branch of any repository. I use this to:</p>\n<ul>\n<li>\n<p>Work on my personal websites</p>\n</li>\n<li>\n<p>Contribute to Astro Docs, knowning that my “fork” is never behind or out of date</p>\n</li>\n<li>\n<p>Edit Pull Requests to the Astro Docs, because I can open up any PR branch and work in my full editing environment</p>\n</li>\n</ul>\n<h2 id=\"work-on-any-machine\">Work on any machine</h2>\n<p>In fact, this very article was started on a desktop machine in my office while my partner was making espresso in the kitchen. When he was ready to sit with morning espresso in front of the television for our morning routine, I opened <strong>the same Gitpod workspace</strong> on my laptop on the couch and kept writing.</p>\n<p>I hadn’t even committed my earlier work: Gitpod’s workspaces hold everything in memory so that I can pick up on a different machine at a moment’s notice and never lose a keystroke. (This was quite handy when my 7 year-old Chromebook was prone to random freezing, and I’d need to jump to a different device to keep working.)</p>\n<p>I’m now back at my desk, finishing off this post.</p>\n<p>So, I <em>could</em> install VS Code locally, I guess. But, why would I? My setup is identical, and instantaneous, on any device and in any room of the house. I have even travelled for two weeks with only an Android tablet and continued to work on Astro docs on the road that way.</p>\n<p>It’s never “works on my machine” with me, because in fact, it never is my machine! With Gitpod as my only development environment, it just “works.”</p>",{headings:1423,localImagePaths:1433,remoteImagePaths:1434,frontmatter:1435,imagePaths:1441},[1424,1427,1430],{depth:75,slug:1425,text:1426},"starting-a-new-astro-project","Starting a new Astro project",{depth:75,slug:1428,text:1429},"working-on-existing-projects","Working on existing projects",{depth:75,slug:1431,text:1432},"work-on-any-machine","Work on any machine",[],[],{title:1409,authors:1436,date:1437,pubDate:1438,excerpt:1415,alt:1439,tags:1440},[166],["Date","2023-10-18T00:00:00.000Z"],"2023-10-18","A screenshot of the Gitpod logo as a workspace is starting up.",[9,959,928,1125],[],"blog/react-astro-first-things",{id:1442,data:1444,body:1454,filePath:1455,digest:1456,rendered:1457},{title:1445,description:1446,editUrl:23,head:1447,template:42,sidebar:1448,pagefind:23,draft:14,authors:1450,date:1451,excerpt:1452,tags:1453},"Getting started with React components in Astro","Having trouble with your React components Astro. Check these three things!",[],{hidden:14,attrs:1449},{},[166],["Date","2021-10-13T00:00:00.000Z"],"Yes, you can write and render your React components in your Astro page. But remember, Astro *isn't* React, and you might be getting error messages when you *totally know* your React component should work. It's not complicated to establish the Astro-React relationship, but you might not be used to doing these things. . .",[1278,928],"# React Gut Check\nHere are the very first, super-basic things to check that might be causing your perfectly-awesome React components to throw Astro errors:\n## 1. Specify the React renderer in astro.config.mjs\nAstro can render a variety of components: React, Svelte, Vue, Preact, Solid ... but, it first needs to import the appropriate renderer(s) to do so. If you didn't specify renderers when creating your project, your `astro.config.mjs` may have started with an empty renderers array, or it may have been commented out. It should include all renderers for components you intend to use. Make sure the following is in your config file at the root of your project (example shown with renderers for React and Svelte, but you only need the one(s) you intend to use):\n```js\n//astro.config.mjs\nexport default {\n    renderers: ['@astrojs/renderer-react','@astrojs/renderer-svelte'],\n}\n```\n## 2. Import your React component *with its file extension*\nYou have made sure to include your React renderer, but your super-happy-awesome React component still causes an error? Perhaps something like \"Failed to fetch dynamically imported module\"?\n\nThis can be a particular D'oh! moment when first getting used to writing React in Astro, especially if you're copy-pasting or uploading React files into your Astro project. Your React component may *itself* be importing child components, and you aren't used to writing a file extension for *those* imports. But, Astro *does* require you to type out the full import path. So, you may have to inspect all your imports carefully to make sure all .js/.jsx file extensions are included.\n\n```astro\n// src/pages/my-astro-page.astro\n---\nimport BaseLayout from '../layouts/BaseLayout.astro';\nimport MyReactComponent from '../components/MyReactComponent.jsx'\n---\n```\n## 3. Hydrate your React component for interactivity\nWhy do we fall for this one over and over again? Your technically-perfect React component has been imported into your .astro file, extension and all, and it *looks* like it's working. But it... doesn't work? \n\nCheck to see that you have specified a hydration method with a `client:*` directive!\n\nIf you render `<MyAmazingReactComponentThatShouldTotallyWork />` in an Astro page, the way you would in a React component, you'll only get the static HTML representation of your component, with no interactivity. To include your component's functionality, be sure to specify one of the available options such as:\n\n`<MyAmazingReactComponentThatShouldTotallyWork client:load />` (to load instantly)\nor\n`<MyAmazingReactComponentThatShouldTotallyWork client:visible />` (to load only when the component becomes visible on the page. This is handy for something lower on the page that doesn't need to load until / unless the user scrolls down to it)\n\nThese are the top three items on my checklist when a React component isn't working, especially if I've been writing my React code separately in a different environment, outside of my main Astro project with the intention of adding the files later. \n\nI mean, sure, there *could* be a flaw in my React code, but I can sometimes save myself a whole lot of pain and suffering if I just check these things first!","src/content/docs/blog/react-astro-first-things.md","09d508c9d47e2baa",{html:1458,metadata:1459},"<h1 id=\"react-gut-check\">React Gut Check</h1>\n<p>Here are the very first, super-basic things to check that might be causing your perfectly-awesome React components to throw Astro errors:</p>\n<h2 id=\"1-specify-the-react-renderer-in-astroconfigmjs\">1. Specify the React renderer in astro.config.mjs</h2>\n<p>Astro can render a variety of components: React, Svelte, Vue, Preact, Solid … but, it first needs to import the appropriate renderer(s) to do so. If you didn’t specify renderers when creating your project, your <code dir=\"auto\">astro.config.mjs</code> may have started with an empty renderers array, or it may have been commented out. It should include all renderers for components you intend to use. Make sure the following is in your config file at the root of your project (example shown with renderers for React and Svelte, but you only need the one(s) you intend to use):</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.tm3va.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">astro.config.mjs</span></figcaption><pre data-language=\"js\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">default</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">renderers: [</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">@astrojs/renderer-react</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">@astrojs/renderer-svelte</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"export default {    renderers: [&#x27;@astrojs/renderer-react&#x27;,&#x27;@astrojs/renderer-svelte&#x27;],}\"><div></div></button></div></figure></div>\n<h2 id=\"2-import-your-react-component-with-its-file-extension\">2. Import your React component <em>with its file extension</em></h2>\n<p>You have made sure to include your React renderer, but your super-happy-awesome React component still causes an error? Perhaps something like “Failed to fetch dynamically imported module”?</p>\n<p>This can be a particular D’oh! moment when first getting used to writing React in Astro, especially if you’re copy-pasting or uploading React files into your Astro project. Your React component may <em>itself</em> be importing child components, and you aren’t used to writing a file extension for <em>those</em> imports. But, Astro <em>does</em> require you to type out the full import path. So, you may have to inspect all your imports carefully to make sure all .js/.jsx file extensions are included.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/my-astro-page.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> BaseLayout </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../layouts/BaseLayout.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> MyReactComponent </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../components/MyReactComponent.jsx</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import BaseLayout from &#x27;../layouts/BaseLayout.astro&#x27;;import MyReactComponent from &#x27;../components/MyReactComponent.jsx&#x27;---\"><div></div></button></div></figure></div>\n<h2 id=\"3-hydrate-your-react-component-for-interactivity\">3. Hydrate your React component for interactivity</h2>\n<p>Why do we fall for this one over and over again? Your technically-perfect React component has been imported into your .astro file, extension and all, and it <em>looks</em> like it’s working. But it… doesn’t work?</p>\n<p>Check to see that you have specified a hydration method with a <code dir=\"auto\">client:*</code> directive!</p>\n<p>If you render <code dir=\"auto\">&#x3C;MyAmazingReactComponentThatShouldTotallyWork /></code> in an Astro page, the way you would in a React component, you’ll only get the static HTML representation of your component, with no interactivity. To include your component’s functionality, be sure to specify one of the available options such as:</p>\n<p><code dir=\"auto\">&#x3C;MyAmazingReactComponentThatShouldTotallyWork client:load /></code> (to load instantly)\nor\n<code dir=\"auto\">&#x3C;MyAmazingReactComponentThatShouldTotallyWork client:visible /></code> (to load only when the component becomes visible on the page. This is handy for something lower on the page that doesn’t need to load until / unless the user scrolls down to it)</p>\n<p>These are the top three items on my checklist when a React component isn’t working, especially if I’ve been writing my React code separately in a different environment, outside of my main Astro project with the intention of adding the files later.</p>\n<p>I mean, sure, there <em>could</em> be a flaw in my React code, but I can sometimes save myself a whole lot of pain and suffering if I just check these things first!</p>",{headings:1460,localImagePaths:1473,remoteImagePaths:1474,frontmatter:1475,imagePaths:1479},[1461,1464,1467,1470],{depth:938,slug:1462,text:1463},"react-gut-check","React Gut Check",{depth:75,slug:1465,text:1466},"1-specify-the-react-renderer-in-astroconfigmjs","1. Specify the React renderer in astro.config.mjs",{depth:75,slug:1468,text:1469},"2-import-your-react-component-with-its-file-extension","2. Import your React component with its file extension",{depth:75,slug:1471,text:1472},"3-hydrate-your-react-component-for-interactivity","3. Hydrate your React component for interactivity",[],[],{title:1445,description:1446,authors:1476,date:1477,excerpt:1452,tags:1478},[166],["Date","2021-10-13T00:00:00.000Z"],[1278,928],[],"guides/direct-link-for-posting-google-photos-image",{id:1480,data:1482,body:1489,filePath:1490,digest:1491,rendered:1492},{title:1483,description:1484,editUrl:23,head:1485,template:42,sidebar:1486,pagefind:23,draft:14,excerpt:1488},"Get a public link for sharing Google Photos image","How to obtain a direct link to an image in Google Photos for creating an HTML   image tag",[],{hidden:14,attrs:1487},{},"One issue (among many!) that people are having with the transition from Picasa Web Albums to Google Photos is how to directly link to a photo from Google Photos.","One issue (among many!) that people are having with the transition from Picasa Web Albums to Google Photos is how to directly link to a photo from Google Photos.\n\n<!-- more -->\n<h2>2019-12-29 Update:</h2>\n\nSince people are *still* using this page to figure out how to post Google Photos images to message boards, I thought I'd leave a more current update. The method below *still* works, and is *still* what we have to do in order to post a photo that's in your Google Photos account to a message board. (Shout out to all the various message board peeps who end up here! I love finding that new message boards have linked here!)\n\nSome of you rightly point out that Google Photo links expire, but, *not if you create your link exactly this way*. The images immediately below (in my 2017 update) were posted in *2017*. If they're still there, then this method still works! If I find a better way to streamline the process for you, I'll update it. But until then, if you can see my images below, then you'll know that links set up this way have not expired yet.\n\nLet's see what photo updates 2020 brings! Happy message board posting! Keep sharing pics of your cars, model trains, knitting projects and all of your other wonderful hobbies!\n\n## 2017-04-21 Update:\n\nHere are my updated (and simplified!) instructions for getting an image's direct link in Google Photos. This works for using your Google Photos images in other places around the web: blogs, forum and message board posts as well as sharing a direct link with a friend. \n\n### Step 1: Browse to the Photo's page\n\nOn the Google Photos website, click on the photo you want to share, post or use. This will take you to the individual photo's page, with a black background. But note, this does not give you a link to the photo itself.\n\n### Step 2: Share the Photo\n\nChoose the 3-dot share icon in the upper right of the screen to \"share\" the photo. \n\n![Share the Photo](https://lh3.googleusercontent.com/igUQs037w9IJbdCqKIjtwfiQnF3bhsNfH5Sq7b5PCUXc5rnoqW1Dqy7DrhvD_r1UvtWaS40JY_VcRcbgDgy5cJMOTOxnV7ZAj3NTsE8Z2V-PZP-kJf7WlB24JPJVzRKibx7RrGul6ivDOT57ggH5c4772lztyBBWVpIVDAD1Q0T-5qZIcvfWKjLmruujHRaGKXyaCZRaHS5HA7gmqH8aFMWpPdbuZ9Jh2Zv7wU34BQeAXuQxYH69GSZhnWRXH-L_DTn7_OrYxPKWRtffp3C5Fj5yLnlX3T_fpgPFdOxquXtViinvSBHjPXG-RcKZQ2Kdn82bNAj6quB6CyrT7m0OtB1FSJiSO2f_bpKpObjgGNcfiuDqYxbreNtVP5JWYS6lqwB-0mdUHA0zdRMPO7CUEYS6flLZT7EUZot5jJFdmHM9zJZK2rpQDBl9qNnzh55RZjYmFzuIZdrJGbYoo0OabCaqh6HgNOQ9y8vnfUwdWGRm1CtNX4NA_jWDcVzq3KSb8Fhy2tBj5bof0YWKMNZpmShAQFIrEL0IL_-Pl4ksSSW5NCQSAqMeed-99jVjm2ZYXySjiCT_QPIAqf2d7uhigox1bAU7IbDH8hTN1uNHqos8C818ntEL9hM5Z00ojMYe0uzdn34K-co1UFqPg08K8kxCTd1Zo2tA4uJHd90GmNM=w400-no \"Share the Photo\")\n\n\nFrom the options available, select \"Get Link.\" Note, this link is a permanent, public page on which your photo can be found, but it is still NOT the link to your photo.\n\n![Get Link](https://lh3.googleusercontent.com/J_IrEpOZ1JXFSvgWVyGsMERRHEq-w5isViX86Hz318NEbJ4pK-nwbZMYmutFMTcNhH2es5LUYQAwn25cI7EHT95AOwO4oeNbGlDGmaIpxxcXrpEaCkjELYbQIINj3WMKV_8IF7Z-gKSjdUb4LqGsfiNywmedM4fNDCFXpAKocewvPVjqf_g22XV_Xb0PV67fm3fddsyiUABNkk0eOsYWN7CcwkKIaAeXCqGR-CwU2OHDAQRJl5FutpEKKQqCB3UFV7DMS3gjqU9LU2xMf4LZZH5AR0-HPwFzF9nEOkepzALNTmttMw302pFQhKpGw5jEY1-LaLaxc7zX0R_loBRTfsRZFRy3G58mhJEysZG-x6mdO-NDoUd5p5gjTEnNbYNvFzt5TMxNdRjranPxjQXofgrFD-DFrErMBd7ITHoA2M5SxbujMLT_W307aIlYjRCP1Mz_qsjvz_dhNOXq1J1rG93bMagM5vTtBnx7DPNMvyxCZGCWpOBkAQ6__Wl3LWm4g-09UzPn1asDSV2vsaOI-x9BTsVapumLsAAzvV8gHsyOpE9TkBFnmDkrnh43vyf_aVrgVnCqEceVMgCDN_hzZ0-kXUTVzfmxLDSgy_mFP46z54ompnUEcY0MQa6aukICXsocfq1JESrqiqBXe4AEaGvTBFD6QCQJfIaeLNHIglQ=w400-no \"Get Link\")\n\n\n### Step 3: Click the link to visit that Photo's \"shared album\" page\n\n![Click that Link](https://lh3.googleusercontent.com/KRcTbWgQa_qfsUu-9jN4emZKLjwYfdQFBw53V4BDofad3br5DCiK2kycTkLHeggZlmHSfqDqt1ZftN_J2pX10MTotpTAq0gCjF-I6LgNn1gkIexNXR5G1mPWL0JrjZfJuAGT8I-wSpJkum2_Quz8Qh7lwZb7ZvaaIUBx1BkQbFXFYxaJYDrLnuQ-L_jngMbsL6S29HB3ljsO2KTjgCXs3Aoz87gXh7oJSiDyFF11ipQrUW8Bj2zMAF3L3idIs69XkurLfmiPYBmDBkpm9FXuKOzFeZEUskLTZhRGOXh72tNEG59llRwFWoz3a2qUSUscvYtvhPnWtlThikHEUwpziZ0zQjr0mzzfv2X_nQS2apgVgd9Tne2H1y7pHdHqisXw1eIWWhtpB9w8PJVb5XKwKKtsoRcU8ncEYgpxUZUNIjhAf1G4kZ6SVFV1lhJIOYeJtZ5MNSb6FjgvJx5uLTmrzPw4FrgKO9-2AVvzq8W9nCF6ec9Bvv6dY1Me4atNqbFaSaMD4czx-gDpTCdYFquOhLdC7eSOGHF0nKqESPit7Q8lt-K2y9UaEc_q0v3eRfj-sueIPwnykVNXwd4rzb0Gmg6-KJKF_HyBzvSqno_clKZQokLM-qaEtoRGCuTeAyX6l6DpLXBZExgNqDlfqWOeakDOeUyXPKwucCyeCm7vcUY=w400-no \"Click That Link\")\n\n\nThis page will look like a photo album that only has one photo in it.\n\n![Superflous Album](https://lh3.googleusercontent.com/QQYzD325qkZQZyiOeIcAoJU19zmy1Rykr4vsHGgpfV4OXLdDKHoCn08FLMAu5wmtOYah2BtOmXorTH9jotyY2uqqnN5Rn7sAGaURH4cysM8Dpf7MtX0LCVTi9_rKBcrBIU-bYZ_5PN_V9gvtr9jcxrwx5Pv7vYL2nxGCFfCrDLCLzF6_eVFVoSXKB7j4asSF33rVMfu4sLDxcAiABAKx2K5W_vqZPoJZ5zFS9PXfZiHcefst7Sgru0tP75EzRxy1kx-lEYT6vA10yfqkr-ISj0gMDdAffV9lrOeCnJpqloMH2NaImBtDOk5k-bL6QcT97fkHAtqjdLescH_s6exQKDLrcrTRCF5zTnE_hmLACsibzT6X1l_kxTEgK5Nh7jyTheutXi1Sl2A4HZJi0MEox7AYgyirfgGv-aibabv3BAbf0CuFE_5XgLmhrFSpHtbjsSIX1DmQhtbDvp3xcWL66jAVoCv2xUqC3kWUor1E5FRqdjiJ0rnNyBvwZbkHX3fZVt16Wgvxyn-uawFYb7blVH6FZng1NPpXCYA6GT-TcrUFzkRxP_Hf-I2ZspjBRt7mQPG5Uys60SCeK3wo3An2YraX-Zq4V2-7FeCsgqWTCNIPJugnbLpG6TwazMynFiiAOcUPGAft4f4raQLzGUF6vTF05YHgd8U0SctDmA2mNu4=w400-no \"Superfluous Album\")\n\n### Step 4: Click on your photo in this \"shared album\" to view the individual Photo \n\nWe've done all this to basically get back to Step 1. (Thanks, Google!) The difference is that now you are viewing this single photo *in a shared album* instead of *in your personal Google Photos stream*. The page you are currently on has been designed to be public, whereas when you view your own Google Photos account, you are viewing private photos.\n\n### Step 5: Copy the Photo's image link (not the page's link)\n\n![Right Click to Copy Image Address](https://lh3.googleusercontent.com/2oirAWFFHa4Id1k0Qp3lXswwV6SCngz5HIzWG4mhKPw2IHU_KYw3pV7_kmHRc0W8wrN1CI8R1kqx3i-xJqYRVhX3Y-XcreDRDW4VSXsPyJUBbueLPf6-tpz_NHgW5SiV-NweBXywr7WEQMTMvR_rOgtEDKp_EvvfQmH645WRPmCc_vuqCT4-JwROlmKc9ZV6D0WYTBe7ceRTAM8VbhhTFoOWKJYl9QiCUpmFxIC3qGtlNmTFqBaTwToNJ1UJMW-aUCZ4d3s4x63IQWXKYhXh_IiOXqGq8oSxfDixh0jULXDnIIMP2gB5YVfvgBorfmn8icpWyR84kWb0EG84QOmz32zCqlbxWzvoPeU6Vz1TmwMZWSZ85XY-CAknYh8caSRGP1Cm6Xk8r3DYTlVyEMH42jSghuJeD0ZtQlkpLpHE4gQQNxVRajIlnLZPnAfnPuAZtfThJ_JA9fBhBBzSUpJEVGZwffsjV21Hl9Sc5HwdOUJtyQTu2bi2QnoUVuUwTGXr2kayg73JyAikYZtwShFZtJSFTUKRvB6eQTIebWmt4thKuOFkNSw3O9QQkW7QHb8Qb7czHhDv3c-mGYHZUFHnzsSJGznK3rL6ojuBW-HkdnzC5QayHH04USe2q0OQJOYyGVdnTUMvYl-OB_PN64-cnNWp4ATBdkQvnZoq7svTAgU=w400-no \"Right click to copy image address\")\n\nRight click on the image itself, and select \"Copy Image Address.\" The direct link for that photo will be copied to your clipboard, and can now be pasted anywhere.\n\n(Alternatively, you can select \"Open image in a new tab\" and the URL in the address bar of *that* tab will be the direct link to the photo.)\n\n### Step 6: Paste the image link\n\nPaste that URL into an html tag, a message board or forum post as you would use any other image link.\n\n### Notes\n\n + The URL is <em>long</em> and <em>ugly</em>! If you need to share this link, or use the text for this link, consider shortening it or \"hiding\" it behind alternative display text with this long URL as the attached link.\n + The URL (shown in an html tag as an example) is of the form:\n\n```\n<img src=\"https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no\"/>\n```\n  + You can resize the image by changing the pixel values after \"h\" and/or \"w\" before the \"-no\" (Do not erase the \"-no\" by mistake!)\n  + If your forum or message board demands an image URL ending in .jpg, then you can add \"?.jpg\" after the \"-no\" and this very often works. Your URL will then be of the form:\n  \n```\n<img src=\"https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no?.jpg\"/>\n```\n\n```\nhttps://lh3.googleusercontent.com/VERYlongstring=w363-h644-no?.jpg\n```\n\nOf course, what we *really* need is a darn button or menu option for \"click to embed/get direct link.\" Perhaps this is coming, at which point we can all have a good laugh about how near impossible it was to *use* all these photos Google so carefully collected and made searchable.\n\nBut, until Google Photos changes how it works it yet again, happy sharing, direct-linking and embedding!\n\n\n*Originally Posted on 2016-02-19, but Google Photos URL structure changed and the post was updated in 2017*","src/content/docs/guides/direct-link-for-posting-google-photos-image.md","90ade73b9481b5d6",{html:1493,metadata:1494},"<p>One issue (among many!) that people are having with the transition from Picasa Web Albums to Google Photos is how to directly link to a photo from Google Photos.</p>\n<!-- more -->\n<h2>2019-12-29 Update:</h2>\n<p>Since people are <em>still</em> using this page to figure out how to post Google Photos images to message boards, I thought I’d leave a more current update. The method below <em>still</em> works, and is <em>still</em> what we have to do in order to post a photo that’s in your Google Photos account to a message board. (Shout out to all the various message board peeps who end up here! I love finding that new message boards have linked here!)</p>\n<p>Some of you rightly point out that Google Photo links expire, but, <em>not if you create your link exactly this way</em>. The images immediately below (in my 2017 update) were posted in <em>2017</em>. If they’re still there, then this method still works! If I find a better way to streamline the process for you, I’ll update it. But until then, if you can see my images below, then you’ll know that links set up this way have not expired yet.</p>\n<p>Let’s see what photo updates 2020 brings! Happy message board posting! Keep sharing pics of your cars, model trains, knitting projects and all of your other wonderful hobbies!</p>\n<h2 id=\"2017-04-21-update\">2017-04-21 Update:</h2>\n<p>Here are my updated (and simplified!) instructions for getting an image’s direct link in Google Photos. This works for using your Google Photos images in other places around the web: blogs, forum and message board posts as well as sharing a direct link with a friend.</p>\n<h3 id=\"step-1-browse-to-the-photos-page\">Step 1: Browse to the Photo’s page</h3>\n<p>On the Google Photos website, click on the photo you want to share, post or use. This will take you to the individual photo’s page, with a black background. But note, this does not give you a link to the photo itself.</p>\n<h3 id=\"step-2-share-the-photo\">Step 2: Share the Photo</h3>\n<p>Choose the 3-dot share icon in the upper right of the screen to “share” the photo.</p>\n<p><img src=\"https://lh3.googleusercontent.com/igUQs037w9IJbdCqKIjtwfiQnF3bhsNfH5Sq7b5PCUXc5rnoqW1Dqy7DrhvD_r1UvtWaS40JY_VcRcbgDgy5cJMOTOxnV7ZAj3NTsE8Z2V-PZP-kJf7WlB24JPJVzRKibx7RrGul6ivDOT57ggH5c4772lztyBBWVpIVDAD1Q0T-5qZIcvfWKjLmruujHRaGKXyaCZRaHS5HA7gmqH8aFMWpPdbuZ9Jh2Zv7wU34BQeAXuQxYH69GSZhnWRXH-L_DTn7_OrYxPKWRtffp3C5Fj5yLnlX3T_fpgPFdOxquXtViinvSBHjPXG-RcKZQ2Kdn82bNAj6quB6CyrT7m0OtB1FSJiSO2f_bpKpObjgGNcfiuDqYxbreNtVP5JWYS6lqwB-0mdUHA0zdRMPO7CUEYS6flLZT7EUZot5jJFdmHM9zJZK2rpQDBl9qNnzh55RZjYmFzuIZdrJGbYoo0OabCaqh6HgNOQ9y8vnfUwdWGRm1CtNX4NA_jWDcVzq3KSb8Fhy2tBj5bof0YWKMNZpmShAQFIrEL0IL_-Pl4ksSSW5NCQSAqMeed-99jVjm2ZYXySjiCT_QPIAqf2d7uhigox1bAU7IbDH8hTN1uNHqos8C818ntEL9hM5Z00ojMYe0uzdn34K-co1UFqPg08K8kxCTd1Zo2tA4uJHd90GmNM=w400-no\" alt=\"Share the Photo\" title=\"Share the Photo\"></p>\n<p>From the options available, select “Get Link.” Note, this link is a permanent, public page on which your photo can be found, but it is still NOT the link to your photo.</p>\n<p><img src=\"https://lh3.googleusercontent.com/J_IrEpOZ1JXFSvgWVyGsMERRHEq-w5isViX86Hz318NEbJ4pK-nwbZMYmutFMTcNhH2es5LUYQAwn25cI7EHT95AOwO4oeNbGlDGmaIpxxcXrpEaCkjELYbQIINj3WMKV_8IF7Z-gKSjdUb4LqGsfiNywmedM4fNDCFXpAKocewvPVjqf_g22XV_Xb0PV67fm3fddsyiUABNkk0eOsYWN7CcwkKIaAeXCqGR-CwU2OHDAQRJl5FutpEKKQqCB3UFV7DMS3gjqU9LU2xMf4LZZH5AR0-HPwFzF9nEOkepzALNTmttMw302pFQhKpGw5jEY1-LaLaxc7zX0R_loBRTfsRZFRy3G58mhJEysZG-x6mdO-NDoUd5p5gjTEnNbYNvFzt5TMxNdRjranPxjQXofgrFD-DFrErMBd7ITHoA2M5SxbujMLT_W307aIlYjRCP1Mz_qsjvz_dhNOXq1J1rG93bMagM5vTtBnx7DPNMvyxCZGCWpOBkAQ6__Wl3LWm4g-09UzPn1asDSV2vsaOI-x9BTsVapumLsAAzvV8gHsyOpE9TkBFnmDkrnh43vyf_aVrgVnCqEceVMgCDN_hzZ0-kXUTVzfmxLDSgy_mFP46z54ompnUEcY0MQa6aukICXsocfq1JESrqiqBXe4AEaGvTBFD6QCQJfIaeLNHIglQ=w400-no\" alt=\"Get Link\" title=\"Get Link\"></p>\n<h3 id=\"step-3-click-the-link-to-visit-that-photos-shared-album-page\">Step 3: Click the link to visit that Photo’s “shared album” page</h3>\n<p><img src=\"https://lh3.googleusercontent.com/KRcTbWgQa_qfsUu-9jN4emZKLjwYfdQFBw53V4BDofad3br5DCiK2kycTkLHeggZlmHSfqDqt1ZftN_J2pX10MTotpTAq0gCjF-I6LgNn1gkIexNXR5G1mPWL0JrjZfJuAGT8I-wSpJkum2_Quz8Qh7lwZb7ZvaaIUBx1BkQbFXFYxaJYDrLnuQ-L_jngMbsL6S29HB3ljsO2KTjgCXs3Aoz87gXh7oJSiDyFF11ipQrUW8Bj2zMAF3L3idIs69XkurLfmiPYBmDBkpm9FXuKOzFeZEUskLTZhRGOXh72tNEG59llRwFWoz3a2qUSUscvYtvhPnWtlThikHEUwpziZ0zQjr0mzzfv2X_nQS2apgVgd9Tne2H1y7pHdHqisXw1eIWWhtpB9w8PJVb5XKwKKtsoRcU8ncEYgpxUZUNIjhAf1G4kZ6SVFV1lhJIOYeJtZ5MNSb6FjgvJx5uLTmrzPw4FrgKO9-2AVvzq8W9nCF6ec9Bvv6dY1Me4atNqbFaSaMD4czx-gDpTCdYFquOhLdC7eSOGHF0nKqESPit7Q8lt-K2y9UaEc_q0v3eRfj-sueIPwnykVNXwd4rzb0Gmg6-KJKF_HyBzvSqno_clKZQokLM-qaEtoRGCuTeAyX6l6DpLXBZExgNqDlfqWOeakDOeUyXPKwucCyeCm7vcUY=w400-no\" alt=\"Click that Link\" title=\"Click That Link\"></p>\n<p>This page will look like a photo album that only has one photo in it.</p>\n<p><img src=\"https://lh3.googleusercontent.com/QQYzD325qkZQZyiOeIcAoJU19zmy1Rykr4vsHGgpfV4OXLdDKHoCn08FLMAu5wmtOYah2BtOmXorTH9jotyY2uqqnN5Rn7sAGaURH4cysM8Dpf7MtX0LCVTi9_rKBcrBIU-bYZ_5PN_V9gvtr9jcxrwx5Pv7vYL2nxGCFfCrDLCLzF6_eVFVoSXKB7j4asSF33rVMfu4sLDxcAiABAKx2K5W_vqZPoJZ5zFS9PXfZiHcefst7Sgru0tP75EzRxy1kx-lEYT6vA10yfqkr-ISj0gMDdAffV9lrOeCnJpqloMH2NaImBtDOk5k-bL6QcT97fkHAtqjdLescH_s6exQKDLrcrTRCF5zTnE_hmLACsibzT6X1l_kxTEgK5Nh7jyTheutXi1Sl2A4HZJi0MEox7AYgyirfgGv-aibabv3BAbf0CuFE_5XgLmhrFSpHtbjsSIX1DmQhtbDvp3xcWL66jAVoCv2xUqC3kWUor1E5FRqdjiJ0rnNyBvwZbkHX3fZVt16Wgvxyn-uawFYb7blVH6FZng1NPpXCYA6GT-TcrUFzkRxP_Hf-I2ZspjBRt7mQPG5Uys60SCeK3wo3An2YraX-Zq4V2-7FeCsgqWTCNIPJugnbLpG6TwazMynFiiAOcUPGAft4f4raQLzGUF6vTF05YHgd8U0SctDmA2mNu4=w400-no\" alt=\"Superflous Album\" title=\"Superfluous Album\"></p>\n<h3 id=\"step-4-click-on-your-photo-in-this-shared-album-to-view-the-individual-photo\">Step 4: Click on your photo in this “shared album” to view the individual Photo</h3>\n<p>We’ve done all this to basically get back to Step 1. (Thanks, Google!) The difference is that now you are viewing this single photo <em>in a shared album</em> instead of <em>in your personal Google Photos stream</em>. The page you are currently on has been designed to be public, whereas when you view your own Google Photos account, you are viewing private photos.</p>\n<h3 id=\"step-5-copy-the-photos-image-link-not-the-pages-link\">Step 5: Copy the Photo’s image link (not the page’s link)</h3>\n<p><img src=\"https://lh3.googleusercontent.com/2oirAWFFHa4Id1k0Qp3lXswwV6SCngz5HIzWG4mhKPw2IHU_KYw3pV7_kmHRc0W8wrN1CI8R1kqx3i-xJqYRVhX3Y-XcreDRDW4VSXsPyJUBbueLPf6-tpz_NHgW5SiV-NweBXywr7WEQMTMvR_rOgtEDKp_EvvfQmH645WRPmCc_vuqCT4-JwROlmKc9ZV6D0WYTBe7ceRTAM8VbhhTFoOWKJYl9QiCUpmFxIC3qGtlNmTFqBaTwToNJ1UJMW-aUCZ4d3s4x63IQWXKYhXh_IiOXqGq8oSxfDixh0jULXDnIIMP2gB5YVfvgBorfmn8icpWyR84kWb0EG84QOmz32zCqlbxWzvoPeU6Vz1TmwMZWSZ85XY-CAknYh8caSRGP1Cm6Xk8r3DYTlVyEMH42jSghuJeD0ZtQlkpLpHE4gQQNxVRajIlnLZPnAfnPuAZtfThJ_JA9fBhBBzSUpJEVGZwffsjV21Hl9Sc5HwdOUJtyQTu2bi2QnoUVuUwTGXr2kayg73JyAikYZtwShFZtJSFTUKRvB6eQTIebWmt4thKuOFkNSw3O9QQkW7QHb8Qb7czHhDv3c-mGYHZUFHnzsSJGznK3rL6ojuBW-HkdnzC5QayHH04USe2q0OQJOYyGVdnTUMvYl-OB_PN64-cnNWp4ATBdkQvnZoq7svTAgU=w400-no\" alt=\"Right Click to Copy Image Address\" title=\"Right click to copy image address\"></p>\n<p>Right click on the image itself, and select “Copy Image Address.” The direct link for that photo will be copied to your clipboard, and can now be pasted anywhere.</p>\n<p>(Alternatively, you can select “Open image in a new tab” and the URL in the address bar of <em>that</em> tab will be the direct link to the photo.)</p>\n<h3 id=\"step-6-paste-the-image-link\">Step 6: Paste the image link</h3>\n<p>Paste that URL into an html tag, a message board or forum post as you would use any other image link.</p>\n<h3 id=\"notes\">Notes</h3>\n<ul>\n<li>The URL is <em>long</em> and <em>ugly</em>! If you need to share this link, or use the text for this link, consider shortening it or “hiding” it behind alternative display text with this long URL as the attached link.</li>\n<li>The URL (shown in an html tag as an example) is of the form:</li>\n</ul>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.tm3va.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">&#x3C;img src=\"https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no\"/></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"<img src=&#x22;https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no&#x22;/>\"><div></div></button></div></figure></div>\n<ul>\n<li>You can resize the image by changing the pixel values after “h” and/or “w” before the “-no” (Do not erase the “-no” by mistake!)</li>\n<li>If your forum or message board demands an image URL ending in .jpg, then you can add “?.jpg” after the “-no” and this very often works. Your URL will then be of the form:</li>\n</ul>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">&#x3C;img src=\"https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no?.jpg\"/></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"<img src=&#x22;https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no?.jpg&#x22;/>\"><div></div></button></div></figure></div>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no?.jpg</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"https://lh3.googleusercontent.com/VERYlongstring=w363-h644-no?.jpg\"><div></div></button></div></figure></div>\n<p>Of course, what we <em>really</em> need is a darn button or menu option for “click to embed/get direct link.” Perhaps this is coming, at which point we can all have a good laugh about how near impossible it was to <em>use</em> all these photos Google so carefully collected and made searchable.</p>\n<p>But, until Google Photos changes how it works it yet again, happy sharing, direct-linking and embedding!</p>\n<p><em>Originally Posted on 2016-02-19, but Google Photos URL structure changed and the post was updated in 2017</em></p>",{headings:1495,localImagePaths:1520,remoteImagePaths:1521,frontmatter:1522,imagePaths:1523},[1496,1499,1502,1505,1508,1511,1514,1517],{depth:75,slug:1497,text:1498},"2017-04-21-update","2017-04-21 Update:",{depth:85,slug:1500,text:1501},"step-1-browse-to-the-photos-page","Step 1: Browse to the Photo’s page",{depth:85,slug:1503,text:1504},"step-2-share-the-photo","Step 2: Share the Photo",{depth:85,slug:1506,text:1507},"step-3-click-the-link-to-visit-that-photos-shared-album-page","Step 3: Click the link to visit that Photo’s “shared album” page",{depth:85,slug:1509,text:1510},"step-4-click-on-your-photo-in-this-shared-album-to-view-the-individual-photo","Step 4: Click on your photo in this “shared album” to view the individual Photo",{depth:85,slug:1512,text:1513},"step-5-copy-the-photos-image-link-not-the-pages-link","Step 5: Copy the Photo’s image link (not the page’s link)",{depth:85,slug:1515,text:1516},"step-6-paste-the-image-link","Step 6: Paste the image link",{depth:85,slug:1518,text:1519},"notes","Notes",[],[],{title:1483,description:1484,excerpt:1488},[],"blog/dynamic-routing-tag-pages-in-astro",{id:1524,data:1526,body:1536,filePath:1537,digest:1538,rendered:1539},{title:1527,description:1528,editUrl:23,head:1529,template:42,sidebar:1530,pagefind:23,draft:14,authors:1532,date:1533,excerpt:1534,tags:1535},"Creating individual tag pages in Astro via dynamic routes","Building pages to view your blog posts by tags.",[],{hidden:14,attrs:1531},{},[166],["Date","2022-01-12T00:00:00.000Z"],"Now that I'm on a roll with dynamic routing via getStaticPaths() in Astro, I'm checking the next item off my Astro blog wish list: pages to display blog posts by tag.",[929,928],"One issue I was struggling to fully understand regarding `getStaticPaths()` in Astro was... why?\n\nAs I \"sneak-previewed\" when I described [adding an RSS feed to this Astro blog](https://www.rainsberger.ca/posts/rss-in-astro/), generating a page for each `tag` from all my blog posts can be done with **dynamic routing**. This is the concept I set out to learn to start the new year, since thus far, all my pages have been created via Astro's automatic **static routing** which only requires placing `.md` and/or `.astro` files somewhere under the `src/pages/` path.\n\n## Dynaming Routing to create pages that... \"aren't there\"\n\nThe way dynamic routing first made sense to me was to think of using it for \"creating pages that aren't there.\" (This initial way of thinking of it has helped me understand it more fully. But, this was how it started.)\n\nIt seemed weird to me to (need to?) use dynamic routing to eventually end up at `rainsberger.ca/posts/my-first-post` because... it already existed via static routing! If `src/pages/posts/my-first-post.md` (or `src/pages/posts/my-first-post.astro`) exists, then Astro creates that url automatically and I can totally \"get to\" a page for that blog post. I didn't understand examples I found about creating post pages/urls dynamically because I didn't understand *why* I'd need to do that. (So, I think my brain kind of turned off in protest.)\n\n(It also probably didn't help (me) that `getStaticPaths()` is also used elsewhere, and isn't just an Astro thing. So, I never thought to look outside of Astro to figure out what this was, nor did I have prior experience with it to bring to Astro and be like, \"Oh, cool. So just like how I do this thing in NextJs...\")\n\nSo, the first thing that helped me get started with Astro's dynamic routing was to envision the specific use case of **making a page that wasn't automatically created statically because I hadn't put a file somewhere**.\n\nI had `src/pages/posts/my-first-post.md` but I did NOT have anything like `src/pages/posts/tags/blogging.md`. However, I understood that **dynamic routing** would let me make pages at those URLS even without those files.\n\n## Creating a 'Tag List' page\n\nI *did* know how to make `src/pages/tags/index.astro`, and I didn't even need `getStaticPaths()` to do it. So, I started there.\n\nThis page is **statically** generated, since it's an Astro page component file somewhere under `/src/pages`. Its content uses `Astro.fetchContent()`, just like my Blog Page or my Full Post Archive page that fetch information about all my Markdown blog post files (ie: content from the Markdown front matter, including its array of tags).\n\nThe difference is that this time I need to create a `Set` of my tags, so that each tag is only listed once. Then I can display each element of the set.\n\nSo with a bit of JavaScript in my Astro front matter, this page doesn't require a ton of heavy lifting:\n\n```astro\n// src/pages/tags/index.astro\n\n---\nimport BaseLayout from '../../layouts/BaseLayout.astro';\nlet title = 'Tags'\n\nconst allPosts = await Astro.fetchContent('../posts/*.md');\nconst tags = [...new Set([].concat.apply([],allPosts.map(post => post.tags)))]\n---\n<BaseLayout title={title}>\n    <main>\n        <h1>Tags</h1>\n        <div style=\"display: flex; flex-wrap: wrap; margin: 0 auto\">\n            {tags.sort().map((tag) => (\n                <p><a href={`/tags/${tag}`}>{tag}</a></p>\n            ))}\n        </div>\n    </main>\n</BaseLayout>\n```\n\n## Creating individual tag pages\n\nBut now for making a page that *doesn't exist*! Magic!\n\n### Page slugs / url routes\n\nTo create url routes of the form `rainsberger.ca/tags/tagname`, I need to create `src/pages/tags/[tag].astro` The `[tag]` in brackets indicates that this one file will create dynamic routes for multiple different tag names.\n\n### Page Layout\n\nBecause I'm making pages, I still need to structure this `.astro` file like a proper Astro Page Component: it either needs full `<html></html>` or needs an Astro Layout. Since I want this page to look like the rest of my pages, I'll import in the front matter, then wrap my content in my regular `<BaseLayout>` component.\n\n### Page Content\n\nThe content I want to render is some information about each of my *blog posts* that happen to be tagged with *one specific tag*. So, I'll need a way to access all my posts (even if I don't display all of them on a particular page).\n\n### Page Logic\n\nThis page needs to:\n\n- fetch info about all my posts\n- sort my posts in date order\n- create a set of tags used from all the posts\n\nAnd then this page needs to return (for rendering as HTML):\n\n- an array of *tag name (`params`)/posts with that tag name* (`props`) objects\n    \n## Astro Page Component\n\nEverything except the `getStaticPaths()` function looks very much like an Astro page I've created before where I've fetched content from my Markdown posts and rendered them to the page.\n\n```astro\n// src/pages/tags/[tag].astro\n\n---\nimport BaseLayout from '../../layouts/BaseLayout.astro';\n\n// here's where getStaticPaths() will go! \n\nconst { posts } = Astro.props;\nconst { tag } = Astro.request.params;\n\nlet title = tag; \n---\n<BaseLayout title={title}>\n    <main>\n        <p>Posts tagged with {title}</p>\n        {posts.map(post => \n            <p>{post.date} - <a href={post.url}>{post.title}</a></p>\n        )}\n        <hr />\n        <p><a href =\"/tags/\">See all tags...</a></p>\n    </main>\n</BaseLayout>\n```\n\nOnce we get our `tag` and `posts` from our `getStaticPaths()` function, we can create any content layout we want using that tag name, and all the content normally available from a Markdown post's front matter like title, date, url, description, hero image etc.\n\n## Using getStaticPaths() to fetch tag and post data\n\nThis function will do my fetching, sorting, creating and adding to a set of tags and return a set of filtered posts corresponding to each tag.\n\n```astro\n// (function to go inside src/pages/tags/[tag].astro)\n\nexport async function getStaticPaths({ }) {\n  const allPosts = Astro.fetchContent('../posts/*.md');\n  const sortedPosts = allPosts.sort((a, b) => new Date(b.date) - new Date(a.date));\n  const allTags = new Set();\n  sortedPosts.map(post => {\n      post.tags && post.tags.map(tag => allTags.add(tag))\n  })\n  \n  return Array.from(allTags).map((tag) => {\n    const filteredPosts = sortedPosts.filter((post) => post.tags.includes(tag))\n    return {\n      params: { tag },\n      props: {\n        posts: filteredPosts\n      }\n    };\n  });\n}\n```\n\nAnd now... yes, we have tags! You can [see the list of tags](/tags) and you can click on any tag to be taken to its tag page.\n\n## Linking to tag pages elsewhere on the site\nYou might notice that on this post's page itself, you can see a list of clickable tags generated from its front matter: `tags: [\"blogging\", \"astro\"]`. This is an array that can be used in any `.astro` component that fetches your front matter data. \n\nNow that I have tag pages, I can update my `MarkdownPostLayout.astro` so that each post displays its own linked tags. Here's a simplified version of this nested layout, which is itself inside my `<BaseLayout>` (so that these posts look like all my other pages). I'm displying each tag, linked to its own tag page, between the posts title and the author/date.\n\n```astro\n// src/layouts/MarkdownPostLayout.astro\n\n---\nimport BaseLayout from '../layouts/BaseLayout.astro'\nconst {content} = Astro.props;\n---\n<BaseLayout title = {content.title}>\n    <main>\n        <h1>{content.title}</h1>\n        <div style=\"display:flex;\">\n            {content.tags.map((tag) => <p><a href={`/tags/${tag}`}>{tag}</a></p>)}\n        </div>\n        <p>Written by: {content.author} on {postDate}</p>\n        <article>\n          <slot />\n        </article>\n        <p><a href=\"/posts\">See more posts ...</a></p>\n    </main>\n</BaseLayout>\n```\n\nSimilarly, I updated both my main Blog page showing my recent posts, as well as my full Post Archive listing to include these linked tags along with other post content.\n\nI think it's safe to say you can now find tags all over the place on this blog! So, you have no excuse for not checking them out.  ;)","src/content/docs/blog/dynamic-routing-tag-pages-in-astro.md","08a33f5374b6433f",{html:1540,metadata:1541},"<p>One issue I was struggling to fully understand regarding <code dir=\"auto\">getStaticPaths()</code> in Astro was… why?</p>\n<p>As I “sneak-previewed” when I described <a href=\"https://www.rainsberger.ca/posts/rss-in-astro/\">adding an RSS feed to this Astro blog</a>, generating a page for each <code dir=\"auto\">tag</code> from all my blog posts can be done with <strong>dynamic routing</strong>. This is the concept I set out to learn to start the new year, since thus far, all my pages have been created via Astro’s automatic <strong>static routing</strong> which only requires placing <code dir=\"auto\">.md</code> and/or <code dir=\"auto\">.astro</code> files somewhere under the <code dir=\"auto\">src/pages/</code> path.</p>\n<h2 id=\"dynaming-routing-to-create-pages-that-arent-there\">Dynaming Routing to create pages that… “aren’t there”</h2>\n<p>The way dynamic routing first made sense to me was to think of using it for “creating pages that aren’t there.” (This initial way of thinking of it has helped me understand it more fully. But, this was how it started.)</p>\n<p>It seemed weird to me to (need to?) use dynamic routing to eventually end up at <code dir=\"auto\">rainsberger.ca/posts/my-first-post</code> because… it already existed via static routing! If <code dir=\"auto\">src/pages/posts/my-first-post.md</code> (or <code dir=\"auto\">src/pages/posts/my-first-post.astro</code>) exists, then Astro creates that url automatically and I can totally “get to” a page for that blog post. I didn’t understand examples I found about creating post pages/urls dynamically because I didn’t understand <em>why</em> I’d need to do that. (So, I think my brain kind of turned off in protest.)</p>\n<p>(It also probably didn’t help (me) that <code dir=\"auto\">getStaticPaths()</code> is also used elsewhere, and isn’t just an Astro thing. So, I never thought to look outside of Astro to figure out what this was, nor did I have prior experience with it to bring to Astro and be like, “Oh, cool. So just like how I do this thing in NextJs…”)</p>\n<p>So, the first thing that helped me get started with Astro’s dynamic routing was to envision the specific use case of <strong>making a page that wasn’t automatically created statically because I hadn’t put a file somewhere</strong>.</p>\n<p>I had <code dir=\"auto\">src/pages/posts/my-first-post.md</code> but I did NOT have anything like <code dir=\"auto\">src/pages/posts/tags/blogging.md</code>. However, I understood that <strong>dynamic routing</strong> would let me make pages at those URLS even without those files.</p>\n<h2 id=\"creating-a-tag-list-page\">Creating a ‘Tag List’ page</h2>\n<p>I <em>did</em> know how to make <code dir=\"auto\">src/pages/tags/index.astro</code>, and I didn’t even need <code dir=\"auto\">getStaticPaths()</code> to do it. So, I started there.</p>\n<p>This page is <strong>statically</strong> generated, since it’s an Astro page component file somewhere under <code dir=\"auto\">/src/pages</code>. Its content uses <code dir=\"auto\">Astro.fetchContent()</code>, just like my Blog Page or my Full Post Archive page that fetch information about all my Markdown blog post files (ie: content from the Markdown front matter, including its array of tags).</p>\n<p>The difference is that this time I need to create a <code dir=\"auto\">Set</code> of my tags, so that each tag is only listed once. Then I can display each element of the set.</p>\n<p>So with a bit of JavaScript in my Astro front matter, this page doesn’t require a ton of heavy lifting:</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.tm3va.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/tags/index.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> BaseLayout </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../../layouts/BaseLayout.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">let </span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">Tags</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">allPosts</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">fetchContent</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../posts/*.md</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">tags</span><span style=\"--0:#C792EA;--1:#8844AE\"> =</span><span style=\"--0:#D6DEEB;--1:#403F53\"> [</span><span style=\"--0:#7FDBCA;--1:#096E72\">...new</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">Set</span><span style=\"--0:#D6DEEB;--1:#403F53\">([]</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">concat</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">apply</span><span style=\"--0:#D6DEEB;--1:#403F53\">([],allPosts</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">(</span><span style=\"--0:#D7DBE0\">post</span><span style=\"--0:#D6DEEB\"> </span></span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">tags</span><span style=\"--0:#D6DEEB;--1:#403F53\">)))]</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">title</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">h1</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#D6DEEB;--1:#403F53\">Tags</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">h1</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">style</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">display: flex; flex-wrap: wrap; margin: 0 auto</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">            </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">tags</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">sort</span><span style=\"--0:#D6DEEB;--1:#403F53\">()</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">tag</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> (</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">                </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">>&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">/tags/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">tag</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">tag</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">>&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">            </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">))</span><span style=\"--0:#E2817F;--1:#B23834\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;/</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import BaseLayout from &#x27;../../layouts/BaseLayout.astro&#x27;;let title = &#x27;Tags&#x27;const allPosts = await Astro.fetchContent(&#x27;../posts/*.md&#x27;);const tags = [...new Set([].concat.apply([],allPosts.map(post => post.tags)))]---<BaseLayout title={title}>    <main>        <h1>Tags</h1>        <div style=&#x22;display: flex; flex-wrap: wrap; margin: 0 auto&#x22;>            {tags.sort().map((tag) => (                <p><a href={&#x60;/tags/${tag}&#x60;}>{tag}</a></p>            ))}        </div>    </main></BaseLayout>\"><div></div></button></div></figure></div>\n<h2 id=\"creating-individual-tag-pages\">Creating individual tag pages</h2>\n<p>But now for making a page that <em>doesn’t exist</em>! Magic!</p>\n<h3 id=\"page-slugs--url-routes\">Page slugs / url routes</h3>\n<p>To create url routes of the form <code dir=\"auto\">rainsberger.ca/tags/tagname</code>, I need to create <code dir=\"auto\">src/pages/tags/[tag].astro</code> The <code dir=\"auto\">[tag]</code> in brackets indicates that this one file will create dynamic routes for multiple different tag names.</p>\n<h3 id=\"page-layout\">Page Layout</h3>\n<p>Because I’m making pages, I still need to structure this <code dir=\"auto\">.astro</code> file like a proper Astro Page Component: it either needs full <code dir=\"auto\">&#x3C;html>&#x3C;/html></code> or needs an Astro Layout. Since I want this page to look like the rest of my pages, I’ll import in the front matter, then wrap my content in my regular <code dir=\"auto\">&#x3C;BaseLayout></code> component.</p>\n<h3 id=\"page-content\">Page Content</h3>\n<p>The content I want to render is some information about each of my <em>blog posts</em> that happen to be tagged with <em>one specific tag</em>. So, I’ll need a way to access all my posts (even if I don’t display all of them on a particular page).</p>\n<h3 id=\"page-logic\">Page Logic</h3>\n<p>This page needs to:</p>\n<ul>\n<li>fetch info about all my posts</li>\n<li>sort my posts in date order</li>\n<li>create a set of tags used from all the posts</li>\n</ul>\n<p>And then this page needs to return (for rendering as HTML):</p>\n<ul>\n<li>an array of <em>tag name (<code dir=\"auto\">params</code>)/posts with that tag name</em> (<code dir=\"auto\">props</code>) objects</li>\n</ul>\n<h2 id=\"astro-page-component\">Astro Page Component</h2>\n<p>Everything except the <code dir=\"auto\">getStaticPaths()</code> function looks very much like an Astro page I’ve created before where I’ve fetched content from my Markdown posts and rendered them to the page.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/tags/[tag].astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> BaseLayout </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../../layouts/BaseLayout.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5D6376\">// here's where getStaticPaths() will go!</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">posts</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">tag</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">request</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">params</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">let </span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">tag;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">title</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#D6DEEB;--1:#403F53\">Posts tagged with </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">posts</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">(</span><span style=\"--0:#D7DBE0\">post</span><span style=\"--0:#D6DEEB\"> </span></span><span style=\"--0:#C792EA;--1:#8844AE\">=></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">            </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">date</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\"> - </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">url</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">>&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#E2817F;--1:#B23834\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">hr</span><span style=\"--0:#7FDBCA\"> /></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">>&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> =</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">/tags/</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span><span style=\"--0:#D6DEEB;--1:#403F53\">See all tags...</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">>&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;/</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import BaseLayout from &#x27;../../layouts/BaseLayout.astro&#x27;;// here&#x27;s where getStaticPaths() will go!const { posts } = Astro.props;const { tag } = Astro.request.params;let title = tag;---<BaseLayout title={title}>    <main>        <p>Posts tagged with {title}</p>        {posts.map(post =>            <p>{post.date} - <a href={post.url}>{post.title}</a></p>        )}        <hr />        <p><a href =&#x22;/tags/&#x22;>See all tags...</a></p>    </main></BaseLayout>\"><div></div></button></div></figure></div>\n<p>Once we get our <code dir=\"auto\">tag</code> and <code dir=\"auto\">posts</code> from our <code dir=\"auto\">getStaticPaths()</code> function, we can create any content layout we want using that tag name, and all the content normally available from a Markdown post’s front matter like title, date, url, description, hero image etc.</p>\n<h2 id=\"using-getstaticpaths-to-fetch-tag-and-post-data\">Using getStaticPaths() to fetch tag and post data</h2>\n<p>This function will do my fetching, sorting, creating and adding to a set of tags and return a set of filtered posts corresponding to each tag.</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">// (function to go inside src/pages/tags/[tag].astro)</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">export async function getStaticPaths(</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">) </span><span style=\"--0:#E2817F;--1:#B23834\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">allPosts</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">fetchContent</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../posts/*.md</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">sortedPosts</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">allPosts</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">sort</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">a</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#D7DBE0;--1:#403F53\">b</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#C792EA;--1:#8844AE\"> => </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">Date</span><span style=\"--0:#D6DEEB;--1:#403F53\">(b</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">date</span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#C792EA;--1:#8844AE\"> - </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">Date</span><span style=\"--0:#D6DEEB;--1:#403F53\">(a</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">date</span><span style=\"--0:#D6DEEB;--1:#403F53\">));</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">allTags</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#7FDBCA;--1:#096E72\">new</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">Set</span><span style=\"--0:#D6DEEB;--1:#403F53\">();</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">sortedPosts</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">(</span><span style=\"--0:#D7DBE0\">post</span><span style=\"--0:#D6DEEB\"> </span></span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">tags</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">&#x26;&#x26;</span><span style=\"--0:#D6DEEB;--1:#403F53\"> post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">tags</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">(</span><span style=\"--0:#D7DBE0\">tag</span><span style=\"--0:#D6DEEB\"> </span></span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> allTags</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">add</span><span style=\"--0:#D6DEEB;--1:#403F53\">(tag))</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">})</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> Array</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\">(allTags)</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">tag</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">filteredPosts</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">sortedPosts</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">filter</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">post</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#C792EA;--1:#8844AE\"> => </span><span style=\"--0:#D6DEEB;--1:#403F53\">post</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">tags</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">includes</span><span style=\"--0:#D6DEEB;--1:#403F53\">(tag))</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">params: { tag },</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">props: {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">posts: filteredPosts</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">});</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#E2817F;--1:#B23834\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"// (function to go inside src/pages/tags/[tag].astro)export async function getStaticPaths({ }) {  const allPosts = Astro.fetchContent(&#x27;../posts/*.md&#x27;);  const sortedPosts = allPosts.sort((a, b) => new Date(b.date) - new Date(a.date));  const allTags = new Set();  sortedPosts.map(post => {      post.tags &#x26;&#x26; post.tags.map(tag => allTags.add(tag))  })  return Array.from(allTags).map((tag) => {    const filteredPosts = sortedPosts.filter((post) => post.tags.includes(tag))    return {      params: { tag },      props: {        posts: filteredPosts      }    };  });}\"><div></div></button></div></figure></div>\n<p>And now… yes, we have tags! You can <a href=\"/tags\">see the list of tags</a> and you can click on any tag to be taken to its tag page.</p>\n<h2 id=\"linking-to-tag-pages-elsewhere-on-the-site\">Linking to tag pages elsewhere on the site</h2>\n<p>You might notice that on this post’s page itself, you can see a list of clickable tags generated from its front matter: <code dir=\"auto\">tags: [\"blogging\", \"astro\"]</code>. This is an array that can be used in any <code dir=\"auto\">.astro</code> component that fetches your front matter data.</p>\n<p>Now that I have tag pages, I can update my <code dir=\"auto\">MarkdownPostLayout.astro</code> so that each post displays its own linked tags. Here’s a simplified version of this nested layout, which is itself inside my <code dir=\"auto\">&#x3C;BaseLayout></code> (so that these posts look like all my other pages). I’m displying each tag, linked to its own tag page, between the posts title and the author/date.</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/layouts/MarkdownPostLayout.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> BaseLayout </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">'</span><span style=\"--0:#ECC48D;--1:#984E4D\">../layouts/BaseLayout.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">'</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const {</span><span style=\"--0:#82AAFF;--1:#3B61B0\">content</span><span style=\"--0:#C792EA;--1:#8844AE\">} = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">title</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> = </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">content</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">h1</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">content</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">h1</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">style</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">display:flex;</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">            </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">content</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">tags</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">tag</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">>&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">/tags/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">tag</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">tag</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">>&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span><span style=\"--0:#E2817F;--1:#B23834\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#D6DEEB;--1:#403F53\">Written by: </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">content</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">author</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\"> on </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">postDate</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">article</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">slot</span><span style=\"--0:#7FDBCA\"> /></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">article</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">>&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">/posts</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span><span style=\"--0:#D6DEEB;--1:#403F53\">See more posts ...</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">>&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;/</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import BaseLayout from &#x27;../layouts/BaseLayout.astro&#x27;const {content} = Astro.props;---<BaseLayout title = {content.title}>    <main>        <h1>{content.title}</h1>        <div style=&#x22;display:flex;&#x22;>            {content.tags.map((tag) => <p><a href={&#x60;/tags/${tag}&#x60;}>{tag}</a></p>)}        </div>        <p>Written by: {content.author} on {postDate}</p>        <article>          <slot />        </article>        <p><a href=&#x22;/posts&#x22;>See more posts ...</a></p>    </main></BaseLayout>\"><div></div></button></div></figure></div>\n<p>Similarly, I updated both my main Blog page showing my recent posts, as well as my full Post Archive listing to include these linked tags along with other post content.</p>\n<p>I think it’s safe to say you can now find tags all over the place on this blog! So, you have no excuse for not checking them out.  ;)</p>",{headings:1542,localImagePaths:1573,remoteImagePaths:1574,frontmatter:1575,imagePaths:1579},[1543,1546,1549,1552,1555,1558,1561,1564,1567,1570],{depth:75,slug:1544,text:1545},"dynaming-routing-to-create-pages-that-arent-there","Dynaming Routing to create pages that… “aren’t there”",{depth:75,slug:1547,text:1548},"creating-a-tag-list-page","Creating a ‘Tag List’ page",{depth:75,slug:1550,text:1551},"creating-individual-tag-pages","Creating individual tag pages",{depth:85,slug:1553,text:1554},"page-slugs--url-routes","Page slugs / url routes",{depth:85,slug:1556,text:1557},"page-layout","Page Layout",{depth:85,slug:1559,text:1560},"page-content","Page Content",{depth:85,slug:1562,text:1563},"page-logic","Page Logic",{depth:75,slug:1565,text:1566},"astro-page-component","Astro Page Component",{depth:75,slug:1568,text:1569},"using-getstaticpaths-to-fetch-tag-and-post-data","Using getStaticPaths() to fetch tag and post data",{depth:75,slug:1571,text:1572},"linking-to-tag-pages-elsewhere-on-the-site","Linking to tag pages elsewhere on the site",[],[],{title:1527,description:1528,authors:1576,date:1577,excerpt:1534,tags:1578},[166],["Date","2022-01-12T00:00:00.000Z"],[929,928],[],"blog/rewrite-react-as-astro",{id:1580,data:1582,body:1592,filePath:1593,digest:1594,rendered:1595},{title:1583,description:1584,editUrl:23,head:1585,template:42,sidebar:1586,pagefind:23,draft:14,authors:1588,date:1589,excerpt:1590,tags:1591},"Rewriting a React Component as an Astro Component","Walking through converting a .jsx React component to an Astro component",[],{hidden:14,attrs:1587},{},[166],["Date","2021-09-09T00:00:00.000Z"],"I'd been using a lot of components in my Astro blog, but I realized that they were almost all *React* components, because that's what I know. So, I wanted to try reproducing some functionality by replacing a React component with a corresponding Astro component.",[1278,928],"# Rewriting a React/JSX Component as an Astro Component\n\nAstro describes their component syntax as \"HTML enhanced with JavaScript.\" *(\"Hey, **I'm** a person who knows HTML and JavaScript...\")*\n\nFrom Astro's docs:\n>Astro component syntax is a superset of HTML ... An Astro component represents some snippet of HTML in your project.\n\n\nHere's what my test Astro page looked like:\n```astro\n// src/pages/flickr-test.astro\n---\nimport BaseLayout from \"../layouts/BaseLayout.astro\";\nimport FlickrPhoto from \"../components/FlickrPhoto.jsx\"; // Note: importing a jsx component\nconst allPhotosResponse = await fetch(`https://www.flickr.com/services/rest/?...`);\nconst allPhotosResult = await allPhotosResponse.json();\nconst allPhotos = allPhotosResult.photos.photo;\n---\n<BaseLayout title = \"Flickr Import Test Page\">\n    <main>\n        <h1>Test of \"Get all my public photos\" from Flickr</h1> \n        {allPhotos.map((photo) => (\n            <FlickrPhoto photoprops = {photo} client:load />\n        ))}\n    </main>\n</BaseLayout>\n```\nThis page renders a list of my Flickr images, showing a photo with a link back to Flickr, and captioning with both the image title and the photo ID number.\n\n... and here's what my React component looked like:\n```jsx\n// src/components/FlickrPhoto.jsx\nimport React from \"react\";\n\nexport default function FlickrPhoto({photoprops}) {\n    const { id, secret, title } = photoprops\n    const picsrc = `https://live.staticflickr.com/65535/${id}_${secret}_z.jpg`\n    const picurl = `https://www.flickr.com/photos/sarahrainsberger/${id}`\n    return(\n        <div>\n            <p>{title} - {id}</p>\n            <a href={picurl}><img src={picsrc} width=\"640\" alt={title} /></a>\n        </div>\n    )\n}\n```\nTo write the new Astro component that performed the same function as the old React component, I used much of the same code, but the structure is slightly different.\n\n### React Component Structure vs Astro Component Structure\nA React component (at least, a small one like this) is a **function that must be exported.** This function can take props passed from the Astro page which can then be destructured and used within the function. This function's **return** is what generates the HTML to be rendered to the page.\n\nAn Astro component, however, is **HTML with a frontmatter component script inside a \"code fence\" with full support for JavaScript and TypeScript that will run server-side during build and provides values available to the HTML.** A function is not explicitly written (nor is it exported), but the pieces of the Astro component do correspond to a JSX function: Astro's \"code fence\" is analagous to the part of the function before the render(), and its main body corresponds to function's render(). So, we can create the same component functionality just with a little slicing and dicing of the code we already have.\n\n### The functions performed by the component to be reproduced\nMy Astro page fetches data about my photos from Flickr, and maps over the resulting photos generating a \"FlickrPhoto\" (my component!) for each one. `<FlickrPhoto />` is passed information about each individual photo as a `photoprops` object. The properties of interest (`id`, `title`, and `secret`) are first destructured within my FlickrPhoto function, then used as variables throughout to generate an image source link and page url for the photo. Additionally, these variables are used to determine what the page should display, in this case some properties as text, and also the image with a link back to its page on Flickr.\n\n### Reproducing the non-rendering actions from a React function in an Astro code fence\nThe *non-rendering* actions my React function performs are:\n1. accept props\n2. destructure props\n3. use the destructured properties to create some https links\n\nThese are the actions that now need to occur in my Astro code fence, and here's what it looks like:\n\n```astro\n---\nconst { photoprops } = Astro.props\nconst { id, title, secret } = photoprops\nconst picsrc = `https://live.staticflickr.com/65535/${id}_${secret}_z.jpg`\nconst picurl = `https://www.flickr.com/photos/sarahrainsberger/${id}`\n---\n```\nSo what's different?\n|React Component | Astro Component |\n--- | --- \n|props passed as the argument of a function |props defined in code fence via Astro.props|\n|props object destructured within the function body|props object destructured in the code fence|\n|variables defined in the function body|variables defined in the code fence|\n\nBut, notice that other than where/how props are imported for use by the component, the JavaScript-y goodness is identical!\n\n### Reproducing the rendering of a React function in an Astro component file\nThe *rendering* actions my React function performs are:\n1. create a `div` for each photo\n2. display the photo's title and id number as text\n3. display an image of the photo with a link back to the photo's page\n\nThese are the actions that now need to occur in my Astro code, and here's what it looks like:\n\n```astro\n<div>\n  <p>{title} - {id}</p>\n  <a href={picurl} ><img src={picsrc} width=\"640\" alt={title} /></a>\n</div>\n```\nSo what's different?\n\n|React Component | Astro Component |\n--- | --- \nContent to be rendered occurs within the render() function | Content to be rendered exists on its own, in the main body of the component\nThe function needs to be exported so that another file can import it | Astro components do not need to be explicitly exported; they are available to other components simply by importing\n\nBut, the `div` and all its contents are exactly the same!\n\nSo the entire Astro component that replaces my React component is:\n\n```astro\n// src/components/FlickrPhoto.astro\n---\nconst { photoprops } = Astro.props\nconst { id, title, secret } = photoprops\nconst picsrc= `https://live.staticflickr.com/65535/${id}_${secret}_z.jpg`\nconst picurl= `https://www.flickr.com/photos/sarahrainsberger/${id}`\n---\n<div>\n  <p>{title} - {id}</p>\n  <a href={picurl} ><img src={picsrc} width=\"640\" alt={title} /></a>\n</div>\n```\n### Using the new Astro component in the page\nTo make the switch to using this new Astro component on my page, I had to change the import on my Astro page from .jsx to .astro (because otherwise, my two files had the same name and were in the same location) ... and that was the *only* change required on the page itself! Yay!","src/content/docs/blog/rewrite-react-as-astro.md","8dbafc44f909d388",{html:1596,metadata:1597},"<h1 id=\"rewriting-a-reactjsx-component-as-an-astro-component\">Rewriting a React/JSX Component as an Astro Component</h1>\n<p>Astro describes their component syntax as “HTML enhanced with JavaScript.” <em>(“Hey, <strong>I’m</strong> a person who knows HTML and JavaScript…”)</em></p>\n<p>From Astro’s docs:</p>\n<blockquote>\n<p>Astro component syntax is a superset of HTML … An Astro component represents some snippet of HTML in your project.</p>\n</blockquote>\n<p>Here’s what my test Astro page looked like:</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.tm3va.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/pages/flickr-test.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> BaseLayout </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">../layouts/BaseLayout.astro</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> FlickrPhoto </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">../components/FlickrPhoto.jsx</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">; </span><span style=\"--0:#919F9F;--1:#5D6376\">// Note: importing a jsx component</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">allPhotosResponse</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#82AAFF;--1:#3B61B0\">fetch</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://www.flickr.com/services/rest/?...</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">allPhotosResult</span><span style=\"--0:#C792EA;--1:#8844AE\"> = await </span><span style=\"--0:#D6DEEB;--1:#403F53\">allPhotosResponse</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">json</span><span style=\"--0:#D6DEEB;--1:#403F53\">();</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">allPhotos</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">allPhotosResult</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#FAF39F;--1:#111111\">photos</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">photo</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">title</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> = </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">Flickr Import Test Page</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">h1</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#D6DEEB;--1:#403F53\">Test of \"Get all my public photos\" from Flickr</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">h1</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">allPhotos</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#82AAFF;--1:#3B61B0\">map</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">photo</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">=></span><span style=\"--0:#D6DEEB;--1:#403F53\"> (</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">            </span><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;</span><span style=\"--0:#F78C6C;--1:#AA0982\">FlickrPhoto</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">photoprops</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\"> </span><span style=\"--0:#C792EA\">=</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">photo</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">client</span><span style=\"--0:#7FDBCA;--1:#8844AE\">:</span><span style=\"--0:#C5E478;--1:#3B61B0\">load</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> /></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">))</span><span style=\"--0:#E2817F;--1:#B23834\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">main</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#8844AE\">&#x3C;/</span><span style=\"--0:#C5E478;--1:#3B61B0\">BaseLayout</span><span style=\"--0:#7FDBCA;--1:#8844AE\">></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---import BaseLayout from &#x22;../layouts/BaseLayout.astro&#x22;;import FlickrPhoto from &#x22;../components/FlickrPhoto.jsx&#x22;; // Note: importing a jsx componentconst allPhotosResponse = await fetch(&#x60;https://www.flickr.com/services/rest/?...&#x60;);const allPhotosResult = await allPhotosResponse.json();const allPhotos = allPhotosResult.photos.photo;---<BaseLayout title = &#x22;Flickr Import Test Page&#x22;>    <main>        <h1>Test of &#x22;Get all my public photos&#x22; from Flickr</h1>        {allPhotos.map((photo) => (            <FlickrPhoto photoprops = {photo} client:load />        ))}    </main></BaseLayout>\"><div></div></button></div></figure></div>\n<p>This page renders a list of my Flickr images, showing a photo with a link back to Flickr, and captioning with both the image title and the photo ID number.</p>\n<p>… and here’s what my React component looked like:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/components/FlickrPhoto.jsx</span></figcaption><pre data-language=\"jsx\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">import</span><span style=\"--0:#D6DEEB;--1:#403F53\"> React </span><span style=\"--0:#C792EA;--1:#8844AE\">from</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">react</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">export</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">default</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#C792EA;--1:#8844AE\">function</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">FlickrPhoto</span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">{</span><span style=\"--0:#D7DBE0\">photoprops</span><span style=\"--0:#D6DEEB\">}</span></span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">id</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">secret</span><span style=\"--0:#889FB2;--1:#4D667B\">,</span><span style=\"--0:#C792EA;--1:#8844AE\"> </span><span style=\"--0:#82AAFF;--1:#3B61B0\">title</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D7DBE0;--1:#403F53\">photoprops</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">picsrc</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://live.staticflickr.com/65535/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D7DBE0;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#ECC48D;--1:#3B61B0\">_</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D7DBE0;--1:#403F53\">secret</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#ECC48D;--1:#3B61B0\">_z.jpg</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">picurl</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://www.flickr.com/photos/sarahrainsberger/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D7DBE0;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C792EA;--1:#8844AE\">return</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">            </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D7DBE0;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\"> - </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D7DBE0;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">            </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D7DBE0;--1:#403F53\">picurl</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">>&#x3C;</span><span style=\"--0:#CAECE6\">img</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">src</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D7DBE0;--1:#403F53\">picsrc</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">width</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">640</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">alt</span><span style=\"--0:#C792EA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D7DBE0;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\"> />&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">)</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"import React from &#x22;react&#x22;;export default function FlickrPhoto({photoprops}) {    const { id, secret, title } = photoprops    const picsrc = &#x60;https://live.staticflickr.com/65535/${id}_${secret}_z.jpg&#x60;    const picurl = &#x60;https://www.flickr.com/photos/sarahrainsberger/${id}&#x60;    return(        <div>            <p>{title} - {id}</p>            <a href={picurl}><img src={picsrc} width=&#x22;640&#x22; alt={title} /></a>        </div>    )}\"><div></div></button></div></figure></div>\n<p>To write the new Astro component that performed the same function as the old React component, I used much of the same code, but the structure is slightly different.</p>\n<h3 id=\"react-component-structure-vs-astro-component-structure\">React Component Structure vs Astro Component Structure</h3>\n<p>A React component (at least, a small one like this) is a <strong>function that must be exported.</strong> This function can take props passed from the Astro page which can then be destructured and used within the function. This function’s <strong>return</strong> is what generates the HTML to be rendered to the page.</p>\n<p>An Astro component, however, is <strong>HTML with a frontmatter component script inside a “code fence” with full support for JavaScript and TypeScript that will run server-side during build and provides values available to the HTML.</strong> A function is not explicitly written (nor is it exported), but the pieces of the Astro component do correspond to a JSX function: Astro’s “code fence” is analagous to the part of the function before the render(), and its main body corresponds to function’s render(). So, we can create the same component functionality just with a little slicing and dicing of the code we already have.</p>\n<h3 id=\"the-functions-performed-by-the-component-to-be-reproduced\">The functions performed by the component to be reproduced</h3>\n<p>My Astro page fetches data about my photos from Flickr, and maps over the resulting photos generating a “FlickrPhoto” (my component!) for each one. <code dir=\"auto\">&#x3C;FlickrPhoto /></code> is passed information about each individual photo as a <code dir=\"auto\">photoprops</code> object. The properties of interest (<code dir=\"auto\">id</code>, <code dir=\"auto\">title</code>, and <code dir=\"auto\">secret</code>) are first destructured within my FlickrPhoto function, then used as variables throughout to generate an image source link and page url for the photo. Additionally, these variables are used to determine what the page should display, in this case some properties as text, and also the image with a link back to its page on Flickr.</p>\n<h3 id=\"reproducing-the-non-rendering-actions-from-a-react-function-in-an-astro-code-fence\">Reproducing the non-rendering actions from a React function in an Astro code fence</h3>\n<p>The <em>non-rendering</em> actions my React function performs are:</p>\n<ol>\n<li>accept props</li>\n<li>destructure props</li>\n<li>use the destructured properties to create some https links</li>\n</ol>\n<p>These are the actions that now need to occur in my Astro code fence, and here’s what it looks like:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">photoprops</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">id</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#82AAFF;--1:#3B61B0\">title</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#82AAFF;--1:#3B61B0\">secret</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">photoprops</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">picsrc</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://live.staticflickr.com/65535/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#ECC48D;--1:#3B61B0\">_</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">secret</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#ECC48D;--1:#3B61B0\">_z.jpg</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">picurl</span><span style=\"--0:#C792EA;--1:#8844AE\"> = </span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://www.flickr.com/photos/sarahrainsberger/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---const { photoprops } = Astro.propsconst { id, title, secret } = photopropsconst picsrc = &#x60;https://live.staticflickr.com/65535/${id}_${secret}_z.jpg&#x60;const picurl = &#x60;https://www.flickr.com/photos/sarahrainsberger/${id}&#x60;---\"><div></div></button></div></figure></div>\n<p>So what’s different?</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>React Component</th><th>Astro Component</th></tr></thead><tbody><tr><td>props passed as the argument of a function</td><td>props defined in code fence via Astro.props</td></tr><tr><td>props object destructured within the function body</td><td>props object destructured in the code fence</td></tr><tr><td>variables defined in the function body</td><td>variables defined in the code fence</td></tr></tbody></table>\n<p>But, notice that other than where/how props are imported for use by the component, the JavaScript-y goodness is identical!</p>\n<h3 id=\"reproducing-the-rendering-of-a-react-function-in-an-astro-component-file\">Reproducing the rendering of a React function in an Astro component file</h3>\n<p>The <em>rendering</em> actions my React function performs are:</p>\n<ol>\n<li>create a <code dir=\"auto\">div</code> for each photo</li>\n<li>display the photo’s title and id number as text</li>\n<li>display an image of the photo with a link back to the photo’s page</li>\n</ol>\n<p>These are the actions that now need to occur in my Astro code, and here’s what it looks like:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\"> - </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">picurl</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\"> >&#x3C;</span><span style=\"--0:#CAECE6\">img</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">src</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">picsrc</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">width</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">640</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">alt</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\"> />&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"<div>  <p>{title} - {id}</p>  <a href={picurl} ><img src={picsrc} width=&#x22;640&#x22; alt={title} /></a></div>\"><div></div></button></div></figure></div>\n<p>So what’s different?</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>React Component</th><th>Astro Component</th></tr></thead><tbody><tr><td>Content to be rendered occurs within the render() function</td><td>Content to be rendered exists on its own, in the main body of the component</td></tr><tr><td>The function needs to be exported so that another file can import it</td><td>Astro components do not need to be explicitly exported; they are available to other components simply by importing</td></tr></tbody></table>\n<p>But, the <code dir=\"auto\">div</code> and all its contents are exactly the same!</p>\n<p>So the entire Astro component that replaces my React component is:</p>\n<div class=\"expressive-code\"><figure class=\"frame has-title not-content\"><figcaption class=\"header\"><span class=\"title\">src/components/FlickrPhoto.astro</span></figcaption><pre data-language=\"astro\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">photoprops</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">Astro</span><span style=\"--0:#C792EA;--1:#8844AE\">.</span><span style=\"--0:#7FDBCA;--1:#096E72\">props</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const { </span><span style=\"--0:#82AAFF;--1:#3B61B0\">id</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#82AAFF;--1:#3B61B0\">title</span><span style=\"--0:#C792EA;--1:#8844AE\">, </span><span style=\"--0:#82AAFF;--1:#3B61B0\">secret</span><span style=\"--0:#C792EA;--1:#8844AE\"> } = </span><span style=\"--0:#D6DEEB;--1:#403F53\">photoprops</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">picsrc</span><span style=\"--0:#C792EA;--1:#8844AE\">= </span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://live.staticflickr.com/65535/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#ECC48D;--1:#3B61B0\">_</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">secret</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#ECC48D;--1:#3B61B0\">_z.jpg</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8844AE\">const </span><span style=\"--0:#82AAFF;--1:#3B61B0\">picurl</span><span style=\"--0:#C792EA;--1:#8844AE\">= </span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span><span style=\"--0:#ECC48D;--1:#3B61B0\">https://www.flickr.com/photos/sarahrainsberger/</span><span style=\"--0:#E2817F;--1:#B23834\">${</span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">`</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#919F9F;--1:#5F636F\">---</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\"> - </span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">id</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">p</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">href</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">picurl</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\"> >&#x3C;</span><span style=\"--0:#CAECE6\">img</span><span style=\"--0:#7FDBCA\"> </span></span><span style=\"--0:#C5E478;--1:#3B61B0\">src</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">picsrc</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">width</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#984E4D\">640</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#7FDBCA;--1:#8844AE\"> </span><span style=\"--0:#C5E478;--1:#3B61B0\">alt</span><span style=\"--0:#7FDBCA;--1:#8844AE\">=</span><span style=\"--0:#E2817F;--1:#B23834\">{</span><span style=\"--0:#D6DEEB;--1:#403F53\">title</span><span style=\"--0:#E2817F;--1:#B23834\">}</span><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\"> />&#x3C;/</span><span style=\"--0:#CAECE6\">a</span><span style=\"--0:#7FDBCA\">></span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--1:#8844AE\"><span style=\"--0:#7FDBCA\">&#x3C;/</span><span style=\"--0:#CAECE6\">div</span><span style=\"--0:#7FDBCA\">></span></span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"---const { photoprops } = Astro.propsconst { id, title, secret } = photopropsconst picsrc= &#x60;https://live.staticflickr.com/65535/${id}_${secret}_z.jpg&#x60;const picurl= &#x60;https://www.flickr.com/photos/sarahrainsberger/${id}&#x60;---<div>  <p>{title} - {id}</p>  <a href={picurl} ><img src={picsrc} width=&#x22;640&#x22; alt={title} /></a></div>\"><div></div></button></div></figure></div>\n<h3 id=\"using-the-new-astro-component-in-the-page\">Using the new Astro component in the page</h3>\n<p>To make the switch to using this new Astro component on my page, I had to change the import on my Astro page from .jsx to .astro (because otherwise, my two files had the same name and were in the same location) … and that was the <em>only</em> change required on the page itself! Yay!</p>",{headings:1598,localImagePaths:1617,remoteImagePaths:1618,frontmatter:1619,imagePaths:1623},[1599,1602,1605,1608,1611,1614],{depth:938,slug:1600,text:1601},"rewriting-a-reactjsx-component-as-an-astro-component","Rewriting a React/JSX Component as an Astro Component",{depth:85,slug:1603,text:1604},"react-component-structure-vs-astro-component-structure","React Component Structure vs Astro Component Structure",{depth:85,slug:1606,text:1607},"the-functions-performed-by-the-component-to-be-reproduced","The functions performed by the component to be reproduced",{depth:85,slug:1609,text:1610},"reproducing-the-non-rendering-actions-from-a-react-function-in-an-astro-code-fence","Reproducing the non-rendering actions from a React function in an Astro code fence",{depth:85,slug:1612,text:1613},"reproducing-the-rendering-of-a-react-function-in-an-astro-component-file","Reproducing the rendering of a React function in an Astro component file",{depth:85,slug:1615,text:1616},"using-the-new-astro-component-in-the-page","Using the new Astro component in the page",[],[],{title:1583,description:1584,authors:1620,date:1621,excerpt:1590,tags:1622},[166],["Date","2021-09-09T00:00:00.000Z"],[1278,928],[]];

export { _astro_dataLayerContent as default };
